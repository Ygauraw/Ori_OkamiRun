com.badlogic.gdx.physics.box2d.Body
com.badlogic.gdx.physics.box2d.Body: long jniCreateFixture(long,long,float,float,float,boolean,short,short,short)
com.badlogic.gdx.physics.box2d.Body: long jniCreateFixture(long,long,float)
com.badlogic.gdx.physics.box2d.Body: void jniDestroyFixture(long,long)
com.badlogic.gdx.physics.box2d.Body: void jniSetTransform(long,float,float,float)
com.badlogic.gdx.physics.box2d.Body: void jniGetTransform(long,float[])
com.badlogic.gdx.physics.box2d.Body: void jniGetPosition(long,float[])
com.badlogic.gdx.physics.box2d.Body: float jniGetAngle(long)
com.badlogic.gdx.physics.box2d.Body: void jniGetWorldCenter(long,float[])
com.badlogic.gdx.physics.box2d.Body: void jniGetLocalCenter(long,float[])
com.badlogic.gdx.physics.box2d.Body: void jniSetLinearVelocity(long,float,float)
com.badlogic.gdx.physics.box2d.Body: void jniGetLinearVelocity(long,float[])
com.badlogic.gdx.physics.box2d.Body: void jniSetAngularVelocity(long,float)
com.badlogic.gdx.physics.box2d.Body: float jniGetAngularVelocity(long)
com.badlogic.gdx.physics.box2d.Body: void jniApplyForce(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.Body: void jniApplyTorque(long,float)
com.badlogic.gdx.physics.box2d.Body: void jniApplyLinearImpulse(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.Body: void jniApplyAngularImpulse(long,float)
com.badlogic.gdx.physics.box2d.Body: float jniGetMass(long)
com.badlogic.gdx.physics.box2d.Body: float jniGetInertia(long)
com.badlogic.gdx.physics.box2d.Body: void jniGetMassData(long,float[])
com.badlogic.gdx.physics.box2d.Body: void jniSetMassData(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.Body: void jniResetMassData(long)
com.badlogic.gdx.physics.box2d.Body: void jniGetWorldPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: void jniGetWorldVector(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: void jniGetLocalPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: void jniGetLocalVector(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: void jniGetLinearVelocityFromWorldPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: void jniGetLinearVelocityFromLocalPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: float jniGetLinearDamping(long)
com.badlogic.gdx.physics.box2d.Body: void jniSetLinearDamping(long,float)
com.badlogic.gdx.physics.box2d.Body: float jniGetAngularDamping(long)
com.badlogic.gdx.physics.box2d.Body: void jniSetAngularDamping(long,float)
com.badlogic.gdx.physics.box2d.Body: void jniSetType(long,int)
com.badlogic.gdx.physics.box2d.Body: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Body: void jniSetBullet(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean jniIsBullet(long)
com.badlogic.gdx.physics.box2d.Body: void jniSetSleepingAllowed(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean jniIsSleepingAllowed(long)
com.badlogic.gdx.physics.box2d.Body: void jniSetAwake(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean jniIsAwake(long)
com.badlogic.gdx.physics.box2d.Body: void jniSetActive(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.Body: void jniSetFixedRotation(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean jniIsFixedRotation(long)
com.badlogic.gdx.physics.box2d.PolygonShape
com.badlogic.gdx.physics.box2d.PolygonShape: long newPolygonShape()
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSet(long,float[])
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSetAsBox(long,float,float)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSetAsBox(long,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSetAsEdge(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.PolygonShape: int jniGetVertexCount(long)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniGetVertex(long,int,float[])
com.badlogic.gdx.physics.box2d.Shape: float jniGetRadius(long)
com.badlogic.gdx.physics.box2d.Shape: void jniSetRadius(long,float)
com.badlogic.gdx.physics.box2d.Shape: void jniDispose(long)
com.badlogic.gdx.physics.box2d.Shape: int jniGetType(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void jniSetLength(long,float)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: float jniGetLength(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void jniSetFrequency(long,float)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: float jniGetFrequency(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: void jniSetDampingRatio(long,float)
com.badlogic.gdx.physics.box2d.joints.DistanceJoint: float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.CircleShape
com.badlogic.gdx.physics.box2d.CircleShape: long newCircleShape()
com.badlogic.gdx.physics.box2d.CircleShape: void jniGetPosition(long,float[])
com.badlogic.gdx.physics.box2d.CircleShape: void jniSetPosition(long,float,float)
com.badlogic.gdx.physics.box2d.Shape: float jniGetRadius(long)
com.badlogic.gdx.physics.box2d.Shape: void jniSetRadius(long,float)
com.badlogic.gdx.physics.box2d.Shape: void jniDispose(long)
com.badlogic.gdx.physics.box2d.Shape: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Shape
com.badlogic.gdx.physics.box2d.Shape: float jniGetRadius(long)
com.badlogic.gdx.physics.box2d.Shape: void jniSetRadius(long,float)
com.badlogic.gdx.physics.box2d.Shape: void jniDispose(long)
com.badlogic.gdx.physics.box2d.Shape: int jniGetType(long)
com.badlogic.gdx.physics.box2d.World
com.badlogic.gdx.physics.box2d.World: long newWorld(float,float,boolean)
com.badlogic.gdx.physics.box2d.World: long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float)
com.badlogic.gdx.physics.box2d.World: void jniDestroyBody(long,long)
com.badlogic.gdx.physics.box2d.World: long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateGearJoint(long,long,long,boolean,long,long,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateLineJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,boolean,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: void jniDestroyJoint(long,long)
com.badlogic.gdx.physics.box2d.World: void jniStep(long,float,int,int)
com.badlogic.gdx.physics.box2d.World: void jniClearForces(long)
com.badlogic.gdx.physics.box2d.World: void jniSetWarmStarting(long,boolean)
com.badlogic.gdx.physics.box2d.World: void jniSetContiousPhysics(long,boolean)
com.badlogic.gdx.physics.box2d.World: int jniGetProxyCount(long)
com.badlogic.gdx.physics.box2d.World: int jniGetBodyCount(long)
com.badlogic.gdx.physics.box2d.World: int jniGetJointcount(long)
com.badlogic.gdx.physics.box2d.World: int jniGetContactCount(long)
com.badlogic.gdx.physics.box2d.World: void jniSetGravity(long,float,float)
com.badlogic.gdx.physics.box2d.World: void jniGetGravity(long,float[])
com.badlogic.gdx.physics.box2d.World: boolean jniIsLocked(long)
com.badlogic.gdx.physics.box2d.World: void jniSetAutoClearForces(long,boolean)
com.badlogic.gdx.physics.box2d.World: boolean jniGetAutoClearForces(long)
com.badlogic.gdx.physics.box2d.World: void jniQueryAABB(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: void jniGetContactList(long,long[])
com.badlogic.gdx.physics.box2d.World: void jniDispose(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetJointAngle(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetJointSpeed(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: boolean jniIsLimitEnabled(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniEnableLimit(long,boolean)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetLowerLimit(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetUpperLimit(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniSetLimits(long,float,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: boolean jniIsMotorEnabled(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniEnableMotor(long,boolean)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniSetMotorSpeed(long,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetMotorSpeed(long)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: void jniSetMaxMotorTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint: float jniGetMotorTorque(long)
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.joints.LineJoint
com.badlogic.gdx.physics.box2d.joints.LineJoint: float jniGetJointTranslation(long)
com.badlogic.gdx.physics.box2d.joints.LineJoint: float jniGetJointSpeed(long)
com.badlogic.gdx.physics.box2d.joints.LineJoint: boolean jniIsLimitEnabled(long)
com.badlogic.gdx.physics.box2d.joints.LineJoint: void jniEnableLimit(long,boolean)
com.badlogic.gdx.physics.box2d.joints.LineJoint: float jniGetLowerLimit(long)
com.badlogic.gdx.physics.box2d.joints.LineJoint: float jniGetUpperLimit(long)
com.badlogic.gdx.physics.box2d.joints.LineJoint: void jniSetLimits(long,float,float)
com.badlogic.gdx.physics.box2d.joints.LineJoint: boolean jniIsMotorEnabled(long)
com.badlogic.gdx.physics.box2d.joints.LineJoint: void jniEnableMotor(long,boolean)
com.badlogic.gdx.physics.box2d.joints.LineJoint: void jniSetMotorSpeed(long,float)
com.badlogic.gdx.physics.box2d.joints.LineJoint: float jniGetMotorSpeed(long)
com.badlogic.gdx.physics.box2d.joints.LineJoint: void jniSetMaxMotorForce(long,float)
com.badlogic.gdx.physics.box2d.joints.LineJoint: float jniGetMaxMotorForce(long)
com.badlogic.gdx.physics.box2d.joints.LineJoint: float jniGetMotorForce(long)
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.Fixture
com.badlogic.gdx.physics.box2d.Fixture: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Fixture: long jniGetShape(long)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetSensor(long,boolean)
com.badlogic.gdx.physics.box2d.Fixture: boolean jniIsSensor(long)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetFilterData(long,short,short,short)
com.badlogic.gdx.physics.box2d.Fixture: void jniGetFilterData(long,short[])
com.badlogic.gdx.physics.box2d.Fixture: boolean jniTestPoint(long,float,float)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetDensity(long,float)
com.badlogic.gdx.physics.box2d.Fixture: float jniGetDensity(long)
com.badlogic.gdx.physics.box2d.Fixture: float jniGetFriction(long)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetFriction(long,float)
com.badlogic.gdx.physics.box2d.Fixture: float jniGetRestitution(long)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetRestitution(long,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetJointTranslation(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetJointSpeed(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: boolean jniIsLimitEnabled(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniEnableLimit(long,boolean)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetLowerLimit(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetUpperLimit(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniSetLimits(long,float,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: boolean jniIsMotorEnabled(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniEnableMotor(long,boolean)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniSetMotorSpeed(long,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetMotorSpeed(long)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: void jniSetMaxMotorForce(long,float)
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint: float jniGetMotorForce(long)
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.joints.GearJoint
com.badlogic.gdx.physics.box2d.joints.GearJoint: void jniSetRatio(long,float)
com.badlogic.gdx.physics.box2d.joints.GearJoint: float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.Contact
com.badlogic.gdx.physics.box2d.Contact: int jniGetWorldManifold(long,float[])
com.badlogic.gdx.physics.box2d.Contact: boolean jniIsTouching(long)
com.badlogic.gdx.physics.box2d.Contact: void jniSetEnabled(long,boolean)
com.badlogic.gdx.physics.box2d.Contact: boolean jniIsEnabled(long)
com.badlogic.gdx.physics.box2d.Contact: long jniGetFixtureA(long)
com.badlogic.gdx.physics.box2d.Contact: long jniGetFixtureB(long)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: void jniSetMaxForce(long,float)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: float jniGetMaxForce(long)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: void jniSetMaxTorque(long,float)
com.badlogic.gdx.physics.box2d.joints.FrictionJoint: float jniGetMaxTorque(long)
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: void jniGetGroundAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: void jniGetGroundAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float jniGetLength1(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float jniGetLength2(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.Joint
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetTarget(long,float,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniGetTarget(long,float[])
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetMaxForce(long,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float jniGetMaxForce(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetFrequency(long,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float jniGetFrequency(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetDampingRatio(long,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
org.cocos2d.opengl.GLSurfaceView
org.cocos2d.opengl.GLSurfaceView: GLSurfaceView(android.content.Context,android.util.AttributeSet)
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type[] values()
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String)
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType[] values()
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String)
org.cocos2d.nodes.CCLabel$TextAlignment: org.cocos2d.nodes.CCLabel$TextAlignment[] values()
org.cocos2d.nodes.CCLabel$TextAlignment: org.cocos2d.nodes.CCLabel$TextAlignment valueOf(java.lang.String)
org.cocos2d.menus.CCMenu$MenuState: org.cocos2d.menus.CCMenu$MenuState[] values()
org.cocos2d.menus.CCMenu$MenuState: org.cocos2d.menus.CCMenu$MenuState valueOf(java.lang.String)
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide[] values()
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String)
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values()
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String)
org.cocos2d.types.CGRect$Edge: org.cocos2d.types.CGRect$Edge[] values()
org.cocos2d.types.CGRect$Edge: org.cocos2d.types.CGRect$Edge valueOf(java.lang.String)
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError[] values()
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError valueOf(java.lang.String)
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag[] values()
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag valueOf(java.lang.String)
com.badlogic.gdx.math.collision.Ray
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 origin
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 direction
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.math.collision.Ray: void <clinit>()
com.badlogic.gdx.math.collision.Ray: Ray(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.collision.Ray cpy()
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.Vector3 getEndPoint(float)
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.collision.Ray: java.lang.String toString()
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float)
com.badlogic.gdx.math.collision.Ray: com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray)
com.badlogic.gdx.physics.box2d.Body
com.badlogic.gdx.physics.box2d.Body: long addr
com.badlogic.gdx.physics.box2d.Body: float[] tmp
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.World world
com.badlogic.gdx.physics.box2d.Body: java.util.ArrayList fixtures
com.badlogic.gdx.physics.box2d.Body: java.util.ArrayList joints
com.badlogic.gdx.physics.box2d.Body: java.lang.Object userData
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.Transform transform
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 position
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 worldCenter
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 localCenter
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 linearVelocity
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.MassData massData
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 localPoint
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 worldVector
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 localPoint2
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 localVector
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 linVelWorld
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 linVelLoc
com.badlogic.gdx.physics.box2d.Body: Body(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef)
com.badlogic.gdx.physics.box2d.Body: long jniCreateFixture(long,long,float,float,float,boolean,short,short,short)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float)
com.badlogic.gdx.physics.box2d.Body: long jniCreateFixture(long,long,float)
com.badlogic.gdx.physics.box2d.Body: void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture)
com.badlogic.gdx.physics.box2d.Body: void jniDestroyFixture(long,long)
com.badlogic.gdx.physics.box2d.Body: void setTransform(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.Body: void jniSetTransform(long,float,float,float)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.Transform getTransform()
com.badlogic.gdx.physics.box2d.Body: void jniGetTransform(long,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getPosition()
com.badlogic.gdx.physics.box2d.Body: void jniGetPosition(long,float[])
com.badlogic.gdx.physics.box2d.Body: float getAngle()
com.badlogic.gdx.physics.box2d.Body: float jniGetAngle(long)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getWorldCenter()
com.badlogic.gdx.physics.box2d.Body: void jniGetWorldCenter(long,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLocalCenter()
com.badlogic.gdx.physics.box2d.Body: void jniGetLocalCenter(long,float[])
com.badlogic.gdx.physics.box2d.Body: void setLinearVelocity(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniSetLinearVelocity(long,float,float)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLinearVelocity()
com.badlogic.gdx.physics.box2d.Body: void jniGetLinearVelocity(long,float[])
com.badlogic.gdx.physics.box2d.Body: void setAngularVelocity(float)
com.badlogic.gdx.physics.box2d.Body: void jniSetAngularVelocity(long,float)
com.badlogic.gdx.physics.box2d.Body: float getAngularVelocity()
com.badlogic.gdx.physics.box2d.Body: float jniGetAngularVelocity(long)
com.badlogic.gdx.physics.box2d.Body: void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniApplyForce(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.Body: void applyTorque(float)
com.badlogic.gdx.physics.box2d.Body: void jniApplyTorque(long,float)
com.badlogic.gdx.physics.box2d.Body: void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniApplyLinearImpulse(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.Body: void applyAngularImpulse(float)
com.badlogic.gdx.physics.box2d.Body: void jniApplyAngularImpulse(long,float)
com.badlogic.gdx.physics.box2d.Body: float getMass()
com.badlogic.gdx.physics.box2d.Body: float jniGetMass(long)
com.badlogic.gdx.physics.box2d.Body: float getInertia()
com.badlogic.gdx.physics.box2d.Body: float jniGetInertia(long)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.MassData getMassData()
com.badlogic.gdx.physics.box2d.Body: void jniGetMassData(long,float[])
com.badlogic.gdx.physics.box2d.Body: void setMassData(com.badlogic.gdx.physics.box2d.MassData)
com.badlogic.gdx.physics.box2d.Body: void jniSetMassData(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.Body: void resetMassData()
com.badlogic.gdx.physics.box2d.Body: void jniResetMassData(long)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetWorldPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetWorldVector(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetLocalPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetLocalVector(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetLinearVelocityFromWorldPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Body: void jniGetLinearVelocityFromLocalPoint(long,float,float,float[])
com.badlogic.gdx.physics.box2d.Body: float getLinearDamping()
com.badlogic.gdx.physics.box2d.Body: float jniGetLinearDamping(long)
com.badlogic.gdx.physics.box2d.Body: void setLinearDamping(float)
com.badlogic.gdx.physics.box2d.Body: void jniSetLinearDamping(long,float)
com.badlogic.gdx.physics.box2d.Body: float getAngularDamping()
com.badlogic.gdx.physics.box2d.Body: float jniGetAngularDamping(long)
com.badlogic.gdx.physics.box2d.Body: void setAngularDamping(float)
com.badlogic.gdx.physics.box2d.Body: void jniSetAngularDamping(long,float)
com.badlogic.gdx.physics.box2d.Body: void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType)
com.badlogic.gdx.physics.box2d.Body: void jniSetType(long,int)
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType()
com.badlogic.gdx.physics.box2d.Body: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Body: void setBullet(boolean)
com.badlogic.gdx.physics.box2d.Body: void jniSetBullet(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean isBullet()
com.badlogic.gdx.physics.box2d.Body: boolean jniIsBullet(long)
com.badlogic.gdx.physics.box2d.Body: void setSleepingAllowed(boolean)
com.badlogic.gdx.physics.box2d.Body: void jniSetSleepingAllowed(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean isSleepingAllowed()
com.badlogic.gdx.physics.box2d.Body: boolean jniIsSleepingAllowed(long)
com.badlogic.gdx.physics.box2d.Body: void setAwake(boolean)
com.badlogic.gdx.physics.box2d.Body: void jniSetAwake(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean isAwake()
com.badlogic.gdx.physics.box2d.Body: boolean jniIsAwake(long)
com.badlogic.gdx.physics.box2d.Body: void setActive(boolean)
com.badlogic.gdx.physics.box2d.Body: void jniSetActive(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean isActive()
com.badlogic.gdx.physics.box2d.Body: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.Body: void setFixedRotation(boolean)
com.badlogic.gdx.physics.box2d.Body: void jniSetFixedRotation(long,boolean)
com.badlogic.gdx.physics.box2d.Body: boolean isFixedRotation()
com.badlogic.gdx.physics.box2d.Body: boolean jniIsFixedRotation(long)
com.badlogic.gdx.physics.box2d.Body: java.util.ArrayList getFixtureList()
com.badlogic.gdx.physics.box2d.Body: java.util.ArrayList getJointList()
com.badlogic.gdx.physics.box2d.Body: com.badlogic.gdx.physics.box2d.World getWorld()
com.badlogic.gdx.physics.box2d.Body: java.lang.Object getUserData()
com.badlogic.gdx.physics.box2d.Body: void setUserData(java.lang.Object)
com.badlogic.gdx.physics.box2d.Shape$Type
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type Circle
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type Polygon
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type[] ENUM$VALUES
com.badlogic.gdx.physics.box2d.Shape$Type: void <clinit>()
com.badlogic.gdx.physics.box2d.Shape$Type: Shape$Type(java.lang.String,int)
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type[] values()
com.badlogic.gdx.physics.box2d.Shape$Type: com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String)
com.badlogic.gdx.math.collision.Sphere
com.badlogic.gdx.math.collision.Sphere: float radius
com.badlogic.gdx.math.collision.Sphere: com.badlogic.gdx.math.Vector3 center
com.badlogic.gdx.math.collision.Sphere: Sphere(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Intersector
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 v0
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 v1
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 v2
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Plane p
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 i
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 dir
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 start
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 best
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 tmp1
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 tmp2
com.badlogic.gdx.math.Intersector: com.badlogic.gdx.math.Vector3 tmp3
com.badlogic.gdx.math.Intersector: void <clinit>()
com.badlogic.gdx.math.Intersector: Intersector()
com.badlogic.gdx.math.Intersector: float getLowestPositiveRoot(float,float,float)
com.badlogic.gdx.math.Intersector: boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean isPointInPolygon(java.util.List,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.math.Intersector: float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.Intersector: boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Intersector: boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Intersector: boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Intersector: float det(float,float,float,float)
com.badlogic.gdx.math.Intersector: double detd(double,double,double,double)
com.badlogic.gdx.physics.box2d.PolygonShape
com.badlogic.gdx.physics.box2d.PolygonShape: float[] verts
com.badlogic.gdx.physics.box2d.PolygonShape: void <clinit>()
com.badlogic.gdx.physics.box2d.PolygonShape: PolygonShape()
com.badlogic.gdx.physics.box2d.PolygonShape: PolygonShape(long)
com.badlogic.gdx.physics.box2d.PolygonShape: long newPolygonShape()
com.badlogic.gdx.physics.box2d.PolygonShape: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.PolygonShape: void set(com.badlogic.gdx.math.Vector2[])
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSet(long,float[])
com.badlogic.gdx.physics.box2d.PolygonShape: void setAsBox(float,float)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSetAsBox(long,float,float)
com.badlogic.gdx.physics.box2d.PolygonShape: void setAsBox(float,float,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSetAsBox(long,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.PolygonShape: void setAsEdge(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniSetAsEdge(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.PolygonShape: int getVertexCount()
com.badlogic.gdx.physics.box2d.PolygonShape: int jniGetVertexCount(long)
com.badlogic.gdx.physics.box2d.PolygonShape: void getVertex(int,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.PolygonShape: void jniGetVertex(long,int,float[])
com.badlogic.gdx.physics.box2d.Shape: long addr
com.badlogic.gdx.physics.box2d.Shape: Shape()
com.badlogic.gdx.physics.box2d.Shape: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Shape: float getRadius()
com.badlogic.gdx.physics.box2d.Shape: float jniGetRadius(long)
com.badlogic.gdx.physics.box2d.Shape: void setRadius(float)
com.badlogic.gdx.physics.box2d.Shape: void jniSetRadius(long,float)
com.badlogic.gdx.physics.box2d.Shape: void dispose()
com.badlogic.gdx.physics.box2d.Shape: void jniDispose(long)
com.badlogic.gdx.physics.box2d.Shape: int jniGetType(long)
com.badlogic.gdx.math.Matrix4
com.badlogic.gdx.math.Matrix4: long serialVersionUID
com.badlogic.gdx.math.Matrix4: int M00
com.badlogic.gdx.math.Matrix4: int M01
com.badlogic.gdx.math.Matrix4: int M02
com.badlogic.gdx.math.Matrix4: int M03
com.badlogic.gdx.math.Matrix4: int M10
com.badlogic.gdx.math.Matrix4: int M11
com.badlogic.gdx.math.Matrix4: int M12
com.badlogic.gdx.math.Matrix4: int M13
com.badlogic.gdx.math.Matrix4: int M20
com.badlogic.gdx.math.Matrix4: int M21
com.badlogic.gdx.math.Matrix4: int M22
com.badlogic.gdx.math.Matrix4: int M23
com.badlogic.gdx.math.Matrix4: int M30
com.badlogic.gdx.math.Matrix4: int M31
com.badlogic.gdx.math.Matrix4: int M32
com.badlogic.gdx.math.Matrix4: int M33
com.badlogic.gdx.math.Matrix4: float[] tmp
com.badlogic.gdx.math.Matrix4: float[] val
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Quaternion quat
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 l_vez
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 l_vex
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 l_vey
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 tmpVec
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 tmpMat
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 right
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 tmpForward
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Vector3 tmpUp
com.badlogic.gdx.math.Matrix4: void <clinit>()
com.badlogic.gdx.math.Matrix4: Matrix4()
com.badlogic.gdx.math.Matrix4: Matrix4(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Matrix4: Matrix4(float[])
com.badlogic.gdx.math.Matrix4: Matrix4(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(float[])
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Matrix4: void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 cpy()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 trn(float,float,float)
com.badlogic.gdx.math.Matrix4: float[] getValues()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 tra()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 idt()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 inv()
com.badlogic.gdx.math.Matrix4: float det()
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Matrix4: java.lang.String toString()
com.badlogic.gdx.math.Matrix4: void lerp(com.badlogic.gdx.math.Matrix4,float)
com.badlogic.gdx.math.Matrix4: com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Matrix3
com.badlogic.gdx.math.Matrix3: float DEGREE_TO_RAD
com.badlogic.gdx.math.Matrix3: float[] vals
com.badlogic.gdx.math.Matrix3: Matrix3()
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 idt()
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 setToRotation(float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 setToTranslation(float,float)
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 setToScaling(float,float)
com.badlogic.gdx.math.Matrix3: java.lang.String toString()
com.badlogic.gdx.math.Matrix3: float det()
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 inv()
com.badlogic.gdx.math.Matrix3: void main(java.lang.String[])
com.badlogic.gdx.math.Matrix3: com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3)
com.badlogic.gdx.math.Matrix3: float[] getValues()
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: float referenceAngle
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: boolean enableLimit
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: float lowerAngle
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: float upperAngle
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: boolean enableMotor
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: float motorSpeed
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: float maxMotorTorque
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: RevoluteJointDef()
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.physics.box2d.CircleShape
com.badlogic.gdx.physics.box2d.CircleShape: float[] tmp
com.badlogic.gdx.physics.box2d.CircleShape: com.badlogic.gdx.math.Vector2 position
com.badlogic.gdx.physics.box2d.CircleShape: CircleShape()
com.badlogic.gdx.physics.box2d.CircleShape: long newCircleShape()
com.badlogic.gdx.physics.box2d.CircleShape: CircleShape(long)
com.badlogic.gdx.physics.box2d.CircleShape: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.CircleShape: com.badlogic.gdx.math.Vector2 getPosition()
com.badlogic.gdx.physics.box2d.CircleShape: void jniGetPosition(long,float[])
com.badlogic.gdx.physics.box2d.CircleShape: void setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.CircleShape: void jniSetPosition(long,float,float)
com.badlogic.gdx.physics.box2d.Shape: long addr
com.badlogic.gdx.physics.box2d.Shape: Shape()
com.badlogic.gdx.physics.box2d.Shape: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Shape: float getRadius()
com.badlogic.gdx.physics.box2d.Shape: float jniGetRadius(long)
com.badlogic.gdx.physics.box2d.Shape: void setRadius(float)
com.badlogic.gdx.physics.box2d.Shape: void jniSetRadius(long,float)
com.badlogic.gdx.physics.box2d.Shape: void dispose()
com.badlogic.gdx.physics.box2d.Shape: void jniDispose(long)
com.badlogic.gdx.physics.box2d.Shape: int jniGetType(long)
com.badlogic.gdx.math.Rectangle
com.badlogic.gdx.math.Rectangle: float x
com.badlogic.gdx.math.Rectangle: float y
com.badlogic.gdx.math.Rectangle: float width
com.badlogic.gdx.math.Rectangle: float height
com.badlogic.gdx.math.Rectangle: Rectangle()
com.badlogic.gdx.math.Rectangle: Rectangle(float,float,float,float)
com.badlogic.gdx.math.Rectangle: Rectangle(com.badlogic.gdx.math.Rectangle)
com.badlogic.gdx.math.Rectangle: float getX()
com.badlogic.gdx.math.Rectangle: void setX(float)
com.badlogic.gdx.math.Rectangle: float getY()
com.badlogic.gdx.math.Rectangle: void setY(float)
com.badlogic.gdx.math.Rectangle: float getWidth()
com.badlogic.gdx.math.Rectangle: void setWidth(float)
com.badlogic.gdx.math.Rectangle: float getHeight()
com.badlogic.gdx.math.Rectangle: void setHeight(float)
com.badlogic.gdx.physics.box2d.joints.GearJointDef
com.badlogic.gdx.physics.box2d.joints.GearJointDef: com.badlogic.gdx.physics.box2d.Joint joint1
com.badlogic.gdx.physics.box2d.joints.GearJointDef: com.badlogic.gdx.physics.box2d.Joint joint2
com.badlogic.gdx.physics.box2d.joints.GearJointDef: float ratio
com.badlogic.gdx.physics.box2d.joints.GearJointDef: GearJointDef()
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.utils.LongHashMap$Values
com.badlogic.gdx.utils.LongHashMap$Values: com.badlogic.gdx.utils.LongHashMap this$0
com.badlogic.gdx.utils.LongHashMap$Values: LongHashMap$Values(com.badlogic.gdx.utils.LongHashMap)
com.badlogic.gdx.utils.LongHashMap$Values: java.lang.Object next()
com.badlogic.gdx.utils.LongHashMap$Entries: int index
com.badlogic.gdx.utils.LongHashMap$Entries: com.badlogic.gdx.utils.LongHashMap$Entry entry
com.badlogic.gdx.utils.LongHashMap$Entries: com.badlogic.gdx.utils.LongHashMap this$0
com.badlogic.gdx.utils.LongHashMap$Entries: LongHashMap$Entries(com.badlogic.gdx.utils.LongHashMap)
com.badlogic.gdx.utils.LongHashMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.LongHashMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.LongHashMap$Entries: void remove()
com.badlogic.gdx.utils.LongHashMap$Entries: void reset()
com.badlogic.gdx.physics.box2d.JointDef$JointType
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType Unknown
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType RevoluteJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType PrismaticJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType DistanceJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType PulleyJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType MouseJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType GearJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType LineJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType WeldJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType FrictionJoint
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType[] valueTypes
com.badlogic.gdx.physics.box2d.JointDef$JointType: int value
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType[] ENUM$VALUES
com.badlogic.gdx.physics.box2d.JointDef$JointType: void <clinit>()
com.badlogic.gdx.physics.box2d.JointDef$JointType: JointDef$JointType(java.lang.String,int,int)
com.badlogic.gdx.physics.box2d.JointDef$JointType: int getValue()
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType[] values()
com.badlogic.gdx.physics.box2d.JointDef$JointType: com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String)
com.badlogic.gdx.math.collision.Segment
com.badlogic.gdx.math.collision.Segment: com.badlogic.gdx.math.Vector3 a
com.badlogic.gdx.math.collision.Segment: com.badlogic.gdx.math.Vector3 b
com.badlogic.gdx.math.collision.Segment: Segment(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.Segment: Segment(float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.Filter
com.badlogic.gdx.physics.box2d.Filter: short categoryBits
com.badlogic.gdx.physics.box2d.Filter: short maskBits
com.badlogic.gdx.physics.box2d.Filter: short groupIndex
com.badlogic.gdx.physics.box2d.Filter: Filter()
com.badlogic.gdx.utils.LongHashMap$Keys
com.badlogic.gdx.utils.LongHashMap$Keys: int index
com.badlogic.gdx.utils.LongHashMap$Keys: com.badlogic.gdx.utils.LongHashMap$Entry entry
com.badlogic.gdx.utils.LongHashMap$Keys: com.badlogic.gdx.utils.LongHashMap this$0
com.badlogic.gdx.utils.LongHashMap$Keys: LongHashMap$Keys(com.badlogic.gdx.utils.LongHashMap)
com.badlogic.gdx.utils.LongHashMap$Keys: boolean hasNext()
com.badlogic.gdx.utils.LongHashMap$Keys: long next()
com.badlogic.gdx.utils.LongHashMap$Keys: void remove()
com.badlogic.gdx.utils.LongHashMap$Keys: void reset()
com.badlogic.gdx.math.Plane
com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Vector3 normal
com.badlogic.gdx.math.Plane: float d
com.badlogic.gdx.math.Plane: Plane(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Plane: Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: Plane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: void set(float,float,float,float)
com.badlogic.gdx.math.Plane: float distance(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: boolean isFrontFacing(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: com.badlogic.gdx.math.Vector3 getNormal()
com.badlogic.gdx.math.Plane: float getD()
com.badlogic.gdx.math.Plane: void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Plane: void set(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Plane: java.lang.String toString()
com.badlogic.gdx.math.Frustum
com.badlogic.gdx.math.Frustum: long serialVersionUID
com.badlogic.gdx.math.Frustum: java.util.List planes
com.badlogic.gdx.math.Frustum: float near
com.badlogic.gdx.math.Frustum: float far
com.badlogic.gdx.math.Frustum: float fov
com.badlogic.gdx.math.Frustum: float aspect
com.badlogic.gdx.math.Frustum: float near_width
com.badlogic.gdx.math.Frustum: float near_height
com.badlogic.gdx.math.Frustum: float far_width
com.badlogic.gdx.math.Frustum: float far_height
com.badlogic.gdx.math.Frustum: float tang
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 tmp2
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 X
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 Y
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 Z
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 near_tl
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 near_tr
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 near_bl
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 near_br
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 far_tl
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 far_tr
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 far_bl
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 far_br
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 near_center
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.Vector3 far_center
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.collision.Ray ray
com.badlogic.gdx.math.Frustum: void <clinit>()
com.badlogic.gdx.math.Frustum: Frustum()
com.badlogic.gdx.math.Frustum: java.util.List getPlanes()
com.badlogic.gdx.math.Frustum: void addPlane(com.badlogic.gdx.math.Plane)
com.badlogic.gdx.math.Frustum: void setCameraParameters(float,float,float,float)
com.badlogic.gdx.math.Frustum: void setCameraOrientation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Frustum: java.lang.String toString()
com.badlogic.gdx.math.Frustum: boolean pointInFrustum(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Frustum: boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Frustum: boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Frustum: boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.Frustum: com.badlogic.gdx.math.collision.Ray calculatePickRay(float,float,float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.physics.box2d.MassData
com.badlogic.gdx.physics.box2d.MassData: float mass
com.badlogic.gdx.physics.box2d.MassData: com.badlogic.gdx.math.Vector2 center
com.badlogic.gdx.physics.box2d.MassData: float I
com.badlogic.gdx.physics.box2d.MassData: MassData()
com.badlogic.gdx.physics.box2d.joints.LineJointDef
com.badlogic.gdx.physics.box2d.joints.LineJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.LineJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.LineJointDef: com.badlogic.gdx.math.Vector2 localAxisA
com.badlogic.gdx.physics.box2d.joints.LineJointDef: boolean enableLimit
com.badlogic.gdx.physics.box2d.joints.LineJointDef: float lowerTranslation
com.badlogic.gdx.physics.box2d.joints.LineJointDef: float upperTranslation
com.badlogic.gdx.physics.box2d.joints.LineJointDef: boolean enableMotor
com.badlogic.gdx.physics.box2d.joints.LineJointDef: float maxMotorForce
com.badlogic.gdx.physics.box2d.joints.LineJointDef: float motorSpeed
com.badlogic.gdx.physics.box2d.joints.LineJointDef: LineJointDef()
com.badlogic.gdx.physics.box2d.joints.LineJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.physics.box2d.Shape
com.badlogic.gdx.physics.box2d.Shape: long addr
com.badlogic.gdx.physics.box2d.Shape: Shape()
com.badlogic.gdx.physics.box2d.Shape: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Shape: float getRadius()
com.badlogic.gdx.physics.box2d.Shape: float jniGetRadius(long)
com.badlogic.gdx.physics.box2d.Shape: void setRadius(float)
com.badlogic.gdx.physics.box2d.Shape: void jniSetRadius(long,float)
com.badlogic.gdx.physics.box2d.Shape: void dispose()
com.badlogic.gdx.physics.box2d.Shape: void jniDispose(long)
com.badlogic.gdx.physics.box2d.Shape: int jniGetType(long)
com.badlogic.gdx.physics.box2d.World
com.badlogic.gdx.physics.box2d.World: long addr
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.LongHashMap bodies
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.LongHashMap fixtures
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.utils.LongHashMap joints
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.ContactFilter contactFilter
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.ContactListener contactListener
com.badlogic.gdx.physics.box2d.World: float[] tmpGravity
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.math.Vector2 gravity
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.QueryCallback queryCallback
com.badlogic.gdx.physics.box2d.World: long[] contactAddrs
com.badlogic.gdx.physics.box2d.World: java.util.ArrayList contacts
com.badlogic.gdx.physics.box2d.World: java.util.ArrayList freeContacts
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.Contact contact
com.badlogic.gdx.physics.box2d.World: World(com.badlogic.gdx.math.Vector2,boolean)
com.badlogic.gdx.physics.box2d.World: long newWorld(float,float,boolean)
com.badlogic.gdx.physics.box2d.World: void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener)
com.badlogic.gdx.physics.box2d.World: void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter)
com.badlogic.gdx.physics.box2d.World: void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener)
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef)
com.badlogic.gdx.physics.box2d.World: long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float)
com.badlogic.gdx.physics.box2d.World: void destroyBody(com.badlogic.gdx.physics.box2d.Body)
com.badlogic.gdx.physics.box2d.World: void jniDestroyBody(long,long)
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef)
com.badlogic.gdx.physics.box2d.World: long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef)
com.badlogic.gdx.physics.box2d.World: long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateGearJoint(long,long,long,boolean,long,long,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateLineJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,boolean,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float)
com.badlogic.gdx.physics.box2d.World: long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: void destroyJoint(com.badlogic.gdx.physics.box2d.Joint)
com.badlogic.gdx.physics.box2d.World: void jniDestroyJoint(long,long)
com.badlogic.gdx.physics.box2d.World: void step(float,int,int)
com.badlogic.gdx.physics.box2d.World: void jniStep(long,float,int,int)
com.badlogic.gdx.physics.box2d.World: void clearForces()
com.badlogic.gdx.physics.box2d.World: void jniClearForces(long)
com.badlogic.gdx.physics.box2d.World: void setWarmStarting(boolean)
com.badlogic.gdx.physics.box2d.World: void jniSetWarmStarting(long,boolean)
com.badlogic.gdx.physics.box2d.World: void setContinuousPhysics(boolean)
com.badlogic.gdx.physics.box2d.World: void jniSetContiousPhysics(long,boolean)
com.badlogic.gdx.physics.box2d.World: int getProxyCount()
com.badlogic.gdx.physics.box2d.World: int jniGetProxyCount(long)
com.badlogic.gdx.physics.box2d.World: int getBodyCount()
com.badlogic.gdx.physics.box2d.World: int jniGetBodyCount(long)
com.badlogic.gdx.physics.box2d.World: int getJointCount()
com.badlogic.gdx.physics.box2d.World: int jniGetJointcount(long)
com.badlogic.gdx.physics.box2d.World: int getContactCount()
com.badlogic.gdx.physics.box2d.World: int jniGetContactCount(long)
com.badlogic.gdx.physics.box2d.World: void setGravity(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.World: void jniSetGravity(long,float,float)
com.badlogic.gdx.physics.box2d.World: com.badlogic.gdx.math.Vector2 getGravity()
com.badlogic.gdx.physics.box2d.World: void jniGetGravity(long,float[])
com.badlogic.gdx.physics.box2d.World: boolean isLocked()
com.badlogic.gdx.physics.box2d.World: boolean jniIsLocked(long)
com.badlogic.gdx.physics.box2d.World: void setAutoClearForces(boolean)
com.badlogic.gdx.physics.box2d.World: void jniSetAutoClearForces(long,boolean)
com.badlogic.gdx.physics.box2d.World: boolean getAutoClearForces()
com.badlogic.gdx.physics.box2d.World: boolean jniGetAutoClearForces(long)
com.badlogic.gdx.physics.box2d.World: void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: void jniQueryAABB(long,float,float,float,float)
com.badlogic.gdx.physics.box2d.World: java.util.List getContactList()
com.badlogic.gdx.physics.box2d.World: java.util.Iterator getBodies()
com.badlogic.gdx.physics.box2d.World: java.util.Iterator getJoints()
com.badlogic.gdx.physics.box2d.World: void jniGetContactList(long,long[])
com.badlogic.gdx.physics.box2d.World: void dispose()
com.badlogic.gdx.physics.box2d.World: void jniDispose(long)
com.badlogic.gdx.physics.box2d.World: boolean contactFilter(long,long)
com.badlogic.gdx.physics.box2d.World: void beginContact(long)
com.badlogic.gdx.physics.box2d.World: void endContact(long)
com.badlogic.gdx.physics.box2d.World: boolean reportFixture(long)
com.badlogic.gdx.physics.box2d.JointDef
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.utils.GdxRuntimeException
com.badlogic.gdx.utils.GdxRuntimeException: long serialVersionUID
com.badlogic.gdx.utils.GdxRuntimeException: GdxRuntimeException(java.lang.String)
com.badlogic.gdx.utils.GdxRuntimeException: GdxRuntimeException(java.lang.Throwable)
com.badlogic.gdx.utils.GdxRuntimeException: GdxRuntimeException(java.lang.String,java.lang.Throwable)
com.badlogic.gdx.physics.box2d.Fixture
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Body body
com.badlogic.gdx.physics.box2d.Fixture: long addr
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Shape shape
com.badlogic.gdx.physics.box2d.Fixture: java.lang.Object userData
com.badlogic.gdx.physics.box2d.Fixture: short[] tmp
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Filter filter
com.badlogic.gdx.physics.box2d.Fixture: Fixture(com.badlogic.gdx.physics.box2d.Body,long)
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Shape$Type getType()
com.badlogic.gdx.physics.box2d.Fixture: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Shape getShape()
com.badlogic.gdx.physics.box2d.Fixture: long jniGetShape(long)
com.badlogic.gdx.physics.box2d.Fixture: void setSensor(boolean)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetSensor(long,boolean)
com.badlogic.gdx.physics.box2d.Fixture: boolean isSensor()
com.badlogic.gdx.physics.box2d.Fixture: boolean jniIsSensor(long)
com.badlogic.gdx.physics.box2d.Fixture: void setFilterData(com.badlogic.gdx.physics.box2d.Filter)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetFilterData(long,short,short,short)
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Filter getFilterData()
com.badlogic.gdx.physics.box2d.Fixture: void jniGetFilterData(long,short[])
com.badlogic.gdx.physics.box2d.Fixture: com.badlogic.gdx.physics.box2d.Body getBody()
com.badlogic.gdx.physics.box2d.Fixture: boolean testPoint(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Fixture: boolean jniTestPoint(long,float,float)
com.badlogic.gdx.physics.box2d.Fixture: void setDensity(float)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetDensity(long,float)
com.badlogic.gdx.physics.box2d.Fixture: float getDensity()
com.badlogic.gdx.physics.box2d.Fixture: float jniGetDensity(long)
com.badlogic.gdx.physics.box2d.Fixture: float getFriction()
com.badlogic.gdx.physics.box2d.Fixture: float jniGetFriction(long)
com.badlogic.gdx.physics.box2d.Fixture: void setFriction(float)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetFriction(long,float)
com.badlogic.gdx.physics.box2d.Fixture: float getRestitution()
com.badlogic.gdx.physics.box2d.Fixture: float jniGetRestitution(long)
com.badlogic.gdx.physics.box2d.Fixture: void setRestitution(float)
com.badlogic.gdx.physics.box2d.Fixture: void jniSetRestitution(long,float)
com.badlogic.gdx.physics.box2d.Fixture: void setUserData(java.lang.Object)
com.badlogic.gdx.physics.box2d.Fixture: java.lang.Object getUserData()
com.badlogic.gdx.math.Quaternion
com.badlogic.gdx.math.Quaternion: long serialVersionUID
com.badlogic.gdx.math.Quaternion: float x
com.badlogic.gdx.math.Quaternion: float y
com.badlogic.gdx.math.Quaternion: float z
com.badlogic.gdx.math.Quaternion: float w
com.badlogic.gdx.math.Quaternion: Quaternion(float,float,float,float)
com.badlogic.gdx.math.Quaternion: Quaternion()
com.badlogic.gdx.math.Quaternion: Quaternion(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Quaternion: Quaternion(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion set(float,float,float,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion cpy()
com.badlogic.gdx.math.Quaternion: float len()
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion nor()
com.badlogic.gdx.math.Quaternion: java.lang.String toString()
com.badlogic.gdx.math.Quaternion: com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float)
com.badlogic.gdx.utils.LongHashMap$Entries
com.badlogic.gdx.utils.LongHashMap$Entries: int index
com.badlogic.gdx.utils.LongHashMap$Entries: com.badlogic.gdx.utils.LongHashMap$Entry entry
com.badlogic.gdx.utils.LongHashMap$Entries: com.badlogic.gdx.utils.LongHashMap this$0
com.badlogic.gdx.utils.LongHashMap$Entries: LongHashMap$Entries(com.badlogic.gdx.utils.LongHashMap)
com.badlogic.gdx.utils.LongHashMap$Entries: boolean hasNext()
com.badlogic.gdx.utils.LongHashMap$Entries: java.lang.Object next()
com.badlogic.gdx.utils.LongHashMap$Entries: void remove()
com.badlogic.gdx.utils.LongHashMap$Entries: void reset()
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: float maxForce
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: float maxTorque
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: FrictionJointDef()
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.utils.LongHashMap$Entry
com.badlogic.gdx.utils.LongHashMap$Entry: long key
com.badlogic.gdx.utils.LongHashMap$Entry: java.lang.Object value
com.badlogic.gdx.utils.LongHashMap$Entry: com.badlogic.gdx.utils.LongHashMap$Entry next
com.badlogic.gdx.utils.LongHashMap$Entry: LongHashMap$Entry(long,java.lang.Object,com.badlogic.gdx.utils.LongHashMap$Entry)
com.badlogic.gdx.utils.LongHashMap$Entry: java.lang.String toString()
com.badlogic.gdx.physics.box2d.joints.MouseJointDef
com.badlogic.gdx.physics.box2d.joints.MouseJointDef: com.badlogic.gdx.math.Vector2 target
com.badlogic.gdx.physics.box2d.joints.MouseJointDef: float maxForce
com.badlogic.gdx.physics.box2d.joints.MouseJointDef: float frequencyHz
com.badlogic.gdx.physics.box2d.joints.MouseJointDef: float dampingRatio
com.badlogic.gdx.physics.box2d.joints.MouseJointDef: MouseJointDef()
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.physics.box2d.Contact
com.badlogic.gdx.physics.box2d.Contact: long addr
com.badlogic.gdx.physics.box2d.Contact: com.badlogic.gdx.physics.box2d.World world
com.badlogic.gdx.physics.box2d.Contact: com.badlogic.gdx.physics.box2d.WorldManifold worldManifold
com.badlogic.gdx.physics.box2d.Contact: float[] tmp
com.badlogic.gdx.physics.box2d.Contact: Contact(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.Contact: com.badlogic.gdx.physics.box2d.WorldManifold GetWorldManifold()
com.badlogic.gdx.physics.box2d.Contact: int jniGetWorldManifold(long,float[])
com.badlogic.gdx.physics.box2d.Contact: boolean isTouching()
com.badlogic.gdx.physics.box2d.Contact: boolean jniIsTouching(long)
com.badlogic.gdx.physics.box2d.Contact: void setEnabled(boolean)
com.badlogic.gdx.physics.box2d.Contact: void jniSetEnabled(long,boolean)
com.badlogic.gdx.physics.box2d.Contact: boolean isEnabled()
com.badlogic.gdx.physics.box2d.Contact: boolean jniIsEnabled(long)
com.badlogic.gdx.physics.box2d.Contact: com.badlogic.gdx.physics.box2d.Fixture getFixtureA()
com.badlogic.gdx.physics.box2d.Contact: long jniGetFixtureA(long)
com.badlogic.gdx.physics.box2d.Contact: com.badlogic.gdx.physics.box2d.Fixture getFixtureB()
com.badlogic.gdx.physics.box2d.Contact: long jniGetFixtureB(long)
com.badlogic.gdx.math.Plane$PlaneSide
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide OnPlane
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide Back
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide Front
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide[] ENUM$VALUES
com.badlogic.gdx.math.Plane$PlaneSide: void <clinit>()
com.badlogic.gdx.math.Plane$PlaneSide: Plane$PlaneSide(java.lang.String,int)
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide[] values()
com.badlogic.gdx.math.Plane$PlaneSide: com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: com.badlogic.gdx.math.Vector2 groundAnchorA
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: com.badlogic.gdx.math.Vector2 groundAnchorB
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: PulleyJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: com.badlogic.gdx.math.Vector2 getGroundAnchorA()
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: void jniGetGroundAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: com.badlogic.gdx.math.Vector2 getGroundAnchorB()
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: void jniGetGroundAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float getLength1()
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float jniGetLength1(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float getLength2()
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float jniGetLength2(long)
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float getRatio()
com.badlogic.gdx.physics.box2d.joints.PulleyJoint: float jniGetRatio(long)
com.badlogic.gdx.physics.box2d.Joint: long addr
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.World world
com.badlogic.gdx.physics.box2d.Joint: float[] tmp
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 anchorA
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 anchorB
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 reactionForce
com.badlogic.gdx.physics.box2d.Joint: Joint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointDef$JointType getType()
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.Body getBodyA()
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.Body getBodyB()
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getAnchorA()
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getAnchorB()
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getReactionForce(float)
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float getReactionTorque(float)
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean isActive()
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.Joint
com.badlogic.gdx.physics.box2d.Joint: long addr
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.World world
com.badlogic.gdx.physics.box2d.Joint: float[] tmp
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 anchorA
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 anchorB
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 reactionForce
com.badlogic.gdx.physics.box2d.Joint: Joint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointDef$JointType getType()
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.Body getBodyA()
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.Body getBodyB()
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getAnchorA()
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getAnchorB()
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getReactionForce(float)
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float getReactionTorque(float)
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean isActive()
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.utils.LongHashMap
com.badlogic.gdx.utils.LongHashMap: int size
com.badlogic.gdx.utils.LongHashMap: com.badlogic.gdx.utils.LongHashMap$Entry[] table
com.badlogic.gdx.utils.LongHashMap: float loadFactor
com.badlogic.gdx.utils.LongHashMap: int mask
com.badlogic.gdx.utils.LongHashMap: int capacity
com.badlogic.gdx.utils.LongHashMap: int threshold
com.badlogic.gdx.utils.LongHashMap: com.badlogic.gdx.utils.LongHashMap$Entries entries
com.badlogic.gdx.utils.LongHashMap: com.badlogic.gdx.utils.LongHashMap$Values values
com.badlogic.gdx.utils.LongHashMap: com.badlogic.gdx.utils.LongHashMap$Keys keys
com.badlogic.gdx.utils.LongHashMap: LongHashMap()
com.badlogic.gdx.utils.LongHashMap: LongHashMap(int)
com.badlogic.gdx.utils.LongHashMap: LongHashMap(int,float)
com.badlogic.gdx.utils.LongHashMap: java.lang.Object put(long,java.lang.Object)
com.badlogic.gdx.utils.LongHashMap: java.lang.Object get(long)
com.badlogic.gdx.utils.LongHashMap: java.util.Iterator entries()
com.badlogic.gdx.utils.LongHashMap: java.util.Iterator values()
com.badlogic.gdx.utils.LongHashMap: com.badlogic.gdx.utils.LongHashMap$Keys keys()
com.badlogic.gdx.utils.LongHashMap: boolean containsValue(java.lang.Object)
com.badlogic.gdx.utils.LongHashMap: boolean containsKey(long)
com.badlogic.gdx.utils.LongHashMap: java.lang.Object remove(long)
com.badlogic.gdx.utils.LongHashMap: void clear()
com.badlogic.gdx.utils.LongHashMap: void ensureCapacity(int)
com.badlogic.gdx.utils.LongHashMap: void resize(int)
com.badlogic.gdx.utils.LongHashMap: java.lang.String toString()
com.badlogic.gdx.math.CatmullRomSpline
com.badlogic.gdx.math.CatmullRomSpline: long serialVersionUID
com.badlogic.gdx.math.CatmullRomSpline: java.util.List controlPoints
com.badlogic.gdx.math.CatmullRomSpline: CatmullRomSpline()
com.badlogic.gdx.math.CatmullRomSpline: void add(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.CatmullRomSpline: java.util.List getControlPoints()
com.badlogic.gdx.math.CatmullRomSpline: java.util.List getPath(int)
com.badlogic.gdx.math.CatmullRomSpline: java.util.List getTangents(int)
com.badlogic.gdx.math.CatmullRomSpline: java.util.List getTangentNormals2D(int)
com.badlogic.gdx.math.CatmullRomSpline: java.util.List getTangentNormals(int,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.CatmullRomSpline: java.util.List getTangentNormals(int,java.util.List)
com.badlogic.gdx.math.EarCutTriangulator
com.badlogic.gdx.math.EarCutTriangulator: int concaveCount
com.badlogic.gdx.math.EarCutTriangulator: EarCutTriangulator()
com.badlogic.gdx.math.EarCutTriangulator: java.util.List triangulate(java.util.List)
com.badlogic.gdx.math.EarCutTriangulator: boolean polygonClockwise(java.util.List)
com.badlogic.gdx.math.EarCutTriangulator: int[] classifyPoints(java.util.List)
com.badlogic.gdx.math.EarCutTriangulator: boolean convex(float,float,float,float,float,float)
com.badlogic.gdx.math.EarCutTriangulator: float area(float,float,float,float,float,float)
com.badlogic.gdx.math.EarCutTriangulator: boolean triangleContainsPoint(java.util.List,int[],float,float,float,float,float,float)
com.badlogic.gdx.math.EarCutTriangulator: boolean ear(java.util.List,int[],float,float,float,float,float,float)
com.badlogic.gdx.math.EarCutTriangulator: void cutEar(java.util.List,java.util.List,int)
com.badlogic.gdx.math.EarCutTriangulator: void updatePolygon(java.util.List,int)
com.badlogic.gdx.math.WindowedMean
com.badlogic.gdx.math.WindowedMean: float[] values
com.badlogic.gdx.math.WindowedMean: int added_values
com.badlogic.gdx.math.WindowedMean: int last_value
com.badlogic.gdx.math.WindowedMean: float mean
com.badlogic.gdx.math.WindowedMean: boolean dirty
com.badlogic.gdx.math.WindowedMean: WindowedMean(int)
com.badlogic.gdx.math.WindowedMean: boolean hasEnoughData()
com.badlogic.gdx.math.WindowedMean: void clear()
com.badlogic.gdx.math.WindowedMean: void addValue(float)
com.badlogic.gdx.math.WindowedMean: float getMean()
com.badlogic.gdx.math.WindowedMean: float getOldest()
com.badlogic.gdx.math.WindowedMean: float getLatest()
com.badlogic.gdx.math.WindowedMean: float standardDeviation()
com.badlogic.gdx.math.collision.BoundingBox
com.badlogic.gdx.math.collision.BoundingBox: long serialVersionUID
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3[] crn
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 min
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 max
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 cnt
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 dim
com.badlogic.gdx.math.collision.BoundingBox: boolean crn_dirty
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 getCenter()
com.badlogic.gdx.math.collision.BoundingBox: void updateCorners()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3[] getCorners()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 getDimensions()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 getMin()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.Vector3 getMax()
com.badlogic.gdx.math.collision.BoundingBox: BoundingBox()
com.badlogic.gdx.math.collision.BoundingBox: BoundingBox(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.collision.BoundingBox: BoundingBox(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[])
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox set(java.util.List)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox inf()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox clr()
com.badlogic.gdx.math.collision.BoundingBox: boolean isValid()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.collision.BoundingBox: boolean contains(com.badlogic.gdx.math.collision.BoundingBox)
com.badlogic.gdx.math.collision.BoundingBox: boolean contains(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.collision.BoundingBox: java.lang.String toString()
com.badlogic.gdx.math.collision.BoundingBox: com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float)
com.badlogic.gdx.math.collision.BoundingBox: float min(float,float)
com.badlogic.gdx.math.collision.BoundingBox: float max(float,float)
com.badlogic.gdx.physics.box2d.BodyDef$BodyType
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType StaticBody
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType KinematicBody
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType DynamicBody
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: int value
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] ENUM$VALUES
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: void <clinit>()
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: BodyDef$BodyType(java.lang.String,int,int)
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: int getValue()
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values()
com.badlogic.gdx.physics.box2d.BodyDef$BodyType: com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String)
com.badlogic.gdx.physics.box2d.BodyDef
com.badlogic.gdx.physics.box2d.BodyDef: com.badlogic.gdx.physics.box2d.BodyDef$BodyType type
com.badlogic.gdx.physics.box2d.BodyDef: com.badlogic.gdx.math.Vector2 position
com.badlogic.gdx.physics.box2d.BodyDef: float angle
com.badlogic.gdx.physics.box2d.BodyDef: com.badlogic.gdx.math.Vector2 linearVelocity
com.badlogic.gdx.physics.box2d.BodyDef: float angularVelocity
com.badlogic.gdx.physics.box2d.BodyDef: float linearDamping
com.badlogic.gdx.physics.box2d.BodyDef: float angularDamping
com.badlogic.gdx.physics.box2d.BodyDef: boolean allowSleep
com.badlogic.gdx.physics.box2d.BodyDef: boolean awake
com.badlogic.gdx.physics.box2d.BodyDef: boolean fixedRotation
com.badlogic.gdx.physics.box2d.BodyDef: boolean bullet
com.badlogic.gdx.physics.box2d.BodyDef: boolean active
com.badlogic.gdx.physics.box2d.BodyDef: float inertiaScale
com.badlogic.gdx.physics.box2d.BodyDef: BodyDef()
com.badlogic.gdx.physics.box2d.JointEdge
com.badlogic.gdx.physics.box2d.JointEdge: com.badlogic.gdx.physics.box2d.Body other
com.badlogic.gdx.physics.box2d.JointEdge: com.badlogic.gdx.physics.box2d.Joint joint
com.badlogic.gdx.physics.box2d.JointEdge: JointEdge(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Joint)
com.badlogic.gdx.physics.box2d.FixtureDef
com.badlogic.gdx.physics.box2d.FixtureDef: com.badlogic.gdx.physics.box2d.Shape shape
com.badlogic.gdx.physics.box2d.FixtureDef: float friction
com.badlogic.gdx.physics.box2d.FixtureDef: float restitution
com.badlogic.gdx.physics.box2d.FixtureDef: float density
com.badlogic.gdx.physics.box2d.FixtureDef: boolean isSensor
com.badlogic.gdx.physics.box2d.FixtureDef: com.badlogic.gdx.physics.box2d.Filter filter
com.badlogic.gdx.physics.box2d.FixtureDef: FixtureDef()
com.badlogic.gdx.physics.box2d.joints.WeldJointDef
com.badlogic.gdx.physics.box2d.joints.WeldJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.WeldJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.WeldJointDef: float referenceAngle
com.badlogic.gdx.physics.box2d.joints.WeldJointDef: WeldJointDef()
com.badlogic.gdx.physics.box2d.joints.WeldJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: com.badlogic.gdx.math.Vector2 localAxis1
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: float referenceAngle
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: boolean enableLimit
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: float lowerTranslation
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: float upperTranslation
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: boolean enableMotor
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: float maxMotorForce
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: float motorSpeed
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: PrismaticJointDef()
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.physics.box2d.Transform
com.badlogic.gdx.physics.box2d.Transform: int POS_X
com.badlogic.gdx.physics.box2d.Transform: int POS_Y
com.badlogic.gdx.physics.box2d.Transform: int COL1_X
com.badlogic.gdx.physics.box2d.Transform: int COL1_Y
com.badlogic.gdx.physics.box2d.Transform: int COL2_X
com.badlogic.gdx.physics.box2d.Transform: int COL2_Y
com.badlogic.gdx.physics.box2d.Transform: float[] vals
com.badlogic.gdx.physics.box2d.Transform: com.badlogic.gdx.math.Vector2 position
com.badlogic.gdx.physics.box2d.Transform: Transform()
com.badlogic.gdx.physics.box2d.Transform: Transform(com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.Transform: com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.Transform: com.badlogic.gdx.math.Vector2 getPosition()
com.badlogic.gdx.physics.box2d.Transform: void setRotation(float)
com.badlogic.gdx.physics.box2d.Transform: void setPosition(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: float minPulleyLength
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: com.badlogic.gdx.math.Vector2 groundAnchorA
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: com.badlogic.gdx.math.Vector2 groundAnchorB
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: float lengthA
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: float maxLengthA
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: float lengthB
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: float maxLengthB
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: float ratio
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: PulleyJointDef()
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float)
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.utils.MathUtils
com.badlogic.gdx.utils.MathUtils: float PI
com.badlogic.gdx.utils.MathUtils: int SIN_BITS
com.badlogic.gdx.utils.MathUtils: int SIN_MASK
com.badlogic.gdx.utils.MathUtils: int SIN_COUNT
com.badlogic.gdx.utils.MathUtils: float radFull
com.badlogic.gdx.utils.MathUtils: float degFull
com.badlogic.gdx.utils.MathUtils: float radToIndex
com.badlogic.gdx.utils.MathUtils: float degToIndex
com.badlogic.gdx.utils.MathUtils: float radiansToDegrees
com.badlogic.gdx.utils.MathUtils: float degreesToRadians
com.badlogic.gdx.utils.MathUtils: float[] sin
com.badlogic.gdx.utils.MathUtils: float[] cos
com.badlogic.gdx.utils.MathUtils: int ATAN2_BITS
com.badlogic.gdx.utils.MathUtils: int ATAN2_BITS2
com.badlogic.gdx.utils.MathUtils: int ATAN2_MASK
com.badlogic.gdx.utils.MathUtils: int ATAN2_COUNT
com.badlogic.gdx.utils.MathUtils: int ATAN2_DIM
com.badlogic.gdx.utils.MathUtils: float INV_ATAN2_DIM_MINUS_1
com.badlogic.gdx.utils.MathUtils: float[] atan2
com.badlogic.gdx.utils.MathUtils: int randomSeed
com.badlogic.gdx.utils.MathUtils: int BIG_ENOUGH_INT
com.badlogic.gdx.utils.MathUtils: double BIG_ENOUGH_FLOOR
com.badlogic.gdx.utils.MathUtils: double BIG_ENOUGH_CEIL
com.badlogic.gdx.utils.MathUtils: void <clinit>()
com.badlogic.gdx.utils.MathUtils: MathUtils()
com.badlogic.gdx.utils.MathUtils: float sin(float)
com.badlogic.gdx.utils.MathUtils: float cos(float)
com.badlogic.gdx.utils.MathUtils: float sinDeg(float)
com.badlogic.gdx.utils.MathUtils: float cosDeg(float)
com.badlogic.gdx.utils.MathUtils: float atan2(float,float)
com.badlogic.gdx.utils.MathUtils: int random(int)
com.badlogic.gdx.utils.MathUtils: int random(int,int)
com.badlogic.gdx.utils.MathUtils: boolean randomBoolean()
com.badlogic.gdx.utils.MathUtils: float random()
com.badlogic.gdx.utils.MathUtils: float random(float)
com.badlogic.gdx.utils.MathUtils: float random(float,float)
com.badlogic.gdx.utils.MathUtils: int nextPowerOfTwo(int)
com.badlogic.gdx.utils.MathUtils: boolean isPowerOfTwo(int)
com.badlogic.gdx.utils.MathUtils: int floor(float)
com.badlogic.gdx.utils.MathUtils: int ceil(float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float[] tmp
com.badlogic.gdx.physics.box2d.joints.MouseJoint: com.badlogic.gdx.math.Vector2 target
com.badlogic.gdx.physics.box2d.joints.MouseJoint: MouseJoint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void setTarget(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetTarget(long,float,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: com.badlogic.gdx.math.Vector2 getTarget()
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniGetTarget(long,float[])
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void setMaxForce(float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetMaxForce(long,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float getMaxForce()
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float jniGetMaxForce(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void setFrequency(float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetFrequency(long,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float getFrequency()
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float jniGetFrequency(long)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void setDampingRatio(float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: void jniSetDampingRatio(long,float)
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float getDampingRatio()
com.badlogic.gdx.physics.box2d.joints.MouseJoint: float jniGetDampingRatio(long)
com.badlogic.gdx.physics.box2d.Joint: long addr
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.World world
com.badlogic.gdx.physics.box2d.Joint: float[] tmp
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 anchorA
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 anchorB
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 reactionForce
com.badlogic.gdx.physics.box2d.Joint: Joint(com.badlogic.gdx.physics.box2d.World,long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.JointDef$JointType getType()
com.badlogic.gdx.physics.box2d.Joint: int jniGetType(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.Body getBodyA()
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyA(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.physics.box2d.Body getBodyB()
com.badlogic.gdx.physics.box2d.Joint: long jniGetBodyB(long)
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getAnchorA()
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorA(long,float[])
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getAnchorB()
com.badlogic.gdx.physics.box2d.Joint: void jniGetAnchorB(long,float[])
com.badlogic.gdx.physics.box2d.Joint: com.badlogic.gdx.math.Vector2 getReactionForce(float)
com.badlogic.gdx.physics.box2d.Joint: void jniGetReactionForce(long,float,float[])
com.badlogic.gdx.physics.box2d.Joint: float getReactionTorque(float)
com.badlogic.gdx.physics.box2d.Joint: float jniGetReactionTorque(long,float)
com.badlogic.gdx.physics.box2d.Joint: boolean isActive()
com.badlogic.gdx.physics.box2d.Joint: boolean jniIsActive(long)
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: com.badlogic.gdx.math.Vector2 localAnchorA
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: com.badlogic.gdx.math.Vector2 localAnchorB
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: float length
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: float frequencyHz
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: float dampingRatio
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: DistanceJointDef()
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef: void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.JointDef$JointType type
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyA
com.badlogic.gdx.physics.box2d.JointDef: com.badlogic.gdx.physics.box2d.Body bodyB
com.badlogic.gdx.physics.box2d.JointDef: boolean collideConnected
com.badlogic.gdx.physics.box2d.JointDef: JointDef()
com.badlogic.gdx.physics.box2d.WorldManifold
com.badlogic.gdx.physics.box2d.WorldManifold: com.badlogic.gdx.math.Vector2 normal
com.badlogic.gdx.physics.box2d.WorldManifold: com.badlogic.gdx.math.Vector2[] points
com.badlogic.gdx.physics.box2d.WorldManifold: int numContactPoints
com.badlogic.gdx.physics.box2d.WorldManifold: WorldManifold()
com.badlogic.gdx.physics.box2d.WorldManifold: com.badlogic.gdx.math.Vector2 getNormal()
com.badlogic.gdx.physics.box2d.WorldManifold: com.badlogic.gdx.math.Vector2[] getPoints()
com.badlogic.gdx.physics.box2d.WorldManifold: int getNumberOfContactPoints()
com.badlogic.gdx.math.Vector3
com.badlogic.gdx.math.Vector3: long serialVersionUID
com.badlogic.gdx.math.Vector3: float x
com.badlogic.gdx.math.Vector3: float y
com.badlogic.gdx.math.Vector3: float z
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 tmp
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 tmp2
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 tmp3
com.badlogic.gdx.math.Vector3: void <clinit>()
com.badlogic.gdx.math.Vector3: Vector3()
com.badlogic.gdx.math.Vector3: Vector3(float,float,float)
com.badlogic.gdx.math.Vector3: Vector3(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: Vector3(float[])
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 set(float[])
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 cpy()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 tmp()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 tmp2()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 tmp3()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 add(float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 sub(float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 mul(float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 div(float)
com.badlogic.gdx.math.Vector3: float len()
com.badlogic.gdx.math.Vector3: float len2()
com.badlogic.gdx.math.Vector3: boolean idt(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: float dst(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: float dist2(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 nor()
com.badlogic.gdx.math.Vector3: float dot(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 crs(float,float,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4)
com.badlogic.gdx.math.Vector3: boolean isUnit()
com.badlogic.gdx.math.Vector3: boolean isZero()
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float)
com.badlogic.gdx.math.Vector3: java.lang.String toString()
com.badlogic.gdx.math.Vector3: float dot(float,float,float)
com.badlogic.gdx.math.Vector3: float dst2(com.badlogic.gdx.math.Vector3)
com.badlogic.gdx.math.Vector3: float dst2(float,float,float)
com.badlogic.gdx.math.Vector3: float dst(float,float,float)
com.badlogic.gdx.math.Vector3: int hashCode()
com.badlogic.gdx.math.Vector3: boolean equals(java.lang.Object)
com.badlogic.gdx.math.Vector3: com.badlogic.gdx.math.Vector3 scale(float,float,float)
com.badlogic.gdx.math.Vector2
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 tmp
com.badlogic.gdx.math.Vector2: float x
com.badlogic.gdx.math.Vector2: float y
com.badlogic.gdx.math.Vector2: void <clinit>()
com.badlogic.gdx.math.Vector2: Vector2()
com.badlogic.gdx.math.Vector2: Vector2(float,float)
com.badlogic.gdx.math.Vector2: Vector2(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 cpy()
com.badlogic.gdx.math.Vector2: float len()
com.badlogic.gdx.math.Vector2: float len2()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 set(float,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 nor()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 add(float,float)
com.badlogic.gdx.math.Vector2: float dot(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 mul(float)
com.badlogic.gdx.math.Vector2: float dst(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: float dst(float,float)
com.badlogic.gdx.math.Vector2: float dst2(com.badlogic.gdx.math.Vector2)
com.badlogic.gdx.math.Vector2: java.lang.String toString()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 sub(float,float)
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 tmp()
com.badlogic.gdx.math.Vector2: com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3)
org.cocos2d.actions.CCActionManager$HashElement
org.cocos2d.actions.CCActionManager$HashElement: java.util.ArrayList actions
org.cocos2d.actions.CCActionManager$HashElement: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.CCActionManager$HashElement: int actionIndex
org.cocos2d.actions.CCActionManager$HashElement: boolean paused
org.cocos2d.actions.CCActionManager$HashElement: CCActionManager$HashElement()
org.cocos2d.actions.CCScheduler$SchedulerTimerAlreadyScheduled
org.cocos2d.actions.CCScheduler$SchedulerTimerAlreadyScheduled: long serialVersionUID
org.cocos2d.actions.CCScheduler$SchedulerTimerAlreadyScheduled: CCScheduler$SchedulerTimerAlreadyScheduled(java.lang.String)
org.cocos2d.events.CCTouchDispatcher$1
org.cocos2d.events.CCTouchDispatcher$1: org.cocos2d.events.CCTouchDispatcher this$0
org.cocos2d.events.CCTouchDispatcher$1: java.util.ArrayList val$array
org.cocos2d.events.CCTouchDispatcher$1: org.cocos2d.events.CCTouchHandler val$handler
org.cocos2d.events.CCTouchDispatcher$1: CCTouchDispatcher$1(org.cocos2d.events.CCTouchDispatcher,java.util.ArrayList,org.cocos2d.events.CCTouchHandler)
org.cocos2d.events.CCTouchDispatcher$1: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.events.CCTouchDispatcher$2
org.cocos2d.events.CCTouchDispatcher$2: org.cocos2d.events.CCTouchDispatcher this$0
org.cocos2d.events.CCTouchDispatcher$2: org.cocos2d.protocols.CCTouchDelegateProtocol val$delegate
org.cocos2d.events.CCTouchDispatcher$2: CCTouchDispatcher$2(org.cocos2d.events.CCTouchDispatcher,org.cocos2d.protocols.CCTouchDelegateProtocol)
org.cocos2d.events.CCTouchDispatcher$2: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: org.cocos2d.utils.collections.IntMap bitmapFontArray
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: int commonHeight
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding padding
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: java.lang.String atlasName
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: org.cocos2d.utils.collections.IntMap kerningDictionary
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: boolean $assertionsDisabled
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: void <clinit>()
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration configuration(java.lang.String)
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: CCBitmapFontAtlas$CCBitmapFontConfiguration(java.lang.String)
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: void purgeKerningDictionary()
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: void parseConfigFile(java.lang.String)
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: void parseImage(java.lang.String,java.lang.String)
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: void parseInfoArguments(java.lang.String)
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: void parseCommonArguments(java.lang.String)
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: void parseCharacterDefinition(java.lang.String,org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef)
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: void parseKerningCapacity(java.lang.String)
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration: void parseKerningEntry(java.lang.String)
org.cocos2d.opengl.CCTexture2D$1
org.cocos2d.opengl.CCTexture2D$1: org.cocos2d.opengl.CCTexture2D this$0
org.cocos2d.opengl.CCTexture2D$1: CCTexture2D$1(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.opengl.CCTexture2D$1: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.types.ccBlendFunc
org.cocos2d.types.ccBlendFunc: int src
org.cocos2d.types.ccBlendFunc: int dst
org.cocos2d.types.ccBlendFunc: ccBlendFunc(int,int)
org.cocos2d.types.ccBlendFunc: ccBlendFunc()
org.cocos2d.types.ccBlendFunc: void setSrc(int)
org.cocos2d.types.ccBlendFunc: int getSrc()
org.cocos2d.types.ccBlendFunc: void setDst(int)
org.cocos2d.types.ccBlendFunc: int getDst()
org.cocos2d.types.ccBlendFunc: java.lang.String toString()
org.cocos2d.events.CCTouchDispatcher$3
org.cocos2d.events.CCTouchDispatcher$3: org.cocos2d.events.CCTouchDispatcher this$0
org.cocos2d.events.CCTouchDispatcher$3: CCTouchDispatcher$3(org.cocos2d.events.CCTouchDispatcher)
org.cocos2d.events.CCTouchDispatcher$3: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.events.CCTouchDispatcher$4
org.cocos2d.events.CCTouchDispatcher$4: org.cocos2d.events.CCTouchDispatcher this$0
org.cocos2d.events.CCTouchDispatcher$4: org.cocos2d.events.CCTouchHandler val$delegate
org.cocos2d.events.CCTouchDispatcher$4: int val$priority
org.cocos2d.events.CCTouchDispatcher$4: CCTouchDispatcher$4(org.cocos2d.events.CCTouchDispatcher,org.cocos2d.events.CCTouchHandler,int)
org.cocos2d.events.CCTouchDispatcher$4: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.tests.EffectsTest
org.cocos2d.tests.EffectsTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.EffectsTest: int actionIdx
org.cocos2d.tests.EffectsTest: java.lang.Class[] actionList
org.cocos2d.tests.EffectsTest: java.lang.String[] effectsList
org.cocos2d.tests.EffectsTest: int kTagTextLayer
org.cocos2d.tests.EffectsTest: int kTagBackground
org.cocos2d.tests.EffectsTest: int kTagLabel
org.cocos2d.tests.EffectsTest: void <clinit>()
org.cocos2d.tests.EffectsTest: EffectsTest()
org.cocos2d.tests.EffectsTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.EffectsTest: void onStart()
org.cocos2d.tests.EffectsTest: void onPause()
org.cocos2d.tests.EffectsTest: void onResume()
org.cocos2d.tests.EffectsTest: void onDestroy()
org.cocos2d.tests.EffectsTest: java.lang.Class nextAction()
org.cocos2d.tests.EffectsTest: java.lang.Class backAction()
org.cocos2d.tests.EffectsTest: java.lang.Class restartAction()
org.cocos2d.opengl.CCTexture2D$2
org.cocos2d.opengl.CCTexture2D$2: org.cocos2d.opengl.CCTexture2D this$0
org.cocos2d.opengl.CCTexture2D$2: CCTexture2D$2(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.opengl.CCTexture2D$2: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.events.CCTouchHandler
org.cocos2d.events.CCTouchHandler: org.cocos2d.protocols.CCTouchDelegateProtocol delegate_
org.cocos2d.events.CCTouchHandler: int priority_
org.cocos2d.events.CCTouchHandler: int enabledSelectors_
org.cocos2d.events.CCTouchHandler: boolean $assertionsDisabled
org.cocos2d.events.CCTouchHandler: void <clinit>()
org.cocos2d.events.CCTouchHandler: org.cocos2d.protocols.CCTouchDelegateProtocol getDelegate()
org.cocos2d.events.CCTouchHandler: int getPriority()
org.cocos2d.events.CCTouchHandler: void setPriority(int)
org.cocos2d.events.CCTouchHandler: void setSelectorFlag(int)
org.cocos2d.events.CCTouchHandler: int getSelectorFlag()
org.cocos2d.events.CCTouchHandler: org.cocos2d.events.CCTouchHandler makeHandler(org.cocos2d.protocols.CCTouchDelegateProtocol,int)
org.cocos2d.events.CCTouchHandler: CCTouchHandler(org.cocos2d.protocols.CCTouchDelegateProtocol,int)
org.cocos2d.events.CCTouchHandler: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.events.CCTouchHandler: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.events.CCTouchHandler: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.events.CCTouchHandler: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.opengl.CCTexture2D$3
org.cocos2d.opengl.CCTexture2D$3: org.cocos2d.opengl.CCTexture2D this$0
org.cocos2d.opengl.CCTexture2D$3: CCTexture2D$3(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.opengl.CCTexture2D$3: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.actions.CCScheduler$tHashSelectorEntry
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: java.util.ArrayList timers
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: java.lang.Object target
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: java.util.ArrayList list
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: org.cocos2d.actions.CCScheduler$tListEntry entry
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: int timerIndex
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: org.cocos2d.actions.CCTimer currentTimer
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: boolean currentTimerSalvaged
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: boolean paused
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: CCScheduler$tHashSelectorEntry()
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: void setPaused(boolean)
org.cocos2d.actions.CCScheduler$tHashSelectorEntry: CCScheduler$tHashSelectorEntry(org.cocos2d.actions.CCScheduler$tHashSelectorEntry)
org.cocos2d.opengl.CCTexture2D$4
org.cocos2d.opengl.CCTexture2D$4: org.cocos2d.opengl.CCTexture2D this$0
org.cocos2d.opengl.CCTexture2D$4: CCTexture2D$4(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.opengl.CCTexture2D$4: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.utils.ZwoptexParser
org.cocos2d.utils.ZwoptexParser: java.util.HashMap frames
org.cocos2d.utils.ZwoptexParser: java.util.HashMap metadata
org.cocos2d.utils.ZwoptexParser: java.lang.Integer dict_depth
org.cocos2d.utils.ZwoptexParser: java.lang.Boolean mode_set_key
org.cocos2d.utils.ZwoptexParser: java.lang.Boolean mode_set_string
org.cocos2d.utils.ZwoptexParser: java.lang.Boolean mode_set_integer
org.cocos2d.utils.ZwoptexParser: java.lang.Boolean mode_set_real
org.cocos2d.utils.ZwoptexParser: java.lang.String section
org.cocos2d.utils.ZwoptexParser: java.lang.String metadata_key
org.cocos2d.utils.ZwoptexParser: java.lang.String f_key
org.cocos2d.utils.ZwoptexParser: java.lang.String f_filename
org.cocos2d.utils.ZwoptexParser: org.cocos2d.types.CGRect f_frame
org.cocos2d.utils.ZwoptexParser: org.cocos2d.types.CGPoint f_offset
org.cocos2d.utils.ZwoptexParser: java.lang.Boolean f_rotated
org.cocos2d.utils.ZwoptexParser: org.cocos2d.types.CGSize f_source_size
org.cocos2d.utils.ZwoptexParser: org.cocos2d.types.CGSize f_spriteSize
org.cocos2d.utils.ZwoptexParser: org.cocos2d.types.CGPoint f_spriteOffset
org.cocos2d.utils.ZwoptexParser: org.cocos2d.types.CGSize f_spriteSourceSize
org.cocos2d.utils.ZwoptexParser: org.cocos2d.types.CGRect f_textureRect
org.cocos2d.utils.ZwoptexParser: java.lang.Boolean f_textureRotated
org.cocos2d.utils.ZwoptexParser: java.lang.Integer f_format
org.cocos2d.utils.ZwoptexParser: int tmpX
org.cocos2d.utils.ZwoptexParser: int tmpY
org.cocos2d.utils.ZwoptexParser: int tmpWidth
org.cocos2d.utils.ZwoptexParser: int tmpHeight
org.cocos2d.utils.ZwoptexParser: float tmpOffsetX
org.cocos2d.utils.ZwoptexParser: float tmpOffsetY
org.cocos2d.utils.ZwoptexParser: java.util.HashMap parseZwoptex(java.lang.String)
org.cocos2d.utils.ZwoptexParser: ZwoptexParser()
org.cocos2d.utils.ZwoptexParser: java.util.HashMap getResults()
org.cocos2d.utils.ZwoptexParser: void startDocument()
org.cocos2d.utils.ZwoptexParser: void frameReset()
org.cocos2d.utils.ZwoptexParser: void endDocument()
org.cocos2d.utils.ZwoptexParser: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org.cocos2d.utils.ZwoptexParser: void endElement(java.lang.String,java.lang.String,java.lang.String)
org.cocos2d.utils.ZwoptexParser: void characters(char[],int,int)
org.cocos2d.utils.ZwoptexParser: org.cocos2d.types.CGPoint parseCoords(java.lang.String)
org.cocos2d.utils.ZwoptexParser: org.cocos2d.types.CGSize parseCoordsSize(java.lang.String)
org.cocos2d.utils.ZwoptexParser: org.cocos2d.types.CGRect parseCoordsRect(java.lang.String)
org.cocos2d.particlesystem.CCParticleSystem
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleDurationInfinity
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleStartSizeEqualToEndSize
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleStartRadiusEqualToEndRadius
org.cocos2d.particlesystem.CCParticleSystem: int kParticleStartSizeEqualToEndSize
org.cocos2d.particlesystem.CCParticleSystem: int kParticleDurationInfinity
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleModeGravity
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleModeRadius
org.cocos2d.particlesystem.CCParticleSystem: int kCCPositionTypeFree
org.cocos2d.particlesystem.CCParticleSystem: int kCCPositionTypeGrouped
org.cocos2d.particlesystem.CCParticleSystem: int id
org.cocos2d.particlesystem.CCParticleSystem: boolean active
org.cocos2d.particlesystem.CCParticleSystem: float duration
org.cocos2d.particlesystem.CCParticleSystem: float elapsed
org.cocos2d.particlesystem.CCParticleSystem: float startSize
org.cocos2d.particlesystem.CCParticleSystem: float startSizeVar
org.cocos2d.particlesystem.CCParticleSystem: float endSize
org.cocos2d.particlesystem.CCParticleSystem: float endSizeVar
org.cocos2d.particlesystem.CCParticleSystem: float startSpin
org.cocos2d.particlesystem.CCParticleSystem: float startSpinVar
org.cocos2d.particlesystem.CCParticleSystem: float endSpin
org.cocos2d.particlesystem.CCParticleSystem: float endSpinVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint centerOfGravity
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint source
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint posVar
org.cocos2d.particlesystem.CCParticleSystem: float angle
org.cocos2d.particlesystem.CCParticleSystem: float angleVar
org.cocos2d.particlesystem.CCParticleSystem: float speed
org.cocos2d.particlesystem.CCParticleSystem: float speedVar
org.cocos2d.particlesystem.CCParticleSystem: float tangentialAccel
org.cocos2d.particlesystem.CCParticleSystem: float tangentialAccelVar
org.cocos2d.particlesystem.CCParticleSystem: float radialAccel
org.cocos2d.particlesystem.CCParticleSystem: float radialAccelVar
org.cocos2d.particlesystem.CCParticleSystem: float size
org.cocos2d.particlesystem.CCParticleSystem: float sizeVar
org.cocos2d.particlesystem.CCParticleSystem: float life
org.cocos2d.particlesystem.CCParticleSystem: float lifeVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F startColor
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F startColorVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F endColor
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F endColorVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccBlendFunc blendFunc
org.cocos2d.particlesystem.CCParticleSystem: int positionType
org.cocos2d.particlesystem.CCParticleSystem: boolean autoRemoveOnFinish_
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem$CCParticle[] particles
org.cocos2d.particlesystem.CCParticleSystem: int totalParticles
org.cocos2d.particlesystem.CCParticleSystem: int particleCount
org.cocos2d.particlesystem.CCParticleSystem: boolean blendAdditive
org.cocos2d.particlesystem.CCParticleSystem: boolean colorModulate
org.cocos2d.particlesystem.CCParticleSystem: float emissionRate
org.cocos2d.particlesystem.CCParticleSystem: float emitCounter
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.opengl.CCTexture2D texture
org.cocos2d.particlesystem.CCParticleSystem: int emitterMode
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem$ModeA modeA
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem$ModeB modeB
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccPointSprite[] vertices
org.cocos2d.particlesystem.CCParticleSystem: int verticesID
org.cocos2d.particlesystem.CCParticleSystem: int colorsID
org.cocos2d.particlesystem.CCParticleSystem: int particleIdx
org.cocos2d.particlesystem.CCParticleSystem: int kPositionTypeFree
org.cocos2d.particlesystem.CCParticleSystem: int kPositionTypeGrouped
org.cocos2d.particlesystem.CCParticleSystem: int positionType_
org.cocos2d.particlesystem.CCParticleSystem: boolean $assertionsDisabled
org.cocos2d.particlesystem.CCParticleSystem: void <clinit>()
org.cocos2d.particlesystem.CCParticleSystem: void setStartSize(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartSizeVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSize(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSizeVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartSpin(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartSpinVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSpin(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSpinVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setCenterOfGravity(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getCenterOfGravity()
org.cocos2d.particlesystem.CCParticleSystem: void setPosVar(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: void setAngle(float)
org.cocos2d.particlesystem.CCParticleSystem: void setAngleVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setLifeVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartColor(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F getStartColor()
org.cocos2d.particlesystem.CCParticleSystem: void setStartColorVar(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F getStartColorVar()
org.cocos2d.particlesystem.CCParticleSystem: void setEndColor(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: void setEndColorVar(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: int getTotalParticles()
org.cocos2d.particlesystem.CCParticleSystem: void setEmissionRate(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEmitterMode(int)
org.cocos2d.particlesystem.CCParticleSystem: void setAutoRemoveOnFinish(boolean)
org.cocos2d.particlesystem.CCParticleSystem: boolean isFull()
org.cocos2d.particlesystem.CCParticleSystem: void setTangentialAccel(float)
org.cocos2d.particlesystem.CCParticleSystem: float getTangentialAccel()
org.cocos2d.particlesystem.CCParticleSystem: void setTangentialAccelVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float getTangentialAccelVar()
org.cocos2d.particlesystem.CCParticleSystem: void setRadialAccel(float)
org.cocos2d.particlesystem.CCParticleSystem: float getRadialAccel()
org.cocos2d.particlesystem.CCParticleSystem: void setRadialAccelVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float getRadialAccelVar()
org.cocos2d.particlesystem.CCParticleSystem: void setGravity(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getGravity()
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint gravity()
org.cocos2d.particlesystem.CCParticleSystem: void setSpeed(float)
org.cocos2d.particlesystem.CCParticleSystem: float getSpeed()
org.cocos2d.particlesystem.CCParticleSystem: void setSpeedVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float getSpeedVar()
org.cocos2d.particlesystem.CCParticleSystem: void setStartRadius(float)
org.cocos2d.particlesystem.CCParticleSystem: float startRadius()
org.cocos2d.particlesystem.CCParticleSystem: void setStartRadiusVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float startRadiusVar()
org.cocos2d.particlesystem.CCParticleSystem: void setEndRadius(float)
org.cocos2d.particlesystem.CCParticleSystem: float endRadius()
org.cocos2d.particlesystem.CCParticleSystem: void setEndRadiusVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float endRadiusVar()
org.cocos2d.particlesystem.CCParticleSystem: boolean getActive()
org.cocos2d.particlesystem.CCParticleSystem: int getParticleCount()
org.cocos2d.particlesystem.CCParticleSystem: void setRotatePerSecond(float)
org.cocos2d.particlesystem.CCParticleSystem: float rotatePerSecond()
org.cocos2d.particlesystem.CCParticleSystem: void setRotatePerSecondVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float rotatePerSecondVar()
org.cocos2d.particlesystem.CCParticleSystem: float getDuration()
org.cocos2d.particlesystem.CCParticleSystem: void setDuration(float)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getSource()
org.cocos2d.particlesystem.CCParticleSystem: void setSource(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getPosVar()
org.cocos2d.particlesystem.CCParticleSystem: float getLife()
org.cocos2d.particlesystem.CCParticleSystem: void setLife(float)
org.cocos2d.particlesystem.CCParticleSystem: int getPositionType()
org.cocos2d.particlesystem.CCParticleSystem: void setPositionType(int)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.particlesystem.CCParticleSystem: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.particlesystem.CCParticleSystem: CCParticleSystem(int)
org.cocos2d.particlesystem.CCParticleSystem: void initParticle(org.cocos2d.particlesystem.CCParticleSystem$CCParticle)
org.cocos2d.particlesystem.CCParticleSystem: void stopSystem()
org.cocos2d.particlesystem.CCParticleSystem: void resetSystem()
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem particleWithFile(java.lang.String)
org.cocos2d.particlesystem.CCParticleSystem: CCParticleSystem(java.lang.String)
org.cocos2d.particlesystem.CCParticleSystem: CCParticleSystem(java.util.HashMap)
org.cocos2d.particlesystem.CCParticleSystem: boolean addParticle()
org.cocos2d.particlesystem.CCParticleSystem: void update(float)
org.cocos2d.particlesystem.CCParticleSystem: void updateQuad(org.cocos2d.particlesystem.CCParticleSystem$CCParticle,org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: void postStep()
org.cocos2d.particlesystem.CCParticleSystem: void setBlendAdditive(boolean)
org.cocos2d.particlesystem.CCParticleSystem: boolean getBlendAdditive()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.TileMapTest$TMXOrthoZorder
org.cocos2d.tests.TileMapTest$TMXOrthoZorder: org.cocos2d.nodes.CCSprite tamara
org.cocos2d.tests.TileMapTest$TMXOrthoZorder: TileMapTest$TMXOrthoZorder()
org.cocos2d.tests.TileMapTest$TMXOrthoZorder: void repositionSprite(float)
org.cocos2d.tests.TileMapTest$TMXOrthoZorder: java.lang.String title()
org.cocos2d.tests.TileMapTest$TMXOrthoZorder: java.lang.String subtitle()
org.cocos2d.tests.TileMapTest$TileDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.TileMapTest$TileDemo: TileMapTest$TileDemo()
org.cocos2d.tests.TileMapTest$TileDemo: void registerWithTouchDispatcher()
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String title()
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.utils.FastFloatBuffer
org.cocos2d.utils.FastFloatBuffer: java.nio.ByteBuffer bytes
org.cocos2d.utils.FastFloatBuffer: java.nio.FloatBuffer floats
org.cocos2d.utils.FastFloatBuffer: java.nio.IntBuffer ints
org.cocos2d.utils.FastFloatBuffer: int bufferID
org.cocos2d.utils.FastFloatBuffer: boolean loaded
org.cocos2d.utils.FastFloatBuffer: java.lang.ref.SoftReference intArray
org.cocos2d.utils.FastFloatBuffer: void <clinit>()
org.cocos2d.utils.FastFloatBuffer: org.cocos2d.utils.FastFloatBuffer createBuffer(float[])
org.cocos2d.utils.FastFloatBuffer: org.cocos2d.utils.FastFloatBuffer createBuffer(java.nio.ByteBuffer)
org.cocos2d.utils.FastFloatBuffer: FastFloatBuffer(int)
org.cocos2d.utils.FastFloatBuffer: FastFloatBuffer(java.nio.ByteBuffer)
org.cocos2d.utils.FastFloatBuffer: void flip()
org.cocos2d.utils.FastFloatBuffer: org.cocos2d.utils.FastFloatBuffer put(float)
org.cocos2d.utils.FastFloatBuffer: org.cocos2d.utils.FastFloatBuffer put(float[])
org.cocos2d.utils.FastFloatBuffer: org.cocos2d.utils.FastFloatBuffer put(int[])
org.cocos2d.utils.FastFloatBuffer: int[] convert(float[])
org.cocos2d.utils.FastFloatBuffer: org.cocos2d.utils.FastFloatBuffer put(org.cocos2d.utils.FastFloatBuffer)
org.cocos2d.utils.FastFloatBuffer: int capacity()
org.cocos2d.utils.FastFloatBuffer: int position()
org.cocos2d.utils.FastFloatBuffer: void position(int)
org.cocos2d.utils.FastFloatBuffer: java.nio.FloatBuffer slice()
org.cocos2d.utils.FastFloatBuffer: int remaining()
org.cocos2d.utils.FastFloatBuffer: int limit()
org.cocos2d.utils.FastFloatBuffer: void limit(int)
org.cocos2d.utils.FastFloatBuffer: void clear()
org.cocos2d.utils.FastFloatBuffer: void setBufferID(int)
org.cocos2d.utils.FastFloatBuffer: int getBufferID()
org.cocos2d.utils.FastFloatBuffer: boolean isLoaded()
org.cocos2d.utils.FastFloatBuffer: void setLoaded(boolean)
org.cocos2d.utils.FastFloatBuffer: void put(int,float)
org.cocos2d.utils.FastFloatBuffer: float get()
org.cocos2d.utils.FastFloatBuffer: float get(int)
org.cocos2d.utils.FastFloatBuffer: void get(float[],int,int)
org.cocos2d.utils.FastFloatBuffer: void put(float[],int,int)
org.cocos2d.utils.FastFloatBuffer: void rewind()
org.cocos2d.tests.ParallaxTest
org.cocos2d.tests.ParallaxTest: boolean DEBUG
org.cocos2d.tests.ParallaxTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.ParallaxTest: int sceneIdx
org.cocos2d.tests.ParallaxTest: java.lang.Class[] transitions
org.cocos2d.tests.ParallaxTest: void <clinit>()
org.cocos2d.tests.ParallaxTest: ParallaxTest()
org.cocos2d.tests.ParallaxTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.ParallaxTest: void onStart()
org.cocos2d.tests.ParallaxTest: void onPause()
org.cocos2d.tests.ParallaxTest: void onResume()
org.cocos2d.tests.ParallaxTest: void onDestroy()
org.cocos2d.tests.ParallaxTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.ParallaxTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.ParallaxTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.actions.interval.CCBezierBy
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.types.CCBezierConfig config
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.types.CGPoint startPosition
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.actions.interval.CCBezierBy action(float,org.cocos2d.types.CCBezierConfig)
org.cocos2d.actions.interval.CCBezierBy: CCBezierBy(float,org.cocos2d.types.CCBezierConfig)
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCBezierBy: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCBezierBy: void update(float)
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.actions.interval.CCBezierBy reverse()
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCBezierBy: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.menus.CCMenu
org.cocos2d.menus.CCMenu: int kDefaultPadding
org.cocos2d.menus.CCMenu: org.cocos2d.menus.CCMenuItem selectedItem
org.cocos2d.menus.CCMenu: org.cocos2d.menus.CCMenu$MenuState state
org.cocos2d.menus.CCMenu: int opacity_
org.cocos2d.menus.CCMenu: org.cocos2d.types.ccColor3B color_
org.cocos2d.menus.CCMenu: boolean $assertionsDisabled
org.cocos2d.menus.CCMenu: void <clinit>()
org.cocos2d.menus.CCMenu: org.cocos2d.menus.CCMenuItem getSelectedItem()
org.cocos2d.menus.CCMenu: void setSelectedItem(org.cocos2d.menus.CCMenuItem)
org.cocos2d.menus.CCMenu: void registerWithTouchDispatcher()
org.cocos2d.menus.CCMenu: org.cocos2d.menus.CCMenu menu(org.cocos2d.menus.CCMenuItem[])
org.cocos2d.menus.CCMenu: org.cocos2d.menus.CCMenu menu()
org.cocos2d.menus.CCMenu: CCMenu(org.cocos2d.menus.CCMenuItem[])
org.cocos2d.menus.CCMenu: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.menus.CCMenu: void setOpacity(int)
org.cocos2d.menus.CCMenu: int getOpacity()
org.cocos2d.menus.CCMenu: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.menus.CCMenu: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.menus.CCMenu: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.menus.CCMenu: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.menus.CCMenu: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.menus.CCMenu: void alignItemsVertically()
org.cocos2d.menus.CCMenu: void alignItemsVertically(float)
org.cocos2d.menus.CCMenu: void alignItemsHorizontally()
org.cocos2d.menus.CCMenu: void alignItemsHorizontally(float)
org.cocos2d.menus.CCMenu: void alignItemsInColumns(int[])
org.cocos2d.menus.CCMenu: void alignItemsInRows(int[])
org.cocos2d.menus.CCMenu: org.cocos2d.menus.CCMenuItem itemForTouch(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCSpriteFrameCache
org.cocos2d.nodes.CCSpriteFrameCache: java.util.HashMap spriteFrames
org.cocos2d.nodes.CCSpriteFrameCache: org.cocos2d.nodes.CCSpriteFrameCache sharedSpriteFrameCache_
org.cocos2d.nodes.CCSpriteFrameCache: void <clinit>()
org.cocos2d.nodes.CCSpriteFrameCache: org.cocos2d.nodes.CCSpriteFrameCache sharedSpriteFrameCache()
org.cocos2d.nodes.CCSpriteFrameCache: CCSpriteFrameCache()
org.cocos2d.nodes.CCSpriteFrameCache: org.cocos2d.nodes.CCSpriteFrame spriteFrameByName(java.lang.String)
org.cocos2d.nodes.CCSpriteFrameCache: void purgeSharedSpriteFrameCache()
org.cocos2d.nodes.CCSpriteFrameCache: java.util.Set addSpriteFrames(java.util.HashMap,org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSpriteFrameCache: java.util.Set addSpriteFrames(java.lang.String)
org.cocos2d.nodes.CCSpriteFrameCache: java.util.Set addSpriteFrames(java.lang.String,org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSpriteFrameCache: void addSpriteFrame(org.cocos2d.nodes.CCSpriteFrame,java.lang.String)
org.cocos2d.nodes.CCSpriteFrameCache: void removeSpriteFrames()
org.cocos2d.nodes.CCSpriteFrameCache: void removeAllSpriteFrames()
org.cocos2d.nodes.CCSpriteFrameCache: void removeSpriteFrame(java.lang.String)
org.cocos2d.nodes.CCSpriteFrameCache: org.cocos2d.nodes.CCSpriteFrame getSpriteFrame(java.lang.String)
org.cocos2d.nodes.CCSpriteFrameCache: org.cocos2d.nodes.CCSprite createSprite(java.lang.String)
org.cocos2d.actions.interval.CCJumpBy
org.cocos2d.actions.interval.CCJumpBy: org.cocos2d.types.CGPoint startPosition
org.cocos2d.actions.interval.CCJumpBy: org.cocos2d.types.CGPoint delta
org.cocos2d.actions.interval.CCJumpBy: float height
org.cocos2d.actions.interval.CCJumpBy: int jumps
org.cocos2d.actions.interval.CCJumpBy: org.cocos2d.actions.interval.CCJumpBy action(float,org.cocos2d.types.CGPoint,float,int)
org.cocos2d.actions.interval.CCJumpBy: CCJumpBy(float,org.cocos2d.types.CGPoint,float,int)
org.cocos2d.actions.interval.CCJumpBy: org.cocos2d.actions.interval.CCJumpBy copy()
org.cocos2d.actions.interval.CCJumpBy: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCJumpBy: void update(float)
org.cocos2d.actions.interval.CCJumpBy: org.cocos2d.actions.interval.CCJumpBy reverse()
org.cocos2d.actions.interval.CCJumpBy: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCJumpBy: java.lang.Object copy()
org.cocos2d.actions.interval.CCJumpBy: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.MotionStreakTest$Test1$1
org.cocos2d.tests.MotionStreakTest$Test1$1: org.cocos2d.tests.MotionStreakTest$Test1 this$1
org.cocos2d.tests.MotionStreakTest$Test1$1: MotionStreakTest$Test1$1(org.cocos2d.tests.MotionStreakTest$Test1)
org.cocos2d.tests.MotionStreakTest$Test1$1: void update(float)
org.cocos2d.nodes.CCTextureCache
org.cocos2d.nodes.CCTextureCache: java.util.HashMap textures
org.cocos2d.nodes.CCTextureCache: org.cocos2d.nodes.CCTextureCache _sharedTextureCache
org.cocos2d.nodes.CCTextureCache: boolean $assertionsDisabled
org.cocos2d.nodes.CCTextureCache: void <clinit>()
org.cocos2d.nodes.CCTextureCache: org.cocos2d.nodes.CCTextureCache sharedTextureCache()
org.cocos2d.nodes.CCTextureCache: void purgeSharedTextureCache()
org.cocos2d.nodes.CCTextureCache: CCTextureCache()
org.cocos2d.nodes.CCTextureCache: org.cocos2d.opengl.CCTexture2D addImage(java.lang.String)
org.cocos2d.nodes.CCTextureCache: org.cocos2d.opengl.CCTexture2D addImageExternal(java.lang.String)
org.cocos2d.nodes.CCTextureCache: org.cocos2d.opengl.CCTexture2D addImage(android.graphics.Bitmap,java.lang.String)
org.cocos2d.nodes.CCTextureCache: void removeAllTextures()
org.cocos2d.nodes.CCTextureCache: void removeUnusedTextures()
org.cocos2d.nodes.CCTextureCache: void removeTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCTextureCache: void addTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCTextureCache: void addTexture(org.cocos2d.opengl.CCTexture2D,java.lang.String)
org.cocos2d.nodes.CCTextureCache: void removeTexture(java.lang.String)
org.cocos2d.nodes.CCTextureCache: org.cocos2d.opengl.CCTexture2D createTextureFromFilePath(java.lang.String)
org.cocos2d.nodes.CCTextureCache: org.cocos2d.opengl.CCTexture2D createTextureFromFilePathExternal(java.lang.String)
org.cocos2d.actions.tile.CCShakyTiles3D
org.cocos2d.actions.tile.CCShakyTiles3D: int randrange
org.cocos2d.actions.tile.CCShakyTiles3D: boolean shakeZ
org.cocos2d.actions.tile.CCShakyTiles3D: org.cocos2d.actions.tile.CCShakyTiles3D action(int,boolean,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCShakyTiles3D: CCShakyTiles3D(int,boolean,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCShakyTiles3D: org.cocos2d.actions.tile.CCShakyTiles3D copy()
org.cocos2d.actions.tile.CCShakyTiles3D: void update(float)
org.cocos2d.actions.tile.CCShakyTiles3D: java.lang.Object copy()
org.cocos2d.actions.tile.CCShakyTiles3D: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: CCTiledGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.EaseActionsTest
org.cocos2d.tests.EaseActionsTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.EaseActionsTest: int sceneIdx
org.cocos2d.tests.EaseActionsTest: java.lang.Class[] transitions
org.cocos2d.tests.EaseActionsTest: int kTagAction1
org.cocos2d.tests.EaseActionsTest: int kTagAction2
org.cocos2d.tests.EaseActionsTest: int kTagSlider
org.cocos2d.tests.EaseActionsTest: void <clinit>()
org.cocos2d.tests.EaseActionsTest: EaseActionsTest()
org.cocos2d.tests.EaseActionsTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.EaseActionsTest: void onStart()
org.cocos2d.tests.EaseActionsTest: void onPause()
org.cocos2d.tests.EaseActionsTest: void onResume()
org.cocos2d.tests.EaseActionsTest: void onDestroy()
org.cocos2d.tests.EaseActionsTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.EaseActionsTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.EaseActionsTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.tests.SpritesTest$SpriteDemo
org.cocos2d.tests.SpritesTest$SpriteDemo: org.cocos2d.nodes.CCSprite grossini
org.cocos2d.tests.SpritesTest$SpriteDemo: org.cocos2d.nodes.CCSprite tamara
org.cocos2d.tests.SpritesTest$SpriteDemo: SpritesTest$SpriteDemo()
org.cocos2d.tests.SpritesTest$SpriteDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.SpritesTest$SpriteDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.SpritesTest$SpriteDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.SpritesTest$SpriteDemo: void centerSprites()
org.cocos2d.tests.SpritesTest$SpriteDemo: java.lang.String title()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.EffectsAdvancedTest
org.cocos2d.tests.EffectsAdvancedTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.EffectsAdvancedTest: int sceneIdx
org.cocos2d.tests.EffectsAdvancedTest: java.lang.Class[] transitions
org.cocos2d.tests.EffectsAdvancedTest: int kTagTextLayer
org.cocos2d.tests.EffectsAdvancedTest: int kTagSprite1
org.cocos2d.tests.EffectsAdvancedTest: int kTagSprite2
org.cocos2d.tests.EffectsAdvancedTest: int kTagBackground
org.cocos2d.tests.EffectsAdvancedTest: int kTagLabel
org.cocos2d.tests.EffectsAdvancedTest: void <clinit>()
org.cocos2d.tests.EffectsAdvancedTest: EffectsAdvancedTest()
org.cocos2d.tests.EffectsAdvancedTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.EffectsAdvancedTest: void onStart()
org.cocos2d.tests.EffectsAdvancedTest: void onPause()
org.cocos2d.tests.EffectsAdvancedTest: void onResume()
org.cocos2d.tests.EffectsAdvancedTest: void onDestroy()
org.cocos2d.tests.EffectsAdvancedTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.EffectsAdvancedTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.EffectsAdvancedTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.actions.tile.CCWavesTiles3D
org.cocos2d.actions.tile.CCWavesTiles3D: int waves
org.cocos2d.actions.tile.CCWavesTiles3D: float amplitude
org.cocos2d.actions.tile.CCWavesTiles3D: float amplitudeRate
org.cocos2d.actions.tile.CCWavesTiles3D: org.cocos2d.actions.tile.CCWavesTiles3D action(int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCWavesTiles3D: CCWavesTiles3D(int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCWavesTiles3D: org.cocos2d.actions.tile.CCWavesTiles3D copy()
org.cocos2d.actions.tile.CCWavesTiles3D: void update(float)
org.cocos2d.actions.tile.CCWavesTiles3D: java.lang.Object copy()
org.cocos2d.actions.tile.CCWavesTiles3D: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: CCTiledGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.opengl.GLResourceHelper$2
org.cocos2d.opengl.GLResourceHelper$2: org.cocos2d.opengl.GLResourceHelper this$0
org.cocos2d.opengl.GLResourceHelper$2: GLResourceHelper$2(org.cocos2d.opengl.GLResourceHelper)
org.cocos2d.opengl.GLResourceHelper$2: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.opengl.GLSurfaceView$GLThreadManager
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: boolean mGLESVersionCheckComplete
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: int mGLESVersion
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: boolean mGLESDriverCheckComplete
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: boolean mMultipleGLESContextsAllowed
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: int mGLContextCount
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: int kGLES_20
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: org.cocos2d.opengl.GLSurfaceView$GLThread mEglOwner
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: GLSurfaceView$GLThreadManager()
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: void threadExiting(org.cocos2d.opengl.GLSurfaceView$GLThread)
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: boolean tryAcquireEglSurfaceLocked(org.cocos2d.opengl.GLSurfaceView$GLThread)
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: void releaseEglSurfaceLocked(org.cocos2d.opengl.GLSurfaceView$GLThread)
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: void checkGLDriver(javax.microedition.khronos.opengles.GL10)
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: void checkGLESVersion()
org.cocos2d.opengl.GLSurfaceView$GLThreadManager: GLSurfaceView$GLThreadManager(org.cocos2d.opengl.GLSurfaceView$GLThreadManager)
org.cocos2d.opengl.GLResourceHelper$1
org.cocos2d.opengl.GLResourceHelper$1: org.cocos2d.opengl.GLResourceHelper this$0
org.cocos2d.opengl.GLResourceHelper$1: org.cocos2d.opengl.GLResourceHelper$GLResourceLoader val$loader
org.cocos2d.opengl.GLResourceHelper$1: org.cocos2d.opengl.GLResourceHelper$Resource val$res
org.cocos2d.opengl.GLResourceHelper$1: GLResourceHelper$1(org.cocos2d.opengl.GLResourceHelper,org.cocos2d.opengl.GLResourceHelper$GLResourceLoader,org.cocos2d.opengl.GLResourceHelper$Resource)
org.cocos2d.opengl.GLResourceHelper$1: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.actions.instant.CCCallFunc
org.cocos2d.actions.instant.CCCallFunc: java.lang.Object targetCallback
org.cocos2d.actions.instant.CCCallFunc: java.lang.String selector
org.cocos2d.actions.instant.CCCallFunc: java.lang.Class[] partypes
org.cocos2d.actions.instant.CCCallFunc: java.lang.reflect.Method invocation
org.cocos2d.actions.instant.CCCallFunc: org.cocos2d.actions.instant.CCCallFunc action(java.lang.Object,java.lang.String)
org.cocos2d.actions.instant.CCCallFunc: CCCallFunc(java.lang.Object,java.lang.String,java.lang.Class[])
org.cocos2d.actions.instant.CCCallFunc: org.cocos2d.actions.instant.CCCallFunc copy()
org.cocos2d.actions.instant.CCCallFunc: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.instant.CCCallFunc: void execute()
org.cocos2d.actions.instant.CCCallFunc: java.lang.Object copy()
org.cocos2d.actions.instant.CCCallFunc: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: CCInstantAction()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: boolean isDone()
org.cocos2d.actions.instant.CCInstantAction: void step(float)
org.cocos2d.actions.instant.CCInstantAction: void update(float)
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.instant.CCInstantAction: java.lang.Object copy()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.layers.CCMultiplexLayer
org.cocos2d.layers.CCMultiplexLayer: java.util.ArrayList layers
org.cocos2d.layers.CCMultiplexLayer: int enabledLayer
org.cocos2d.layers.CCMultiplexLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCMultiplexLayer: void <clinit>()
org.cocos2d.layers.CCMultiplexLayer: org.cocos2d.layers.CCMultiplexLayer node(org.cocos2d.layers.CCLayer[])
org.cocos2d.layers.CCMultiplexLayer: CCMultiplexLayer(org.cocos2d.layers.CCLayer[])
org.cocos2d.layers.CCMultiplexLayer: void switchTo(int)
org.cocos2d.layers.CCMultiplexLayer: void switchToAndReleaseMe(int)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.CGSize
org.cocos2d.types.CGSize: float width
org.cocos2d.types.CGSize: float height
org.cocos2d.types.CGSize: org.cocos2d.types.CGSize ZERO_SIZE
org.cocos2d.types.CGSize: void <clinit>()
org.cocos2d.types.CGSize: CGSize()
org.cocos2d.types.CGSize: CGSize(float,float)
org.cocos2d.types.CGSize: org.cocos2d.types.CGSize make(float,float)
org.cocos2d.types.CGSize: org.cocos2d.types.CGSize zero()
org.cocos2d.types.CGSize: void set(org.cocos2d.types.CGSize)
org.cocos2d.types.CGSize: void set(float,float)
org.cocos2d.types.CGSize: org.cocos2d.types.CGSize getZero()
org.cocos2d.types.CGSize: float getWidth()
org.cocos2d.types.CGSize: float getHeight()
org.cocos2d.types.CGSize: boolean equalToSize(org.cocos2d.types.CGSize,org.cocos2d.types.CGSize)
org.cocos2d.types.CGSize: java.lang.String toString()
org.cocos2d.tests.ParticleTest$DemoExplosion
org.cocos2d.tests.ParticleTest$DemoExplosion: int kTagLabelAtlas
org.cocos2d.tests.ParticleTest$DemoExplosion: int kTagEmitter
org.cocos2d.tests.ParticleTest$DemoExplosion: ParticleTest$DemoExplosion()
org.cocos2d.tests.ParticleTest$DemoExplosion: void onEnter()
org.cocos2d.tests.ParticleTest$DemoExplosion: java.lang.String title()
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.ParticleTest$ParticleDemo: int kTagLabelAtlas
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.particlesystem.CCParticleSystem emitter
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.nodes.CCSprite background
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.utils.javolution.TextBuilder particleCountString
org.cocos2d.tests.ParticleTest$ParticleDemo: ParticleTest$ParticleDemo()
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.utils.javolution.TextBuilder getParticleCountString(int)
org.cocos2d.tests.ParticleTest$ParticleDemo: void update(float)
org.cocos2d.tests.ParticleTest$ParticleDemo: void toggleCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void setEmitterPosition()
org.cocos2d.tests.ParticleTest$ParticleDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: java.lang.String title()
org.cocos2d.tests.ParticleTest$ParticleDemo: java.lang.String subtitle()
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccColor3B color_
org.cocos2d.layers.CCColorLayer: int opacity_
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.layers.CCColorLayer: org.cocos2d.utils.FastFloatBuffer squareVertices_
org.cocos2d.layers.CCColorLayer: org.cocos2d.utils.FastFloatBuffer squareColors_
org.cocos2d.layers.CCColorLayer: org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B)
org.cocos2d.layers.CCColorLayer: org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: CCColorLayer(org.cocos2d.types.ccColor4B)
org.cocos2d.layers.CCColorLayer: CCColorLayer(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: void init(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: void updateColor()
org.cocos2d.layers.CCColorLayer: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.layers.CCColorLayer: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.layers.CCColorLayer: void setOpacity(int)
org.cocos2d.layers.CCColorLayer: int getOpacity()
org.cocos2d.layers.CCColorLayer: float getWidth()
org.cocos2d.layers.CCColorLayer: float getHeight()
org.cocos2d.layers.CCColorLayer: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.layers.CCColorLayer: void changeWidthAndHeight(float,float)
org.cocos2d.layers.CCColorLayer: void changeWidth(float)
org.cocos2d.layers.CCColorLayer: void changeHeight(float)
org.cocos2d.layers.CCColorLayer: boolean doesOpacityModifyRGB()
org.cocos2d.layers.CCColorLayer: void setOpacityModifyRGB(boolean)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.transitions.CCFadeTransition
org.cocos2d.transitions.CCFadeTransition: org.cocos2d.types.ccColor4B color
org.cocos2d.transitions.CCFadeTransition: org.cocos2d.transitions.CCFadeTransition transition(float,org.cocos2d.layers.CCScene,org.cocos2d.types.ccColor3B)
org.cocos2d.transitions.CCFadeTransition: org.cocos2d.transitions.CCFadeTransition transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCFadeTransition: CCFadeTransition(float,org.cocos2d.layers.CCScene,org.cocos2d.types.ccColor3B)
org.cocos2d.transitions.CCFadeTransition: CCFadeTransition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCFadeTransition: void onEnter()
org.cocos2d.transitions.CCFadeTransition: void onExit()
org.cocos2d.transitions.CCFadeTransition: org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: int kSceneFade
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene inScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene outScene
org.cocos2d.transitions.CCTransitionScene: float duration
org.cocos2d.transitions.CCTransitionScene: boolean inSceneOnTop
org.cocos2d.transitions.CCTransitionScene: boolean sendCleanupToScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.actions.UpdateCallback setNewSceneCallback
org.cocos2d.transitions.CCTransitionScene: boolean $assertionsDisabled
org.cocos2d.transitions.CCTransitionScene: void <clinit>()
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: CCTransitionScene(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: void sceneOrder()
org.cocos2d.transitions.CCTransitionScene: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.transitions.CCTransitionScene: void finish()
org.cocos2d.transitions.CCTransitionScene: void setNewScene(float)
org.cocos2d.transitions.CCTransitionScene: void hideOutShowIn()
org.cocos2d.transitions.CCTransitionScene: void onEnter()
org.cocos2d.transitions.CCTransitionScene: void onExit()
org.cocos2d.transitions.CCTransitionScene: void onEnterTransitionDidFinish()
org.cocos2d.transitions.CCTransitionScene: void cleanup()
org.cocos2d.layers.CCScene: org.cocos2d.layers.CCScene node()
org.cocos2d.layers.CCScene: CCScene()
org.cocos2d.layers.CCScene: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node: java.lang.Object item
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node: org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node next
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node: java.util.concurrent.atomic.AtomicReferenceFieldUpdater nextUpdater
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node: void <clinit>()
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node: ConcNodeCachingLinkedQueue$Node()
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node: boolean casNext(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node,org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node)
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node: ConcNodeCachingLinkedQueue$Node(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node)
org.cocos2d.tests.ActionManagerTest$ActionManagerDemo
org.cocos2d.tests.ActionManagerTest$ActionManagerDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.ActionManagerTest$ActionManagerDemo: ActionManagerTest$ActionManagerDemo()
org.cocos2d.tests.ActionManagerTest$ActionManagerDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.ActionManagerTest$ActionManagerDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.ActionManagerTest$ActionManagerDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.ActionManagerTest$ActionManagerDemo: java.lang.String title()
org.cocos2d.tests.ActionManagerTest$ActionManagerDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCLiquid
org.cocos2d.actions.grid.CCLiquid: int waves
org.cocos2d.actions.grid.CCLiquid: float amplitude
org.cocos2d.actions.grid.CCLiquid: float amplitudeRate
org.cocos2d.actions.grid.CCLiquid: org.cocos2d.actions.grid.CCLiquid action(int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCLiquid: CCLiquid(int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCLiquid: void update(float)
org.cocos2d.actions.grid.CCLiquid: org.cocos2d.actions.grid.CCLiquid copy()
org.cocos2d.actions.grid.CCLiquid: java.lang.Object copy()
org.cocos2d.actions.grid.CCLiquid: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: CCGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.events.CCTouchDispatcher
org.cocos2d.events.CCTouchDispatcher: int ccTouchBegan
org.cocos2d.events.CCTouchDispatcher: int ccTouchMoved
org.cocos2d.events.CCTouchDispatcher: int ccTouchEnded
org.cocos2d.events.CCTouchDispatcher: int ccTouchCancelled
org.cocos2d.events.CCTouchDispatcher: int ccTouchMax
org.cocos2d.events.CCTouchDispatcher: boolean kEventHandled
org.cocos2d.events.CCTouchDispatcher: boolean kEventIgnored
org.cocos2d.events.CCTouchDispatcher: java.util.ArrayList motionListeners
org.cocos2d.events.CCTouchDispatcher: java.util.ArrayList targetedHandlers
org.cocos2d.events.CCTouchDispatcher: java.util.ArrayList touchHandlers
org.cocos2d.events.CCTouchDispatcher: boolean dispatchEvents
org.cocos2d.events.CCTouchDispatcher: org.cocos2d.events.CCTouchDispatcher _sharedDispatcher
org.cocos2d.events.CCTouchDispatcher: org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue eventQueue
org.cocos2d.events.CCTouchDispatcher: void <clinit>()
org.cocos2d.events.CCTouchDispatcher: boolean getDispatchEvents()
org.cocos2d.events.CCTouchDispatcher: void setDispatchEvents(boolean)
org.cocos2d.events.CCTouchDispatcher: org.cocos2d.events.CCTouchDispatcher sharedDispatcher()
org.cocos2d.events.CCTouchDispatcher: CCTouchDispatcher()
org.cocos2d.events.CCTouchDispatcher: void addHandler(org.cocos2d.events.CCTouchHandler,java.util.ArrayList)
org.cocos2d.events.CCTouchDispatcher: void addDelegate(org.cocos2d.protocols.CCTouchDelegateProtocol,int)
org.cocos2d.events.CCTouchDispatcher: void addTargetedDelegate(org.cocos2d.protocols.CCTouchDelegateProtocol,int,boolean)
org.cocos2d.events.CCTouchDispatcher: void removeDelegate(org.cocos2d.protocols.CCTouchDelegateProtocol)
org.cocos2d.events.CCTouchDispatcher: void removeAllDelegates()
org.cocos2d.events.CCTouchDispatcher: void addMotionListener(org.cocos2d.protocols.CCMotionEventProtocol)
org.cocos2d.events.CCTouchDispatcher: void removeMotionListener(org.cocos2d.protocols.CCMotionEventProtocol)
org.cocos2d.events.CCTouchDispatcher: void removeAllMotionListeners()
org.cocos2d.events.CCTouchDispatcher: void setPriority(int,org.cocos2d.events.CCTouchHandler)
org.cocos2d.events.CCTouchDispatcher: void queueMotionEvent(android.view.MotionEvent)
org.cocos2d.events.CCTouchDispatcher: void update()
org.cocos2d.events.CCTouchDispatcher: void touchesBegan(android.view.MotionEvent)
org.cocos2d.events.CCTouchDispatcher: void touchesMoved(android.view.MotionEvent)
org.cocos2d.events.CCTouchDispatcher: void touchesEnded(android.view.MotionEvent)
org.cocos2d.events.CCTouchDispatcher: void touchesCancelled(android.view.MotionEvent)
org.cocos2d.events.CCTouchDispatcher: void proccessTouches(android.view.MotionEvent)
org.cocos2d.events.CCTouchDispatcher: java.util.ArrayList access$0(org.cocos2d.events.CCTouchDispatcher)
org.cocos2d.events.CCTouchDispatcher: java.util.ArrayList access$1(org.cocos2d.events.CCTouchDispatcher)
org.cocos2d.events.CCTouchDispatcher: void access$2(org.cocos2d.events.CCTouchDispatcher,org.cocos2d.events.CCTouchHandler,java.util.ArrayList)
org.cocos2d.tests.Box2dTest
org.cocos2d.tests.Box2dTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.Box2dTest: void <clinit>()
org.cocos2d.tests.Box2dTest: Box2dTest()
org.cocos2d.tests.Box2dTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.Box2dTest: void onStart()
org.cocos2d.tests.Box2dTest: void onPause()
org.cocos2d.tests.Box2dTest: void onResume()
org.cocos2d.tests.Box2dTest: void onDestroy()
org.cocos2d.events.CCTargetedTouchHandler
org.cocos2d.events.CCTargetedTouchHandler: boolean swallowsTouches
org.cocos2d.events.CCTargetedTouchHandler: java.util.ArrayList claimedSet
org.cocos2d.events.CCTargetedTouchHandler: CCTargetedTouchHandler(org.cocos2d.protocols.CCTouchDelegateProtocol,int,boolean)
org.cocos2d.events.CCTargetedTouchHandler: void addClaimed(int)
org.cocos2d.events.CCTargetedTouchHandler: void removeClaimed(int)
org.cocos2d.events.CCTargetedTouchHandler: boolean hasClaimed(int)
org.cocos2d.events.CCTouchHandler: org.cocos2d.protocols.CCTouchDelegateProtocol delegate_
org.cocos2d.events.CCTouchHandler: int priority_
org.cocos2d.events.CCTouchHandler: int enabledSelectors_
org.cocos2d.events.CCTouchHandler: boolean $assertionsDisabled
org.cocos2d.events.CCTouchHandler: void <clinit>()
org.cocos2d.events.CCTouchHandler: org.cocos2d.protocols.CCTouchDelegateProtocol getDelegate()
org.cocos2d.events.CCTouchHandler: int getPriority()
org.cocos2d.events.CCTouchHandler: void setPriority(int)
org.cocos2d.events.CCTouchHandler: void setSelectorFlag(int)
org.cocos2d.events.CCTouchHandler: int getSelectorFlag()
org.cocos2d.events.CCTouchHandler: org.cocos2d.events.CCTouchHandler makeHandler(org.cocos2d.protocols.CCTouchDelegateProtocol,int)
org.cocos2d.events.CCTouchHandler: CCTouchHandler(org.cocos2d.protocols.CCTouchDelegateProtocol,int)
org.cocos2d.events.CCTouchHandler: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.events.CCTouchHandler: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.events.CCTouchHandler: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.events.CCTouchHandler: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.actions.interval.CCRotateTo
org.cocos2d.actions.interval.CCRotateTo: float dstAngle
org.cocos2d.actions.interval.CCRotateTo: float diffAngle
org.cocos2d.actions.interval.CCRotateTo: float startAngle
org.cocos2d.actions.interval.CCRotateTo: org.cocos2d.actions.interval.CCRotateTo action(float,float)
org.cocos2d.actions.interval.CCRotateTo: CCRotateTo(float,float)
org.cocos2d.actions.interval.CCRotateTo: org.cocos2d.actions.interval.CCRotateTo copy()
org.cocos2d.actions.interval.CCRotateTo: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCRotateTo: void update(float)
org.cocos2d.actions.interval.CCRotateTo: java.lang.Object copy()
org.cocos2d.actions.interval.CCRotateTo: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCProgressFromTo
org.cocos2d.actions.interval.CCProgressFromTo: float to_
org.cocos2d.actions.interval.CCProgressFromTo: float from_
org.cocos2d.actions.interval.CCProgressFromTo: org.cocos2d.actions.interval.CCProgressFromTo action(float,float,float)
org.cocos2d.actions.interval.CCProgressFromTo: CCProgressFromTo(float,float,float)
org.cocos2d.actions.interval.CCProgressFromTo: org.cocos2d.actions.interval.CCProgressFromTo copy()
org.cocos2d.actions.interval.CCProgressFromTo: org.cocos2d.actions.interval.CCProgressFromTo reverse()
org.cocos2d.actions.interval.CCProgressFromTo: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCProgressFromTo: void update(float)
org.cocos2d.actions.interval.CCProgressFromTo: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCProgressFromTo: java.lang.Object copy()
org.cocos2d.actions.interval.CCProgressFromTo: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.grid.CCGridBase$1
org.cocos2d.grid.CCGridBase$1: org.cocos2d.grid.CCGridBase this$0
org.cocos2d.grid.CCGridBase$1: org.cocos2d.types.ccGridSize val$gSize
org.cocos2d.grid.CCGridBase$1: CCGridBase$1(org.cocos2d.grid.CCGridBase,org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCGridBase$1: void load(org.cocos2d.opengl.GLResourceHelper$Resource)
org.cocos2d.tests.EaseActionsTest$SpriteDemo
org.cocos2d.tests.EaseActionsTest$SpriteDemo: org.cocos2d.nodes.CCSprite grossini
org.cocos2d.tests.EaseActionsTest$SpriteDemo: org.cocos2d.nodes.CCSprite tamara
org.cocos2d.tests.EaseActionsTest$SpriteDemo: org.cocos2d.nodes.CCSprite kathia
org.cocos2d.tests.EaseActionsTest$SpriteDemo: EaseActionsTest$SpriteDemo()
org.cocos2d.tests.EaseActionsTest$SpriteDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.EaseActionsTest$SpriteDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.EaseActionsTest$SpriteDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.EaseActionsTest$SpriteDemo: void positionForTwo()
org.cocos2d.tests.EaseActionsTest$SpriteDemo: java.lang.String title()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.ParticleTest$Issue870
org.cocos2d.tests.ParticleTest$Issue870: int index
org.cocos2d.tests.ParticleTest$Issue870: ParticleTest$Issue870()
org.cocos2d.tests.ParticleTest$Issue870: void onEnter()
org.cocos2d.tests.ParticleTest$Issue870: void updateQuads(float)
org.cocos2d.tests.ParticleTest$Issue870: java.lang.String title()
org.cocos2d.tests.ParticleTest$Issue870: java.lang.String subtitle()
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.ParticleTest$ParticleDemo: int kTagLabelAtlas
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.particlesystem.CCParticleSystem emitter
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.nodes.CCSprite background
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.utils.javolution.TextBuilder particleCountString
org.cocos2d.tests.ParticleTest$ParticleDemo: ParticleTest$ParticleDemo()
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.utils.javolution.TextBuilder getParticleCountString(int)
org.cocos2d.tests.ParticleTest$ParticleDemo: void update(float)
org.cocos2d.tests.ParticleTest$ParticleDemo: void toggleCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void setEmitterPosition()
org.cocos2d.tests.ParticleTest$ParticleDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: java.lang.String title()
org.cocos2d.tests.ParticleTest$ParticleDemo: java.lang.String subtitle()
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccColor3B color_
org.cocos2d.layers.CCColorLayer: int opacity_
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.layers.CCColorLayer: org.cocos2d.utils.FastFloatBuffer squareVertices_
org.cocos2d.layers.CCColorLayer: org.cocos2d.utils.FastFloatBuffer squareColors_
org.cocos2d.layers.CCColorLayer: org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B)
org.cocos2d.layers.CCColorLayer: org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: CCColorLayer(org.cocos2d.types.ccColor4B)
org.cocos2d.layers.CCColorLayer: CCColorLayer(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: void init(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: void updateColor()
org.cocos2d.layers.CCColorLayer: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.layers.CCColorLayer: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.layers.CCColorLayer: void setOpacity(int)
org.cocos2d.layers.CCColorLayer: int getOpacity()
org.cocos2d.layers.CCColorLayer: float getWidth()
org.cocos2d.layers.CCColorLayer: float getHeight()
org.cocos2d.layers.CCColorLayer: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.layers.CCColorLayer: void changeWidthAndHeight(float,float)
org.cocos2d.layers.CCColorLayer: void changeWidth(float)
org.cocos2d.layers.CCColorLayer: void changeHeight(float)
org.cocos2d.layers.CCColorLayer: boolean doesOpacityModifyRGB()
org.cocos2d.layers.CCColorLayer: void setOpacityModifyRGB(boolean)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCLabel$TextAlignment
org.cocos2d.nodes.CCLabel$TextAlignment: org.cocos2d.nodes.CCLabel$TextAlignment LEFT
org.cocos2d.nodes.CCLabel$TextAlignment: org.cocos2d.nodes.CCLabel$TextAlignment CENTER
org.cocos2d.nodes.CCLabel$TextAlignment: org.cocos2d.nodes.CCLabel$TextAlignment RIGHT
org.cocos2d.nodes.CCLabel$TextAlignment: org.cocos2d.nodes.CCLabel$TextAlignment[] ENUM$VALUES
org.cocos2d.nodes.CCLabel$TextAlignment: void <clinit>()
org.cocos2d.nodes.CCLabel$TextAlignment: CCLabel$TextAlignment(java.lang.String,int)
org.cocos2d.nodes.CCLabel$TextAlignment: org.cocos2d.nodes.CCLabel$TextAlignment[] values()
org.cocos2d.nodes.CCLabel$TextAlignment: org.cocos2d.nodes.CCLabel$TextAlignment valueOf(java.lang.String)
org.cocos2d.actions.grid.CCShaky3D
org.cocos2d.actions.grid.CCShaky3D: int randrange
org.cocos2d.actions.grid.CCShaky3D: boolean shakeZ
org.cocos2d.actions.grid.CCShaky3D: org.cocos2d.actions.grid.CCShaky3D action(int,boolean,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCShaky3D: CCShaky3D(int,boolean,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCShaky3D: org.cocos2d.actions.grid.CCShaky3D copy()
org.cocos2d.actions.grid.CCShaky3D: void update(float)
org.cocos2d.actions.grid.CCShaky3D: java.lang.Object copy()
org.cocos2d.actions.grid.CCShaky3D: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: CCGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.FontTest
org.cocos2d.tests.FontTest: int kTagMenu
org.cocos2d.tests.FontTest: int kTagMenu0
org.cocos2d.tests.FontTest: int kTagMenu1
org.cocos2d.tests.FontTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.FontTest: int kTagSpriteManager
org.cocos2d.tests.FontTest: FontTest()
org.cocos2d.tests.FontTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.FontTest: void onStart()
org.cocos2d.tests.FontTest: void onPause()
org.cocos2d.tests.FontTest: void onResume()
org.cocos2d.tests.FontTest: void onDestroy()
org.cocos2d.actions.interval.CCSpawn
org.cocos2d.actions.interval.CCSpawn: org.cocos2d.actions.base.CCFiniteTimeAction one
org.cocos2d.actions.interval.CCSpawn: org.cocos2d.actions.base.CCFiniteTimeAction two
org.cocos2d.actions.interval.CCSpawn: org.cocos2d.actions.interval.CCSpawn actions(org.cocos2d.actions.base.CCFiniteTimeAction,org.cocos2d.actions.base.CCFiniteTimeAction[])
org.cocos2d.actions.interval.CCSpawn: CCSpawn(org.cocos2d.actions.base.CCFiniteTimeAction,org.cocos2d.actions.base.CCFiniteTimeAction)
org.cocos2d.actions.interval.CCSpawn: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCSpawn: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCSpawn: void stop()
org.cocos2d.actions.interval.CCSpawn: void update(float)
org.cocos2d.actions.interval.CCSpawn: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCSpawn: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.types.CGAffineTransform
org.cocos2d.types.CGAffineTransform: long serialVersionUID
org.cocos2d.types.CGAffineTransform: int TYPE_IDENTITY
org.cocos2d.types.CGAffineTransform: int TYPE_TRANSLATION
org.cocos2d.types.CGAffineTransform: int TYPE_UNIFORM_SCALE
org.cocos2d.types.CGAffineTransform: int TYPE_GENERAL_SCALE
org.cocos2d.types.CGAffineTransform: int TYPE_QUADRANT_ROTATION
org.cocos2d.types.CGAffineTransform: int TYPE_GENERAL_ROTATION
org.cocos2d.types.CGAffineTransform: int TYPE_GENERAL_TRANSFORM
org.cocos2d.types.CGAffineTransform: int TYPE_FLIP
org.cocos2d.types.CGAffineTransform: int TYPE_MASK_SCALE
org.cocos2d.types.CGAffineTransform: int TYPE_MASK_ROTATION
org.cocos2d.types.CGAffineTransform: int TYPE_UNKNOWN
org.cocos2d.types.CGAffineTransform: double ZERO
org.cocos2d.types.CGAffineTransform: double m00
org.cocos2d.types.CGAffineTransform: double m10
org.cocos2d.types.CGAffineTransform: double m01
org.cocos2d.types.CGAffineTransform: double m11
org.cocos2d.types.CGAffineTransform: double m02
org.cocos2d.types.CGAffineTransform: double m12
org.cocos2d.types.CGAffineTransform: int type
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform identity()
org.cocos2d.types.CGAffineTransform: CGAffineTransform()
org.cocos2d.types.CGAffineTransform: CGAffineTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.types.CGAffineTransform: CGAffineTransform(float,float,float,float,float,float)
org.cocos2d.types.CGAffineTransform: CGAffineTransform(double,double,double,double,double,double)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform make(double,double,double,double,double,double)
org.cocos2d.types.CGAffineTransform: CGAffineTransform(float[])
org.cocos2d.types.CGAffineTransform: CGAffineTransform(double[])
org.cocos2d.types.CGAffineTransform: int getType()
org.cocos2d.types.CGAffineTransform: double getScaleX()
org.cocos2d.types.CGAffineTransform: double getScaleY()
org.cocos2d.types.CGAffineTransform: double getShearX()
org.cocos2d.types.CGAffineTransform: double getShearY()
org.cocos2d.types.CGAffineTransform: double getTranslateX()
org.cocos2d.types.CGAffineTransform: double getTranslateY()
org.cocos2d.types.CGAffineTransform: boolean isIdentity()
org.cocos2d.types.CGAffineTransform: void getMatrix(double[])
org.cocos2d.types.CGAffineTransform: double getDeterminant()
org.cocos2d.types.CGAffineTransform: void setTransform(double,double,double,double,double,double)
org.cocos2d.types.CGAffineTransform: void setTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.types.CGAffineTransform: void setToIdentity()
org.cocos2d.types.CGAffineTransform: void setToTranslation(double,double)
org.cocos2d.types.CGAffineTransform: void setToScale(double,double)
org.cocos2d.types.CGAffineTransform: void setToShear(double,double)
org.cocos2d.types.CGAffineTransform: void setToRotation(double)
org.cocos2d.types.CGAffineTransform: void setToRotation(double,double,double)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform makeTranslation(double,double)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform makeScale(double,double)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform makeShear(double,double)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform makeRotation(double)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform makeRotation(double,double,double)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform getTransformTranslate(double,double)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform getTransformScale(double,double)
org.cocos2d.types.CGAffineTransform: void shear(double,double)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform getTransformRotate(double)
org.cocos2d.types.CGAffineTransform: void rotate(double,double,double)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform multiply(org.cocos2d.types.CGAffineTransform,org.cocos2d.types.CGAffineTransform)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform getTransformConcat(org.cocos2d.types.CGAffineTransform)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform preConcatenate(org.cocos2d.types.CGAffineTransform)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGAffineTransform getTransformInvert()
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGPoint applyTransform(org.cocos2d.types.CGPoint)
org.cocos2d.types.CGAffineTransform: void transform(org.cocos2d.types.CGPoint[],int,org.cocos2d.types.CGPoint[],int,int)
org.cocos2d.types.CGAffineTransform: void transform(double[],int,double[],int,int)
org.cocos2d.types.CGAffineTransform: void transform(float[],int,float[],int,int)
org.cocos2d.types.CGAffineTransform: void transform(float[],int,double[],int,int)
org.cocos2d.types.CGAffineTransform: void transform(double[],int,float[],int,int)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGPoint deltaTransform(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGAffineTransform: void deltaTransform(double[],int,double[],int,int)
org.cocos2d.types.CGAffineTransform: org.cocos2d.types.CGPoint inverseTransform(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGAffineTransform: void inverseTransform(double[],int,double[],int,int)
org.cocos2d.types.CGAffineTransform: void set(double,double,double,double,double,double)
org.cocos2d.types.CGAffineTransform: void translate(double,double)
org.cocos2d.types.CGAffineTransform: void rotate(double)
org.cocos2d.types.CGAffineTransform: void scale(double,double)
org.cocos2d.types.CGAffineTransform: void multiply(org.cocos2d.types.CGAffineTransform)
org.cocos2d.types.CGAffineTransform: java.lang.String toString()
org.cocos2d.types.CGAffineTransform: java.lang.Object clone()
org.cocos2d.types.CGAffineTransform: int hashCode()
org.cocos2d.types.CGAffineTransform: boolean equals(java.lang.Object)
org.cocos2d.types.CGAffineTransform: void writeObject(java.io.ObjectOutputStream)
org.cocos2d.types.CGAffineTransform: void readObject(java.io.ObjectInputStream)
org.cocos2d.types.CGAffineTransform: void CGAffineToGL(org.cocos2d.types.CGAffineTransform,float[])
org.cocos2d.types.CGAffineTransform: void GLToCGAffine(float[],org.cocos2d.types.CGAffineTransform)
org.cocos2d.tests.SchedulerTest
org.cocos2d.tests.SchedulerTest: java.lang.String LOG_TAG
org.cocos2d.tests.SchedulerTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.SchedulerTest: int kTagAnimationDance
org.cocos2d.tests.SchedulerTest: int sceneIdx
org.cocos2d.tests.SchedulerTest: java.lang.Class[] transitions
org.cocos2d.tests.SchedulerTest: void <clinit>()
org.cocos2d.tests.SchedulerTest: SchedulerTest()
org.cocos2d.tests.SchedulerTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.SchedulerTest: void onStart()
org.cocos2d.tests.SchedulerTest: void onPause()
org.cocos2d.tests.SchedulerTest: void onResume()
org.cocos2d.tests.SchedulerTest: void onDestroy()
org.cocos2d.tests.SchedulerTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.SchedulerTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.SchedulerTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.types.CCBezierConfig
org.cocos2d.types.CCBezierConfig: org.cocos2d.types.CGPoint endPosition
org.cocos2d.types.CCBezierConfig: org.cocos2d.types.CGPoint controlPoint_1
org.cocos2d.types.CCBezierConfig: org.cocos2d.types.CGPoint controlPoint_2
org.cocos2d.types.CCBezierConfig: CCBezierConfig()
org.cocos2d.types.CCBezierConfig: float bezierAt(float,float,float,float,float)
org.cocos2d.opengl.CCCamera
org.cocos2d.opengl.CCCamera: float eyeX
org.cocos2d.opengl.CCCamera: float eyeY
org.cocos2d.opengl.CCCamera: float eyeZ
org.cocos2d.opengl.CCCamera: float centerX
org.cocos2d.opengl.CCCamera: float centerY
org.cocos2d.opengl.CCCamera: float centerZ
org.cocos2d.opengl.CCCamera: float upX
org.cocos2d.opengl.CCCamera: float upY
org.cocos2d.opengl.CCCamera: float upZ
org.cocos2d.opengl.CCCamera: boolean dirty
org.cocos2d.opengl.CCCamera: boolean getDirty()
org.cocos2d.opengl.CCCamera: void setDirty(boolean)
org.cocos2d.opengl.CCCamera: CCCamera()
org.cocos2d.opengl.CCCamera: java.lang.String toString()
org.cocos2d.opengl.CCCamera: void restore()
org.cocos2d.opengl.CCCamera: void locate(javax.microedition.khronos.opengles.GL10)
org.cocos2d.opengl.CCCamera: float getZEye()
org.cocos2d.opengl.CCCamera: void setEye(float,float,float)
org.cocos2d.opengl.CCCamera: void setCenter(float,float,float)
org.cocos2d.opengl.CCCamera: void setUp(float,float,float)
org.cocos2d.opengl.CCCamera: void getEye(float[],float[],float[])
org.cocos2d.opengl.CCCamera: void getCenter(float[],float[],float[])
org.cocos2d.opengl.CCCamera: void getUp(float[],float[],float[])
org.cocos2d.types.ccTex2F
org.cocos2d.types.ccTex2F: float u
org.cocos2d.types.ccTex2F: float v
org.cocos2d.types.ccTex2F: ccTex2F(float,float)
org.cocos2d.types.ccTex2F: float[] toFloatArray()
org.cocos2d.opengl.CCTexture2D
org.cocos2d.opengl.CCTexture2D: int kMaxTextureSize
org.cocos2d.opengl.CCTexture2D: boolean premultipliedAlpha
org.cocos2d.opengl.CCTexture2D: org.cocos2d.utils.FastFloatBuffer mVertices
org.cocos2d.opengl.CCTexture2D: org.cocos2d.utils.FastFloatBuffer mCoordinates
org.cocos2d.opengl.CCTexture2D: android.graphics.Bitmap mBitmap
org.cocos2d.opengl.CCTexture2D: int _name
org.cocos2d.opengl.CCTexture2D: org.cocos2d.types.CGSize mContentSize
org.cocos2d.opengl.CCTexture2D: int mWidth
org.cocos2d.opengl.CCTexture2D: int mHeight
org.cocos2d.opengl.CCTexture2D: android.graphics.Bitmap$Config _format
org.cocos2d.opengl.CCTexture2D: float _maxS
org.cocos2d.opengl.CCTexture2D: float _maxT
org.cocos2d.opengl.CCTexture2D: org.cocos2d.types.CCTexParams _texParams
org.cocos2d.opengl.CCTexture2D: java.util.HashMap typefaces
org.cocos2d.opengl.CCTexture2D: android.graphics.Bitmap$Config defaultAlphaPixelFormat_
org.cocos2d.opengl.CCTexture2D: int[] $SWITCH_TABLE$org$cocos2d$nodes$CCLabel$TextAlignment
org.cocos2d.opengl.CCTexture2D: boolean $assertionsDisabled
org.cocos2d.opengl.CCTexture2D: void <clinit>()
org.cocos2d.opengl.CCTexture2D: android.graphics.Bitmap$Config pixelFormat()
org.cocos2d.opengl.CCTexture2D: int pixelsWide()
org.cocos2d.opengl.CCTexture2D: int pixelsHigh()
org.cocos2d.opengl.CCTexture2D: float getWidth()
org.cocos2d.opengl.CCTexture2D: float getHeight()
org.cocos2d.opengl.CCTexture2D: int name()
org.cocos2d.opengl.CCTexture2D: float maxS()
org.cocos2d.opengl.CCTexture2D: float maxT()
org.cocos2d.opengl.CCTexture2D: boolean hasPremultipliedAlpha()
org.cocos2d.opengl.CCTexture2D: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.opengl.CCTexture2D: void releaseTexture(javax.microedition.khronos.opengles.GL10)
org.cocos2d.opengl.CCTexture2D: void finalize()
org.cocos2d.opengl.CCTexture2D: CCTexture2D()
org.cocos2d.opengl.CCTexture2D: void setLoader(org.cocos2d.opengl.GLResourceHelper$GLResourceLoader)
org.cocos2d.opengl.CCTexture2D: void initWithImage(android.graphics.Bitmap)
org.cocos2d.opengl.CCTexture2D: void initWithImage(android.graphics.Bitmap,org.cocos2d.types.CGSize)
org.cocos2d.opengl.CCTexture2D: void initWithImage(android.graphics.Bitmap,org.cocos2d.types.CGSize,org.cocos2d.types.CGSize)
org.cocos2d.opengl.CCTexture2D: void init(android.graphics.Bitmap,org.cocos2d.types.CGSize,org.cocos2d.types.CGSize)
org.cocos2d.opengl.CCTexture2D: void initWithText(java.lang.String,java.lang.String,float)
org.cocos2d.opengl.CCTexture2D: org.cocos2d.types.CGSize calculateTextSize(java.lang.String,java.lang.String,float)
org.cocos2d.opengl.CCTexture2D: int toPow2(int)
org.cocos2d.opengl.CCTexture2D: void initWithText(java.lang.String,org.cocos2d.types.CGSize,org.cocos2d.nodes.CCLabel$TextAlignment,java.lang.String,float)
org.cocos2d.opengl.CCTexture2D: java.util.ArrayList WrapText(android.graphics.Paint,java.lang.String,float)
org.cocos2d.opengl.CCTexture2D: void loadTexture(javax.microedition.khronos.opengles.GL10)
org.cocos2d.opengl.CCTexture2D: boolean isLoaded()
org.cocos2d.opengl.CCTexture2D: void drawAtPoint(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint)
org.cocos2d.opengl.CCTexture2D: void drawInRect(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGRect)
org.cocos2d.opengl.CCTexture2D: void setTexParameters(org.cocos2d.types.CCTexParams)
org.cocos2d.opengl.CCTexture2D: void setTexParameters(int,int,int,int)
org.cocos2d.opengl.CCTexture2D: void applyTexParameters(javax.microedition.khronos.opengles.GL10)
org.cocos2d.opengl.CCTexture2D: void setAliasTexParameters()
org.cocos2d.opengl.CCTexture2D: void setAntiAliasTexParameters()
org.cocos2d.opengl.CCTexture2D: void generateMipmap()
org.cocos2d.opengl.CCTexture2D: void setDefaultAlphaPixelFormat(android.graphics.Bitmap$Config)
org.cocos2d.opengl.CCTexture2D: android.graphics.Bitmap$Config defaultAlphaPixelFormat()
org.cocos2d.opengl.CCTexture2D: int access$0(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.opengl.CCTexture2D: int[] $SWITCH_TABLE$org$cocos2d$nodes$CCLabel$TextAlignment()
org.cocos2d.opengl.CCTexture2D: void access$2(org.cocos2d.opengl.CCTexture2D,javax.microedition.khronos.opengles.GL10)
org.cocos2d.particlesystem.CCParticleSystem$ModeA
org.cocos2d.particlesystem.CCParticleSystem$ModeA: org.cocos2d.types.CGPoint gravity
org.cocos2d.particlesystem.CCParticleSystem$ModeA: float speed
org.cocos2d.particlesystem.CCParticleSystem$ModeA: float speedVar
org.cocos2d.particlesystem.CCParticleSystem$ModeA: float tangentialAccel
org.cocos2d.particlesystem.CCParticleSystem$ModeA: float tangentialAccelVar
org.cocos2d.particlesystem.CCParticleSystem$ModeA: float radialAccel
org.cocos2d.particlesystem.CCParticleSystem$ModeA: float radialAccelVar
org.cocos2d.particlesystem.CCParticleSystem$ModeA: org.cocos2d.particlesystem.CCParticleSystem this$0
org.cocos2d.particlesystem.CCParticleSystem$ModeA: CCParticleSystem$ModeA(org.cocos2d.particlesystem.CCParticleSystem)
org.cocos2d.particlesystem.CCParticleSystem$ModeB
org.cocos2d.particlesystem.CCParticleSystem$ModeB: float startRadius
org.cocos2d.particlesystem.CCParticleSystem$ModeB: float startRadiusVar
org.cocos2d.particlesystem.CCParticleSystem$ModeB: float endRadius
org.cocos2d.particlesystem.CCParticleSystem$ModeB: float endRadiusVar
org.cocos2d.particlesystem.CCParticleSystem$ModeB: float rotatePerSecond
org.cocos2d.particlesystem.CCParticleSystem$ModeB: float rotatePerSecondVar
org.cocos2d.particlesystem.CCParticleSystem$ModeB: org.cocos2d.particlesystem.CCParticleSystem this$0
org.cocos2d.particlesystem.CCParticleSystem$ModeB: CCParticleSystem$ModeB(org.cocos2d.particlesystem.CCParticleSystem)
org.cocos2d.transitions.CCSlideInLTransition
org.cocos2d.transitions.CCSlideInLTransition: float ADJUST_FACTOR
org.cocos2d.transitions.CCSlideInLTransition: org.cocos2d.transitions.CCSlideInLTransition transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCSlideInLTransition: CCSlideInLTransition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCSlideInLTransition: void onEnter()
org.cocos2d.transitions.CCSlideInLTransition: void sceneOrder()
org.cocos2d.transitions.CCSlideInLTransition: void initScenes()
org.cocos2d.transitions.CCSlideInLTransition: org.cocos2d.actions.interval.CCIntervalAction action()
org.cocos2d.transitions.CCSlideInLTransition: org.cocos2d.actions.interval.CCIntervalAction easeAction(org.cocos2d.actions.interval.CCIntervalAction)
org.cocos2d.transitions.CCSlideInLTransition: org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: int kSceneFade
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene inScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene outScene
org.cocos2d.transitions.CCTransitionScene: float duration
org.cocos2d.transitions.CCTransitionScene: boolean inSceneOnTop
org.cocos2d.transitions.CCTransitionScene: boolean sendCleanupToScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.actions.UpdateCallback setNewSceneCallback
org.cocos2d.transitions.CCTransitionScene: boolean $assertionsDisabled
org.cocos2d.transitions.CCTransitionScene: void <clinit>()
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: CCTransitionScene(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: void sceneOrder()
org.cocos2d.transitions.CCTransitionScene: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.transitions.CCTransitionScene: void finish()
org.cocos2d.transitions.CCTransitionScene: void setNewScene(float)
org.cocos2d.transitions.CCTransitionScene: void hideOutShowIn()
org.cocos2d.transitions.CCTransitionScene: void onEnter()
org.cocos2d.transitions.CCTransitionScene: void onExit()
org.cocos2d.transitions.CCTransitionScene: void onEnterTransitionDidFinish()
org.cocos2d.transitions.CCTransitionScene: void cleanup()
org.cocos2d.layers.CCScene: org.cocos2d.layers.CCScene node()
org.cocos2d.layers.CCScene: CCScene()
org.cocos2d.layers.CCScene: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.NoninvertibleTransformException
org.cocos2d.types.NoninvertibleTransformException: long serialVersionUID
org.cocos2d.types.NoninvertibleTransformException: NoninvertibleTransformException(java.lang.String)
org.cocos2d.utils.CCFormatter
org.cocos2d.utils.CCFormatter: java.lang.StringBuilder sb
org.cocos2d.utils.CCFormatter: java.util.Formatter formatter
org.cocos2d.utils.CCFormatter: void <clinit>()
org.cocos2d.utils.CCFormatter: CCFormatter()
org.cocos2d.utils.CCFormatter: java.lang.String format(java.lang.String,java.lang.Object[])
org.cocos2d.utils.CCFormatter: int swapIntToLittleEndian(int)
org.cocos2d.grid.CCTiledGrid3D
org.cocos2d.grid.CCTiledGrid3D: org.cocos2d.utils.FastFloatBuffer texCoordinates
org.cocos2d.grid.CCTiledGrid3D: org.cocos2d.utils.FastFloatBuffer vertices
org.cocos2d.grid.CCTiledGrid3D: org.cocos2d.utils.FastFloatBuffer originalVertices
org.cocos2d.grid.CCTiledGrid3D: java.nio.ShortBuffer indices
org.cocos2d.grid.CCTiledGrid3D: org.cocos2d.grid.CCTiledGrid3D make(org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCTiledGrid3D: CCTiledGrid3D(org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCTiledGrid3D: void blit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCTiledGrid3D: void calculateVertexPoints()
org.cocos2d.grid.CCTiledGrid3D: void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3)
org.cocos2d.grid.CCTiledGrid3D: org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCTiledGrid3D: org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCTiledGrid3D: void reuse(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: boolean active_
org.cocos2d.grid.CCGridBase: int reuseGrid_
org.cocos2d.grid.CCGridBase: org.cocos2d.types.ccGridSize gridSize_
org.cocos2d.grid.CCGridBase: org.cocos2d.opengl.CCTexture2D texture_
org.cocos2d.grid.CCGridBase: org.cocos2d.types.CGPoint step_
org.cocos2d.grid.CCGridBase: org.cocos2d.grid.CCGrabber grabber_
org.cocos2d.grid.CCGridBase: boolean isTextureFlipped_
org.cocos2d.grid.CCGridBase: javax.microedition.khronos.opengles.GL10 gl
org.cocos2d.grid.CCGridBase: int kTextureSize
org.cocos2d.grid.CCGridBase: org.cocos2d.types.CGPoint getStep()
org.cocos2d.grid.CCGridBase: boolean isTextureFlipped()
org.cocos2d.grid.CCGridBase: void setIsTextureFlipped(javax.microedition.khronos.opengles.GL10,boolean)
org.cocos2d.grid.CCGridBase: int reuseGrid()
org.cocos2d.grid.CCGridBase: void setReuseGrid(int)
org.cocos2d.grid.CCGridBase: boolean isActive()
org.cocos2d.grid.CCGridBase: void setActive(boolean)
org.cocos2d.grid.CCGridBase: int getGridWidth()
org.cocos2d.grid.CCGridBase: int getGridHeight()
org.cocos2d.grid.CCGridBase: CCGridBase(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean)
org.cocos2d.grid.CCGridBase: void init(org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean)
org.cocos2d.grid.CCGridBase: CCGridBase(org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCGridBase: java.lang.String toString()
org.cocos2d.grid.CCGridBase: void applyLandscape(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void set2DProjection(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void set3DProjection(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void beforeDraw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void afterDraw(javax.microedition.khronos.opengles.GL10,org.cocos2d.nodes.CCNode)
org.cocos2d.grid.CCGridBase: void finalize()
org.cocos2d.grid.CCGridBase: void blit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void reuse(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void calculateVertexPoints()
org.cocos2d.grid.CCGridBase: void access$0(org.cocos2d.grid.CCGridBase,org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean)
org.cocos2d.utils.Base64
org.cocos2d.utils.Base64: int NO_OPTIONS
org.cocos2d.utils.Base64: int ENCODE
org.cocos2d.utils.Base64: int DECODE
org.cocos2d.utils.Base64: int GZIP
org.cocos2d.utils.Base64: int DONT_GUNZIP
org.cocos2d.utils.Base64: int DO_BREAK_LINES
org.cocos2d.utils.Base64: int URL_SAFE
org.cocos2d.utils.Base64: int ORDERED
org.cocos2d.utils.Base64: int MAX_LINE_LENGTH
org.cocos2d.utils.Base64: byte EQUALS_SIGN
org.cocos2d.utils.Base64: byte NEW_LINE
org.cocos2d.utils.Base64: java.lang.String PREFERRED_ENCODING
org.cocos2d.utils.Base64: byte WHITE_SPACE_ENC
org.cocos2d.utils.Base64: byte EQUALS_SIGN_ENC
org.cocos2d.utils.Base64: byte[] _STANDARD_ALPHABET
org.cocos2d.utils.Base64: byte[] _STANDARD_DECODABET
org.cocos2d.utils.Base64: byte[] _URL_SAFE_ALPHABET
org.cocos2d.utils.Base64: byte[] _URL_SAFE_DECODABET
org.cocos2d.utils.Base64: byte[] _ORDERED_ALPHABET
org.cocos2d.utils.Base64: byte[] _ORDERED_DECODABET
org.cocos2d.utils.Base64: boolean $assertionsDisabled
org.cocos2d.utils.Base64: void <clinit>()
org.cocos2d.utils.Base64: byte[] getAlphabet(int)
org.cocos2d.utils.Base64: byte[] getDecodabet(int)
org.cocos2d.utils.Base64: Base64()
org.cocos2d.utils.Base64: byte[] encode3to4(byte[],byte[],int,int)
org.cocos2d.utils.Base64: byte[] encode3to4(byte[],int,int,byte[],int,int)
org.cocos2d.utils.Base64: void encode(java.nio.ByteBuffer,java.nio.ByteBuffer)
org.cocos2d.utils.Base64: void encode(java.nio.ByteBuffer,java.nio.CharBuffer)
org.cocos2d.utils.Base64: java.lang.String encodeObject(java.io.Serializable)
org.cocos2d.utils.Base64: java.lang.String encodeObject(java.io.Serializable,int)
org.cocos2d.utils.Base64: java.lang.String encodeBytes(byte[])
org.cocos2d.utils.Base64: java.lang.String encodeBytes(byte[],int)
org.cocos2d.utils.Base64: java.lang.String encodeBytes(byte[],int,int)
org.cocos2d.utils.Base64: java.lang.String encodeBytes(byte[],int,int,int)
org.cocos2d.utils.Base64: byte[] encodeBytesToBytes(byte[])
org.cocos2d.utils.Base64: byte[] encodeBytesToBytes(byte[],int,int,int)
org.cocos2d.utils.Base64: int decode4to3(byte[],int,byte[],int,int)
org.cocos2d.utils.Base64: byte[] decode(byte[])
org.cocos2d.utils.Base64: byte[] decode(byte[],int,int,int)
org.cocos2d.utils.Base64: byte[] decode(java.lang.String)
org.cocos2d.utils.Base64: byte[] decode(java.lang.String,int)
org.cocos2d.utils.Base64: java.lang.Object decodeToObject(java.lang.String)
org.cocos2d.utils.Base64: java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader)
org.cocos2d.utils.Base64: void encodeToFile(byte[],java.lang.String)
org.cocos2d.utils.Base64: void decodeToFile(java.lang.String,java.lang.String)
org.cocos2d.utils.Base64: byte[] decodeFromFile(java.lang.String)
org.cocos2d.utils.Base64: java.lang.String encodeFromFile(java.lang.String)
org.cocos2d.utils.Base64: void encodeFileToFile(java.lang.String,java.lang.String)
org.cocos2d.utils.Base64: void decodeFileToFile(java.lang.String,java.lang.String)
org.cocos2d.utils.Base64: byte[] access$0(int)
org.cocos2d.utils.Base64: byte[] access$1(byte[],int,int,byte[],int,int)
org.cocos2d.utils.Base64: int access$2(byte[],int,byte[],int,int)
org.cocos2d.utils.Base64: byte[] access$3(byte[],byte[],int,int)
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: java.nio.ByteBuffer bb
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int SIZE
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: CCPVRTexture$PVRTexHeader(java.nio.ByteBuffer)
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int headerLength()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int height()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int width()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int numMipmaps()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int flags()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int dataLength()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int bpp()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int bitmaskRed()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int bitmaskGreen()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int bitmaskBlue()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int bitmaskAlpha()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int pvrTag()
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader: int numSurfs()
org.cocos2d.utils.collections.ConcArrayStack
org.cocos2d.utils.collections.ConcArrayStack: java.util.ArrayList array
org.cocos2d.utils.collections.ConcArrayStack: java.util.concurrent.locks.ReentrantLock lock
org.cocos2d.utils.collections.ConcArrayStack: ConcArrayStack()
org.cocos2d.utils.collections.ConcArrayStack: void push(java.lang.Object)
org.cocos2d.utils.collections.ConcArrayStack: java.lang.Object pop()
org.cocos2d.tests.ParallaxTest$ParallaxDemo
org.cocos2d.tests.ParallaxTest$ParallaxDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.ParallaxTest$ParallaxDemo: int kTagNode
org.cocos2d.tests.ParallaxTest$ParallaxDemo: int kTagGrossini
org.cocos2d.tests.ParallaxTest$ParallaxDemo: ParallaxTest$ParallaxDemo()
org.cocos2d.tests.ParallaxTest$ParallaxDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.ParallaxTest$ParallaxDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.ParallaxTest$ParallaxDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.ParallaxTest$ParallaxDemo: java.lang.String title()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.TileMapTest$TileDemo
org.cocos2d.tests.TileMapTest$TileDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.TileMapTest$TileDemo: TileMapTest$TileDemo()
org.cocos2d.tests.TileMapTest$TileDemo: void registerWithTouchDispatcher()
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String title()
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.ccQuad3
org.cocos2d.types.ccQuad3: int size
org.cocos2d.types.ccQuad3: float bl_x
org.cocos2d.types.ccQuad3: float bl_y
org.cocos2d.types.ccQuad3: float bl_z
org.cocos2d.types.ccQuad3: float br_x
org.cocos2d.types.ccQuad3: float br_y
org.cocos2d.types.ccQuad3: float br_z
org.cocos2d.types.ccQuad3: float tl_x
org.cocos2d.types.ccQuad3: float tl_y
org.cocos2d.types.ccQuad3: float tl_z
org.cocos2d.types.ccQuad3: float tr_x
org.cocos2d.types.ccQuad3: float tr_y
org.cocos2d.types.ccQuad3: float tr_z
org.cocos2d.types.ccQuad3: ccQuad3()
org.cocos2d.types.ccQuad3: ccQuad3(float[])
org.cocos2d.types.ccQuad3: ccQuad3(float,float,float,float,float,float,float,float,float,float,float,float)
org.cocos2d.types.ccQuad3: float[] toFloatArray()
org.cocos2d.types.ccQuad3: java.lang.String toString()
org.cocos2d.types.ccQuad2
org.cocos2d.types.ccQuad2: int size
org.cocos2d.types.ccQuad2: float tl_x
org.cocos2d.types.ccQuad2: float tl_y
org.cocos2d.types.ccQuad2: float tr_x
org.cocos2d.types.ccQuad2: float tr_y
org.cocos2d.types.ccQuad2: float bl_x
org.cocos2d.types.ccQuad2: float bl_y
org.cocos2d.types.ccQuad2: float br_x
org.cocos2d.types.ccQuad2: float br_y
org.cocos2d.types.ccQuad2: ccQuad2(float,float,float,float,float,float,float,float)
org.cocos2d.types.ccQuad2: ccQuad2()
org.cocos2d.types.ccQuad2: ccQuad2(float[])
org.cocos2d.types.ccQuad2: float[] toFloatArray()
org.cocos2d.types.ccQuad2: java.lang.String toString()
org.cocos2d.tests.AtlasTest
org.cocos2d.tests.AtlasTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.AtlasTest: int sceneIdx
org.cocos2d.tests.AtlasTest: java.lang.Class[] transitions
org.cocos2d.tests.AtlasTest: int kTagTileMap
org.cocos2d.tests.AtlasTest: int kTagSpriteManager
org.cocos2d.tests.AtlasTest: int kTagAnimation1
org.cocos2d.tests.AtlasTest: int kTagBitmapAtlas1
org.cocos2d.tests.AtlasTest: int kTagBitmapAtlas2
org.cocos2d.tests.AtlasTest: int kTagBitmapAtlas3
org.cocos2d.tests.AtlasTest: int kTagSprite1
org.cocos2d.tests.AtlasTest: int kTagSprite2
org.cocos2d.tests.AtlasTest: int kTagSprite3
org.cocos2d.tests.AtlasTest: int kTagSprite4
org.cocos2d.tests.AtlasTest: int kTagSprite5
org.cocos2d.tests.AtlasTest: int kTagSprite6
org.cocos2d.tests.AtlasTest: int kTagSprite7
org.cocos2d.tests.AtlasTest: int kTagSprite8
org.cocos2d.tests.AtlasTest: void <clinit>()
org.cocos2d.tests.AtlasTest: AtlasTest()
org.cocos2d.tests.AtlasTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.AtlasTest: void onStart()
org.cocos2d.tests.AtlasTest: void onPause()
org.cocos2d.tests.AtlasTest: void onResume()
org.cocos2d.tests.AtlasTest: void onDestroy()
org.cocos2d.tests.AtlasTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.AtlasTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.AtlasTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.utils.collections.ConcNodeCachingStack
org.cocos2d.utils.collections.ConcNodeCachingStack: org.cocos2d.utils.collections.ConcNodeCachingStack$Node head
org.cocos2d.utils.collections.ConcNodeCachingStack: java.util.concurrent.atomic.AtomicReferenceFieldUpdater headUpdater
org.cocos2d.utils.collections.ConcNodeCachingStack: org.cocos2d.utils.collections.ConcNodeCachingStack$Node freeNode
org.cocos2d.utils.collections.ConcNodeCachingStack: java.util.concurrent.atomic.AtomicReferenceFieldUpdater freeNodeUpdater
org.cocos2d.utils.collections.ConcNodeCachingStack: void <clinit>()
org.cocos2d.utils.collections.ConcNodeCachingStack: ConcNodeCachingStack()
org.cocos2d.utils.collections.ConcNodeCachingStack: boolean casHead(org.cocos2d.utils.collections.ConcNodeCachingStack$Node,org.cocos2d.utils.collections.ConcNodeCachingStack$Node)
org.cocos2d.utils.collections.ConcNodeCachingStack: boolean casNewNode(org.cocos2d.utils.collections.ConcNodeCachingStack$Node,org.cocos2d.utils.collections.ConcNodeCachingStack$Node)
org.cocos2d.utils.collections.ConcNodeCachingStack: org.cocos2d.utils.collections.ConcNodeCachingStack$Node newNode()
org.cocos2d.utils.collections.ConcNodeCachingStack: void freeNode(org.cocos2d.utils.collections.ConcNodeCachingStack$Node)
org.cocos2d.utils.collections.ConcNodeCachingStack: void push(java.lang.Object)
org.cocos2d.utils.collections.ConcNodeCachingStack: java.lang.Object pop()
org.cocos2d.actions.instant.CCPlace
org.cocos2d.actions.instant.CCPlace: org.cocos2d.types.CGPoint position
org.cocos2d.actions.instant.CCPlace: org.cocos2d.actions.instant.CCPlace action(org.cocos2d.types.CGPoint)
org.cocos2d.actions.instant.CCPlace: CCPlace(org.cocos2d.types.CGPoint)
org.cocos2d.actions.instant.CCPlace: org.cocos2d.actions.instant.CCPlace copy()
org.cocos2d.actions.instant.CCPlace: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.instant.CCPlace: java.lang.Object copy()
org.cocos2d.actions.instant.CCPlace: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: CCInstantAction()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: boolean isDone()
org.cocos2d.actions.instant.CCInstantAction: void step(float)
org.cocos2d.actions.instant.CCInstantAction: void update(float)
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.instant.CCInstantAction: java.lang.Object copy()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.opengl.CCRenderTexture
org.cocos2d.opengl.CCRenderTexture: int kImageFormatJPG
org.cocos2d.opengl.CCRenderTexture: int kImageFormatPNG
org.cocos2d.opengl.CCRenderTexture: int[] fbo_
org.cocos2d.opengl.CCRenderTexture: int[] oldFBO_
org.cocos2d.opengl.CCRenderTexture: org.cocos2d.opengl.CCTexture2D texture_
org.cocos2d.opengl.CCRenderTexture: org.cocos2d.nodes.CCSprite sprite_
org.cocos2d.opengl.CCRenderTexture: org.cocos2d.nodes.CCSprite getSprite()
org.cocos2d.opengl.CCRenderTexture: org.cocos2d.opengl.CCRenderTexture renderTexture(int,int)
org.cocos2d.opengl.CCRenderTexture: CCRenderTexture(int,int)
org.cocos2d.opengl.CCRenderTexture: void finalize()
org.cocos2d.opengl.CCRenderTexture: void begin()
org.cocos2d.opengl.CCRenderTexture: void end()
org.cocos2d.opengl.CCRenderTexture: void clear(float,float,float,float)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCAnimation
org.cocos2d.nodes.CCAnimation: java.lang.String name_
org.cocos2d.nodes.CCAnimation: float delay_
org.cocos2d.nodes.CCAnimation: java.util.ArrayList frames_
org.cocos2d.nodes.CCAnimation: java.lang.String name()
org.cocos2d.nodes.CCAnimation: float delay()
org.cocos2d.nodes.CCAnimation: java.util.ArrayList frames()
org.cocos2d.nodes.CCAnimation: org.cocos2d.nodes.CCAnimation animation(java.lang.String)
org.cocos2d.nodes.CCAnimation: org.cocos2d.nodes.CCAnimation animation(java.lang.String,java.util.ArrayList)
org.cocos2d.nodes.CCAnimation: org.cocos2d.nodes.CCAnimation animation(java.lang.String,float)
org.cocos2d.nodes.CCAnimation: org.cocos2d.nodes.CCAnimation animation(java.lang.String,float,java.util.ArrayList)
org.cocos2d.nodes.CCAnimation: CCAnimation(java.lang.String)
org.cocos2d.nodes.CCAnimation: CCAnimation(java.lang.String,java.util.ArrayList)
org.cocos2d.nodes.CCAnimation: CCAnimation(java.lang.String,float)
org.cocos2d.nodes.CCAnimation: CCAnimation(java.lang.String,float,java.util.ArrayList)
org.cocos2d.nodes.CCAnimation: void addFrame(java.lang.String)
org.cocos2d.nodes.CCAnimation: void addFrame(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCAnimation: void addFrame(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCAnimation: CCAnimation(java.lang.String,float,org.cocos2d.opengl.CCTexture2D[])
org.cocos2d.nodes.CCAnimation: void addFrame(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect)
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest$1
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest$1: org.cocos2d.tests.AtlasTest$LabelAtlasColorTest this$1
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest$1: AtlasTest$LabelAtlasColorTest$1(org.cocos2d.tests.AtlasTest$LabelAtlasColorTest)
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest$1: void update(float)
org.cocos2d.layers.CCTMXLayer
org.cocos2d.layers.CCTMXLayer: org.cocos2d.layers.CCTMXTilesetInfo tileset
org.cocos2d.layers.CCTMXLayer: java.lang.String layerName
org.cocos2d.layers.CCTMXLayer: org.cocos2d.types.CGSize layerSize
org.cocos2d.layers.CCTMXLayer: org.cocos2d.types.CGSize mapTileSize
org.cocos2d.layers.CCTMXLayer: java.nio.IntBuffer tiles
org.cocos2d.layers.CCTMXLayer: int layerOrientation_
org.cocos2d.layers.CCTMXLayer: java.util.HashMap properties
org.cocos2d.layers.CCTMXLayer: int opacity_
org.cocos2d.layers.CCTMXLayer: int minGID_
org.cocos2d.layers.CCTMXLayer: int maxGID_
org.cocos2d.layers.CCTMXLayer: int vertexZvalue_
org.cocos2d.layers.CCTMXLayer: boolean useAutomaticVertexZ_
org.cocos2d.layers.CCTMXLayer: float alphaFuncValue_
org.cocos2d.layers.CCTMXLayer: org.cocos2d.nodes.CCSprite reusedTile_
org.cocos2d.layers.CCTMXLayer: java.util.ArrayList atlasIndexArray_
org.cocos2d.layers.CCTMXLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCTMXLayer: void <clinit>()
org.cocos2d.layers.CCTMXLayer: org.cocos2d.layers.CCTMXLayer layer(org.cocos2d.layers.CCTMXTilesetInfo,org.cocos2d.layers.CCTMXLayerInfo,org.cocos2d.layers.CCTMXMapInfo)
org.cocos2d.layers.CCTMXLayer: CCTMXLayer(org.cocos2d.layers.CCTMXTilesetInfo,org.cocos2d.layers.CCTMXLayerInfo,org.cocos2d.layers.CCTMXMapInfo)
org.cocos2d.layers.CCTMXLayer: void releaseMap()
org.cocos2d.layers.CCTMXLayer: org.cocos2d.nodes.CCSprite tileAt(org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: int tileGIDAt(org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: void setTileGID(int,org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: void removeTileAt(org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: org.cocos2d.types.CGPoint positionAt(org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: java.lang.String propertyNamed(java.lang.String)
org.cocos2d.layers.CCTMXLayer: void setupTiles()
org.cocos2d.layers.CCTMXLayer: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.layers.CCTMXLayer: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.layers.CCTMXLayer: org.cocos2d.types.CGPoint calculateLayerOffset(org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: org.cocos2d.types.CGPoint positionForOrthoAt(org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: org.cocos2d.types.CGPoint positionForIsoAt(org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: org.cocos2d.types.CGPoint positionForHexAt(org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: int vertexZForPos(org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: org.cocos2d.nodes.CCSprite appendTileForGID(int,org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: org.cocos2d.nodes.CCSprite insertTileForGID(int,org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: org.cocos2d.nodes.CCSprite updateTileForGID(int,org.cocos2d.types.CGPoint)
org.cocos2d.layers.CCTMXLayer: void parseInternalProperties()
org.cocos2d.layers.CCTMXLayer: int atlasIndexForExistantZ(int)
org.cocos2d.layers.CCTMXLayer: int atlasIndexForNewZ(int)
org.cocos2d.layers.CCTMXLayer: int compareInts(int,int)
org.cocos2d.layers.CCTMXLayer: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCSpriteSheet: int defaultCapacity
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.opengl.CCTextureAtlas textureAtlas_
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.nodes.CCSpriteSheet: java.util.ArrayList descendants_
org.cocos2d.nodes.CCSpriteSheet: boolean $assertionsDisabled
org.cocos2d.nodes.CCSpriteSheet: void <clinit>()
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.opengl.CCTextureAtlas getTextureAtlas()
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.types.ccBlendFunc getBlendFunc()
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(org.cocos2d.opengl.CCTexture2D,int)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(java.lang.String)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(java.lang.String,int)
org.cocos2d.nodes.CCSpriteSheet: CCSpriteSheet(org.cocos2d.opengl.CCTexture2D,int)
org.cocos2d.nodes.CCSpriteSheet: CCSpriteSheet(java.lang.String,int)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSprite createSprite(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSpriteSheet: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSprite initSprite(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCSpriteSheet: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCSpriteSheet: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCSpriteSheet: void removeChildAtIndex(int,boolean)
org.cocos2d.nodes.CCSpriteSheet: void removeAllChildren(boolean)
org.cocos2d.nodes.CCSpriteSheet: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCSpriteSheet: void increaseAtlasCapacity()
org.cocos2d.nodes.CCSpriteSheet: int rebuildIndexInOrder(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: int highestAtlasIndexInChild(org.cocos2d.nodes.CCSprite)
org.cocos2d.nodes.CCSpriteSheet: int lowestAtlasIndexInChild(org.cocos2d.nodes.CCSprite)
org.cocos2d.nodes.CCSpriteSheet: int atlasIndex(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: void insertChild(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: void removeSpriteFromAtlas(org.cocos2d.nodes.CCSprite)
org.cocos2d.nodes.CCSpriteSheet: void updateBlendFunc()
org.cocos2d.nodes.CCSpriteSheet: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.nodes.CCSpriteSheet: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.nodes.CCSpriteSheet: void addQuadFromSprite(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet addSpriteWithoutQuad(org.cocos2d.nodes.CCSprite,int,int)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.MenuTest
org.cocos2d.tests.MenuTest: int kTagMenu
org.cocos2d.tests.MenuTest: int kTagMenu0
org.cocos2d.tests.MenuTest: int kTagMenu1
org.cocos2d.tests.MenuTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.MenuTest: int kTagSpriteManager
org.cocos2d.tests.MenuTest: MenuTest()
org.cocos2d.tests.MenuTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.MenuTest: void onStart()
org.cocos2d.tests.MenuTest: void onPause()
org.cocos2d.tests.MenuTest: void onResume()
org.cocos2d.tests.MenuTest: void onDestroy()
org.cocos2d.menus.CCMenuItemSprite
org.cocos2d.menus.CCMenuItemSprite: org.cocos2d.nodes.CCNode normalImage_
org.cocos2d.menus.CCMenuItemSprite: org.cocos2d.nodes.CCNode selectedImage_
org.cocos2d.menus.CCMenuItemSprite: org.cocos2d.nodes.CCNode disabledImage_
org.cocos2d.menus.CCMenuItemSprite: void setNormalImage(org.cocos2d.nodes.CCNode)
org.cocos2d.menus.CCMenuItemSprite: org.cocos2d.nodes.CCNode getNormalImage()
org.cocos2d.menus.CCMenuItemSprite: void setSelectedImage(org.cocos2d.nodes.CCNode)
org.cocos2d.menus.CCMenuItemSprite: org.cocos2d.nodes.CCNode getSelectedImage()
org.cocos2d.menus.CCMenuItemSprite: void setDisabledImage(org.cocos2d.nodes.CCNode)
org.cocos2d.menus.CCMenuItemSprite: org.cocos2d.nodes.CCNode getDisabledImage()
org.cocos2d.menus.CCMenuItemSprite: org.cocos2d.menus.CCMenuItemSprite item(org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode)
org.cocos2d.menus.CCMenuItemSprite: org.cocos2d.menus.CCMenuItemSprite item(org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemSprite: org.cocos2d.menus.CCMenuItemSprite item(org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemSprite: CCMenuItemSprite(org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemSprite: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.menus.CCMenuItemSprite: void setOpacity(int)
org.cocos2d.menus.CCMenuItemSprite: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.menus.CCMenuItemSprite: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.menus.CCMenuItemSprite: int getOpacity()
org.cocos2d.menus.CCMenuItemSprite: boolean doesOpacityModifyRGB()
org.cocos2d.menus.CCMenuItemSprite: void setOpacityModifyRGB(boolean)
org.cocos2d.menus.CCMenuItem: int kItemSize
org.cocos2d.menus.CCMenuItem: int _fontSize
org.cocos2d.menus.CCMenuItem: java.lang.String fontName
org.cocos2d.menus.CCMenuItem: int kCurrentItem
org.cocos2d.menus.CCMenuItem: int kZoomActionTag
org.cocos2d.menus.CCMenuItem: boolean isEnabled_
org.cocos2d.menus.CCMenuItem: boolean isSelected_
org.cocos2d.menus.CCMenuItem: java.lang.Object targetCallback
org.cocos2d.menus.CCMenuItem: java.lang.String selector
org.cocos2d.menus.CCMenuItem: java.lang.reflect.Method invocation
org.cocos2d.menus.CCMenuItem: void <clinit>()
org.cocos2d.menus.CCMenuItem: org.cocos2d.menus.CCMenuItem item(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: CCMenuItem(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: void activate()
org.cocos2d.menus.CCMenuItem: void selected()
org.cocos2d.menus.CCMenuItem: void unselected()
org.cocos2d.menus.CCMenuItem: void setIsEnabled(boolean)
org.cocos2d.menus.CCMenuItem: boolean isEnabled()
org.cocos2d.menus.CCMenuItem: org.cocos2d.types.CGRect rect()
org.cocos2d.menus.CCMenuItem: void rect(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.utils.javolution.MathLib
org.cocos2d.utils.javolution.MathLib: java.util.Random RANDOM
org.cocos2d.utils.javolution.MathLib: byte[] BIT_LENGTH
org.cocos2d.utils.javolution.MathLib: long MASK_63
org.cocos2d.utils.javolution.MathLib: long MASK_32
org.cocos2d.utils.javolution.MathLib: int[] POW5_INT
org.cocos2d.utils.javolution.MathLib: double LOG2_DIV_LOG10
org.cocos2d.utils.javolution.MathLib: double E
org.cocos2d.utils.javolution.MathLib: double PI
org.cocos2d.utils.javolution.MathLib: double HALF_PI
org.cocos2d.utils.javolution.MathLib: double TWO_PI
org.cocos2d.utils.javolution.MathLib: double FOUR_PI
org.cocos2d.utils.javolution.MathLib: double PI_SQUARE
org.cocos2d.utils.javolution.MathLib: double LOG2
org.cocos2d.utils.javolution.MathLib: double LOG10
org.cocos2d.utils.javolution.MathLib: double SQRT2
org.cocos2d.utils.javolution.MathLib: double NaN
org.cocos2d.utils.javolution.MathLib: double Infinity
org.cocos2d.utils.javolution.MathLib: double INV_LOG10
org.cocos2d.utils.javolution.MathLib: double NORMALIZATION_FACTOR
org.cocos2d.utils.javolution.MathLib: double[] atanhi
org.cocos2d.utils.javolution.MathLib: double[] atanlo
org.cocos2d.utils.javolution.MathLib: double[] aT
org.cocos2d.utils.javolution.MathLib: double one
org.cocos2d.utils.javolution.MathLib: double huge
org.cocos2d.utils.javolution.MathLib: double ln2_hi
org.cocos2d.utils.javolution.MathLib: double ln2_lo
org.cocos2d.utils.javolution.MathLib: double two54
org.cocos2d.utils.javolution.MathLib: double Lg1
org.cocos2d.utils.javolution.MathLib: double Lg2
org.cocos2d.utils.javolution.MathLib: double Lg3
org.cocos2d.utils.javolution.MathLib: double Lg4
org.cocos2d.utils.javolution.MathLib: double Lg5
org.cocos2d.utils.javolution.MathLib: double Lg6
org.cocos2d.utils.javolution.MathLib: double Lg7
org.cocos2d.utils.javolution.MathLib: double zero
org.cocos2d.utils.javolution.MathLib: double[] halF
org.cocos2d.utils.javolution.MathLib: double twom1000
org.cocos2d.utils.javolution.MathLib: double o_threshold
org.cocos2d.utils.javolution.MathLib: double u_threshold
org.cocos2d.utils.javolution.MathLib: double[] ln2HI
org.cocos2d.utils.javolution.MathLib: double[] ln2LO
org.cocos2d.utils.javolution.MathLib: double invln2
org.cocos2d.utils.javolution.MathLib: double P1
org.cocos2d.utils.javolution.MathLib: double P2
org.cocos2d.utils.javolution.MathLib: double P3
org.cocos2d.utils.javolution.MathLib: double P4
org.cocos2d.utils.javolution.MathLib: double P5
org.cocos2d.utils.javolution.MathLib: void <clinit>()
org.cocos2d.utils.javolution.MathLib: MathLib()
org.cocos2d.utils.javolution.MathLib: int random(int,int)
org.cocos2d.utils.javolution.MathLib: long random(long,long)
org.cocos2d.utils.javolution.MathLib: float random(float,float)
org.cocos2d.utils.javolution.MathLib: double random(double,double)
org.cocos2d.utils.javolution.MathLib: int bitLength(int)
org.cocos2d.utils.javolution.MathLib: int bitLength(long)
org.cocos2d.utils.javolution.MathLib: int bitCount(long)
org.cocos2d.utils.javolution.MathLib: int numberOfLeadingZeros(long)
org.cocos2d.utils.javolution.MathLib: int numberOfTrailingZeros(long)
org.cocos2d.utils.javolution.MathLib: int digitLength(int)
org.cocos2d.utils.javolution.MathLib: int digitLength(long)
org.cocos2d.utils.javolution.MathLib: double toDoublePow2(long,int)
org.cocos2d.utils.javolution.MathLib: double toDoublePow10(long,int)
org.cocos2d.utils.javolution.MathLib: long toLongPow2(double,int)
org.cocos2d.utils.javolution.MathLib: long toLongPow10(double,int)
org.cocos2d.utils.javolution.MathLib: int floorLog2(double)
org.cocos2d.utils.javolution.MathLib: int floorLog10(double)
org.cocos2d.utils.javolution.MathLib: double toRadians(double)
org.cocos2d.utils.javolution.MathLib: double toDegrees(double)
org.cocos2d.utils.javolution.MathLib: double sqrt(double)
org.cocos2d.utils.javolution.MathLib: double rem(double,double)
org.cocos2d.utils.javolution.MathLib: double ceil(double)
org.cocos2d.utils.javolution.MathLib: double floor(double)
org.cocos2d.utils.javolution.MathLib: double sin(double)
org.cocos2d.utils.javolution.MathLib: double cos(double)
org.cocos2d.utils.javolution.MathLib: double tan(double)
org.cocos2d.utils.javolution.MathLib: double asin(double)
org.cocos2d.utils.javolution.MathLib: double acos(double)
org.cocos2d.utils.javolution.MathLib: double atan(double)
org.cocos2d.utils.javolution.MathLib: double atan2(double,double)
org.cocos2d.utils.javolution.MathLib: double sinh(double)
org.cocos2d.utils.javolution.MathLib: double cosh(double)
org.cocos2d.utils.javolution.MathLib: double tanh(double)
org.cocos2d.utils.javolution.MathLib: double exp(double)
org.cocos2d.utils.javolution.MathLib: double log(double)
org.cocos2d.utils.javolution.MathLib: double log10(double)
org.cocos2d.utils.javolution.MathLib: double pow(double,double)
org.cocos2d.utils.javolution.MathLib: int round(float)
org.cocos2d.utils.javolution.MathLib: long round(double)
org.cocos2d.utils.javolution.MathLib: double random()
org.cocos2d.utils.javolution.MathLib: int abs(int)
org.cocos2d.utils.javolution.MathLib: long abs(long)
org.cocos2d.utils.javolution.MathLib: float abs(float)
org.cocos2d.utils.javolution.MathLib: double abs(double)
org.cocos2d.utils.javolution.MathLib: int max(int,int)
org.cocos2d.utils.javolution.MathLib: long max(long,long)
org.cocos2d.utils.javolution.MathLib: float max(float,float)
org.cocos2d.utils.javolution.MathLib: double max(double,double)
org.cocos2d.utils.javolution.MathLib: int min(int,int)
org.cocos2d.utils.javolution.MathLib: long min(long,long)
org.cocos2d.utils.javolution.MathLib: float min(float,float)
org.cocos2d.utils.javolution.MathLib: double min(double,double)
org.cocos2d.utils.javolution.MathLib: double _atan(double)
org.cocos2d.utils.javolution.MathLib: double _ieee754_log(double)
org.cocos2d.utils.javolution.MathLib: double _ieee754_exp(double)
org.cocos2d.tests.DrawPrimitivesTest
org.cocos2d.tests.DrawPrimitivesTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.DrawPrimitivesTest: int sceneIdx
org.cocos2d.tests.DrawPrimitivesTest: java.lang.Class[] transitions
org.cocos2d.tests.DrawPrimitivesTest: void <clinit>()
org.cocos2d.tests.DrawPrimitivesTest: DrawPrimitivesTest()
org.cocos2d.tests.DrawPrimitivesTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.DrawPrimitivesTest: void onStart()
org.cocos2d.tests.DrawPrimitivesTest: void onPause()
org.cocos2d.tests.DrawPrimitivesTest: void onResume()
org.cocos2d.tests.DrawPrimitivesTest: void onDestroy()
org.cocos2d.tests.DrawPrimitivesTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.DrawPrimitivesTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.DrawPrimitivesTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.particlesystem.CCParticleSystem$CCParticle
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: org.cocos2d.types.CGPoint pos
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: org.cocos2d.types.CGPoint startPos
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: org.cocos2d.types.ccColor4F color
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: org.cocos2d.types.ccColor4F deltaColor
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: float size
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: float deltaSize
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: float rotation
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: float deltaRotation
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: float timeToLive
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeA modeA
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeB modeB
org.cocos2d.particlesystem.CCParticleSystem$CCParticle: CCParticleSystem$CCParticle()
org.cocos2d.tests.SceneTest
org.cocos2d.tests.SceneTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.SceneTest: SceneTest()
org.cocos2d.tests.SceneTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.SceneTest: void applicationDidFinishLaunching(android.content.Context,android.view.View)
org.cocos2d.tests.SceneTest: void onPause()
org.cocos2d.tests.SceneTest: void onResume()
org.cocos2d.tests.SceneTest: void onDestroy()
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding: int left
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding: int top
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding: int right
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding: int bottom
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding: org.cocos2d.opengl.CCBitmapFontAtlas this$0
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding: CCBitmapFontAtlas$ccBitmapFontPadding(org.cocos2d.opengl.CCBitmapFontAtlas)
org.cocos2d.utils.pool.OneClassPool
org.cocos2d.utils.pool.OneClassPool: java.util.ArrayList objs
org.cocos2d.utils.pool.OneClassPool: OneClassPool()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object get()
org.cocos2d.utils.pool.OneClassPool: void free(java.lang.Object)
org.cocos2d.utils.pool.OneClassPool: int size()
org.cocos2d.utils.pool.OneClassPool: void clear()
org.cocos2d.tests.TileMapTest$TMXIsoZorder
org.cocos2d.tests.TileMapTest$TMXIsoZorder: org.cocos2d.nodes.CCSprite tamara
org.cocos2d.tests.TileMapTest$TMXIsoZorder: TileMapTest$TMXIsoZorder()
org.cocos2d.tests.TileMapTest$TMXIsoZorder: void repositionSprite(float)
org.cocos2d.tests.TileMapTest$TMXIsoZorder: java.lang.String title()
org.cocos2d.tests.TileMapTest$TMXIsoZorder: java.lang.String subtitle()
org.cocos2d.tests.TileMapTest$TileDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.TileMapTest$TileDemo: TileMapTest$TileDemo()
org.cocos2d.tests.TileMapTest$TileDemo: void registerWithTouchDispatcher()
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String title()
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.opengl.GLSurfaceView$GLThread
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mShouldExit
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mExited
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mPaused
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mHasSurface
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mWaitingForSurface
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mHaveEglContext
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mHaveEglSurface
org.cocos2d.opengl.GLSurfaceView$GLThread: int mWidth
org.cocos2d.opengl.GLSurfaceView$GLThread: int mHeight
org.cocos2d.opengl.GLSurfaceView$GLThread: int mRenderMode
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mRequestRender
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mRenderComplete
org.cocos2d.opengl.GLSurfaceView$GLThread: java.util.ArrayList mEventQueue
org.cocos2d.opengl.GLSurfaceView$GLThread: javax.microedition.khronos.opengles.GL10 mGL
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mHasFocus
org.cocos2d.opengl.GLSurfaceView$GLThread: boolean mSafeMode
org.cocos2d.opengl.GLSurfaceView$GLThread: org.cocos2d.opengl.GLSurfaceView$Renderer mRenderer
org.cocos2d.opengl.GLSurfaceView$GLThread: org.cocos2d.opengl.GLSurfaceView$EglHelper mEglHelper
org.cocos2d.opengl.GLSurfaceView$GLThread: org.cocos2d.opengl.GLSurfaceView this$0
org.cocos2d.opengl.GLSurfaceView$GLThread: GLSurfaceView$GLThread(org.cocos2d.opengl.GLSurfaceView,org.cocos2d.opengl.GLSurfaceView$Renderer)
org.cocos2d.opengl.GLSurfaceView$GLThread: void run()
org.cocos2d.opengl.GLSurfaceView$GLThread: void stopEglLocked()
org.cocos2d.opengl.GLSurfaceView$GLThread: void guardedRun()
org.cocos2d.opengl.GLSurfaceView$GLThread: void setRenderMode(int)
org.cocos2d.opengl.GLSurfaceView$GLThread: int getRenderMode()
org.cocos2d.opengl.GLSurfaceView$GLThread: void requestRender()
org.cocos2d.opengl.GLSurfaceView$GLThread: void surfaceCreated()
org.cocos2d.opengl.GLSurfaceView$GLThread: void surfaceDestroyed()
org.cocos2d.opengl.GLSurfaceView$GLThread: void onPause()
org.cocos2d.opengl.GLSurfaceView$GLThread: void onResume()
org.cocos2d.opengl.GLSurfaceView$GLThread: void onWindowResize(int,int)
org.cocos2d.opengl.GLSurfaceView$GLThread: void onWindowFocusChanged(boolean)
org.cocos2d.opengl.GLSurfaceView$GLThread: void requestExitAndWait()
org.cocos2d.opengl.GLSurfaceView$GLThread: void queueEvent(java.lang.Runnable)
org.cocos2d.opengl.GLSurfaceView$GLThread: void setSafeMode(boolean)
org.cocos2d.opengl.GLSurfaceView$GLThread: void access$0(org.cocos2d.opengl.GLSurfaceView$GLThread,boolean)
org.cocos2d.actions.interval.CCFadeTo
org.cocos2d.actions.interval.CCFadeTo: int toOpacity
org.cocos2d.actions.interval.CCFadeTo: int fromOpacity
org.cocos2d.actions.interval.CCFadeTo: org.cocos2d.actions.interval.CCFadeTo action(float,int)
org.cocos2d.actions.interval.CCFadeTo: CCFadeTo(float,int)
org.cocos2d.actions.interval.CCFadeTo: org.cocos2d.actions.interval.CCFadeTo copy()
org.cocos2d.actions.interval.CCFadeTo: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCFadeTo: void update(float)
org.cocos2d.actions.interval.CCFadeTo: java.lang.Object copy()
org.cocos2d.actions.interval.CCFadeTo: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCMoveTo
org.cocos2d.actions.interval.CCMoveTo: org.cocos2d.types.CGPoint endPosition
org.cocos2d.actions.interval.CCMoveTo: org.cocos2d.types.CGPoint startPosition
org.cocos2d.actions.interval.CCMoveTo: org.cocos2d.types.CGPoint delta
org.cocos2d.actions.interval.CCMoveTo: org.cocos2d.actions.interval.CCMoveTo action(float,org.cocos2d.types.CGPoint)
org.cocos2d.actions.interval.CCMoveTo: CCMoveTo(float,org.cocos2d.types.CGPoint)
org.cocos2d.actions.interval.CCMoveTo: void setEndPosition(org.cocos2d.types.CGPoint)
org.cocos2d.actions.interval.CCMoveTo: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCMoveTo: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCMoveTo: void update(float)
org.cocos2d.actions.interval.CCMoveTo: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.ClickAndMoveTest
org.cocos2d.tests.ClickAndMoveTest: org.cocos2d.tests.ClickAndMoveTest app
org.cocos2d.tests.ClickAndMoveTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.ClickAndMoveTest: ClickAndMoveTest()
org.cocos2d.tests.ClickAndMoveTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.ClickAndMoveTest: void onStart()
org.cocos2d.tests.ClickAndMoveTest: void onPause()
org.cocos2d.tests.ClickAndMoveTest: void onResume()
org.cocos2d.tests.ClickAndMoveTest: void onDestroy()
org.cocos2d.actions.grid.CCRipple3D
org.cocos2d.actions.grid.CCRipple3D: org.cocos2d.types.CGPoint position
org.cocos2d.actions.grid.CCRipple3D: float radius
org.cocos2d.actions.grid.CCRipple3D: int waves
org.cocos2d.actions.grid.CCRipple3D: float amplitude
org.cocos2d.actions.grid.CCRipple3D: float amplitudeRate
org.cocos2d.actions.grid.CCRipple3D: org.cocos2d.actions.grid.CCRipple3D action(org.cocos2d.types.CGPoint,float,int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCRipple3D: CCRipple3D(org.cocos2d.types.CGPoint,float,int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCRipple3D: org.cocos2d.actions.grid.CCRipple3D copy()
org.cocos2d.actions.grid.CCRipple3D: void update(float)
org.cocos2d.actions.grid.CCRipple3D: java.lang.Object copy()
org.cocos2d.actions.grid.CCRipple3D: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: CCGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.opengl.CCTextureAtlas
org.cocos2d.opengl.CCTextureAtlas: int totalQuads_
org.cocos2d.opengl.CCTextureAtlas: int capacity_
org.cocos2d.opengl.CCTextureAtlas: org.cocos2d.opengl.CCTexture2D texture_
org.cocos2d.opengl.CCTextureAtlas: org.cocos2d.utils.FastFloatBuffer textureCoordinates
org.cocos2d.opengl.CCTextureAtlas: org.cocos2d.utils.FastFloatBuffer vertexCoordinates
org.cocos2d.opengl.CCTextureAtlas: org.cocos2d.utils.FastFloatBuffer colors
org.cocos2d.opengl.CCTextureAtlas: java.nio.ShortBuffer indices
org.cocos2d.opengl.CCTextureAtlas: boolean withColorArray_
org.cocos2d.opengl.CCTextureAtlas: boolean $assertionsDisabled
org.cocos2d.opengl.CCTextureAtlas: void <clinit>()
org.cocos2d.opengl.CCTextureAtlas: org.cocos2d.utils.FastFloatBuffer getTexCoordsBuffer()
org.cocos2d.opengl.CCTextureAtlas: org.cocos2d.utils.FastFloatBuffer getVertexBuffer()
org.cocos2d.opengl.CCTextureAtlas: int getTotalQuads()
org.cocos2d.opengl.CCTextureAtlas: int capacity()
org.cocos2d.opengl.CCTextureAtlas: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.opengl.CCTextureAtlas: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.opengl.CCTextureAtlas: boolean withColorArray()
org.cocos2d.opengl.CCTextureAtlas: org.cocos2d.opengl.CCTextureAtlas textureAtlas(java.lang.String,int)
org.cocos2d.opengl.CCTextureAtlas: CCTextureAtlas(java.lang.String,int)
org.cocos2d.opengl.CCTextureAtlas: org.cocos2d.opengl.CCTextureAtlas textureAtlas(org.cocos2d.opengl.CCTexture2D,int)
org.cocos2d.opengl.CCTextureAtlas: CCTextureAtlas(org.cocos2d.opengl.CCTexture2D,int)
org.cocos2d.opengl.CCTextureAtlas: java.lang.String toString()
org.cocos2d.opengl.CCTextureAtlas: void initColorArray()
org.cocos2d.opengl.CCTextureAtlas: void initIndices()
org.cocos2d.opengl.CCTextureAtlas: void updateQuad(org.cocos2d.utils.FastFloatBuffer,org.cocos2d.utils.FastFloatBuffer,int)
org.cocos2d.opengl.CCTextureAtlas: void updateQuad(org.cocos2d.utils.FastFloatBuffer,float[],int)
org.cocos2d.opengl.CCTextureAtlas: void updateQuad(org.cocos2d.types.ccQuad2,org.cocos2d.types.ccQuad3,int)
org.cocos2d.opengl.CCTextureAtlas: void updateColor(org.cocos2d.types.ccColor4B[],int)
org.cocos2d.opengl.CCTextureAtlas: void insertQuad(org.cocos2d.utils.FastFloatBuffer,org.cocos2d.utils.FastFloatBuffer,int)
org.cocos2d.opengl.CCTextureAtlas: void insertQuad(int,int)
org.cocos2d.opengl.CCTextureAtlas: void removeQuad(int)
org.cocos2d.opengl.CCTextureAtlas: void removeAllQuads()
org.cocos2d.opengl.CCTextureAtlas: void resizeCapacity(int)
org.cocos2d.opengl.CCTextureAtlas: void drawQuads(javax.microedition.khronos.opengles.GL10)
org.cocos2d.opengl.CCTextureAtlas: void draw(javax.microedition.khronos.opengles.GL10,int)
org.cocos2d.opengl.CCTextureAtlas: float[] getTexCoords(org.cocos2d.utils.FastFloatBuffer,int)
org.cocos2d.opengl.CCTextureAtlas: void putTexCoords(org.cocos2d.utils.FastFloatBuffer,org.cocos2d.types.ccQuad2,int)
org.cocos2d.opengl.CCTextureAtlas: void putTexCoords(org.cocos2d.utils.FastFloatBuffer,float[],int)
org.cocos2d.opengl.CCTextureAtlas: void putTexCoords(org.cocos2d.utils.FastFloatBuffer,int)
org.cocos2d.opengl.CCTextureAtlas: void putVertex(org.cocos2d.utils.FastFloatBuffer,int)
org.cocos2d.opengl.CCTextureAtlas: float[] getVertex(org.cocos2d.utils.FastFloatBuffer,int)
org.cocos2d.opengl.CCTextureAtlas: void putVertex(org.cocos2d.utils.FastFloatBuffer,org.cocos2d.types.ccQuad3,int)
org.cocos2d.opengl.CCTextureAtlas: void putVertex(org.cocos2d.utils.FastFloatBuffer,float[],int)
org.cocos2d.opengl.CCTextureAtlas: org.cocos2d.types.ccColor4B[] getColor(org.cocos2d.utils.FastFloatBuffer,int)
org.cocos2d.opengl.CCTextureAtlas: void putColor(org.cocos2d.utils.FastFloatBuffer,org.cocos2d.types.ccColor4B[],int)
org.cocos2d.opengl.CCTextureAtlas: void arraycopyTexture(org.cocos2d.utils.FastFloatBuffer,int,org.cocos2d.utils.FastFloatBuffer,int,int)
org.cocos2d.opengl.CCTextureAtlas: void arraycopyVertex(org.cocos2d.utils.FastFloatBuffer,int,org.cocos2d.utils.FastFloatBuffer,int,int)
org.cocos2d.opengl.CCTextureAtlas: void arraycopyColor(org.cocos2d.utils.FastFloatBuffer,int,org.cocos2d.utils.FastFloatBuffer,int,int)
org.cocos2d.opengl.CCTextureAtlas: void memmoveFloat(org.cocos2d.utils.FastFloatBuffer,int,org.cocos2d.utils.FastFloatBuffer,int,int)
org.cocos2d.opengl.CCTextureAtlas: void memcopyFloat(org.cocos2d.utils.FastFloatBuffer,int,org.cocos2d.utils.FastFloatBuffer,int,int)
org.cocos2d.opengl.CCTextureAtlas: void memmoveByte(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int)
org.cocos2d.opengl.CCTextureAtlas: void memcopyByte(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int)
org.cocos2d.opengl.TGA
org.cocos2d.opengl.TGA: java.lang.String LOG_TAG
org.cocos2d.opengl.TGA: void <clinit>()
org.cocos2d.opengl.TGA: TGA()
org.cocos2d.opengl.TGA: void loadHeader(java.io.InputStream,org.cocos2d.opengl.TGA$ImageTGA)
org.cocos2d.opengl.TGA: void loadImageData(java.io.InputStream,org.cocos2d.opengl.TGA$ImageTGA)
org.cocos2d.opengl.TGA: void loadRLEImageData(java.io.InputStream,org.cocos2d.opengl.TGA$ImageTGA)
org.cocos2d.opengl.TGA: void flipImage(org.cocos2d.opengl.TGA$ImageTGA)
org.cocos2d.opengl.TGA: void memcpy(byte[],int,byte[],int,int)
org.cocos2d.opengl.TGA: org.cocos2d.opengl.TGA$ImageTGA load(java.io.InputStream)
org.cocos2d.opengl.TGA: void RGBtogreyscale(org.cocos2d.opengl.TGA$ImageTGA)
org.cocos2d.opengl.TGA: void destroy(org.cocos2d.opengl.TGA$ImageTGA)
org.cocos2d.tests.AtlasTest$AtlasDemo
org.cocos2d.tests.AtlasTest$AtlasDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.AtlasTest$AtlasDemo: AtlasTest$AtlasDemo()
org.cocos2d.tests.AtlasTest$AtlasDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String title()
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.SchedulerTest$SchedulerAutoremove
org.cocos2d.tests.SchedulerTest$SchedulerAutoremove: float accum
org.cocos2d.tests.SchedulerTest$SchedulerAutoremove: SchedulerTest$SchedulerAutoremove()
org.cocos2d.tests.SchedulerTest$SchedulerAutoremove: void tick(float)
org.cocos2d.tests.SchedulerTest$SchedulerAutoremove: void autoremove(float)
org.cocos2d.tests.SchedulerTest$SchedulerAutoremove: java.lang.String title()
org.cocos2d.tests.SchedulerTest$SchedulerAutoremove: java.lang.String subtitle()
org.cocos2d.tests.SchedulerTest$SchedulerTestLayer: SchedulerTest$SchedulerTestLayer()
org.cocos2d.tests.SchedulerTest$SchedulerTestLayer: void restartCallback(java.lang.Object)
org.cocos2d.tests.SchedulerTest$SchedulerTestLayer: void nextCallback(java.lang.Object)
org.cocos2d.tests.SchedulerTest$SchedulerTestLayer: void backCallback(java.lang.Object)
org.cocos2d.tests.SchedulerTest$SchedulerTestLayer: java.lang.String title()
org.cocos2d.tests.SchedulerTest$SchedulerTestLayer: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCRepeat
org.cocos2d.actions.interval.CCRepeat: int times
org.cocos2d.actions.interval.CCRepeat: int total
org.cocos2d.actions.interval.CCRepeat: org.cocos2d.actions.base.CCFiniteTimeAction other
org.cocos2d.actions.interval.CCRepeat: org.cocos2d.actions.interval.CCRepeat action(org.cocos2d.actions.base.CCFiniteTimeAction,int)
org.cocos2d.actions.interval.CCRepeat: CCRepeat(org.cocos2d.actions.base.CCFiniteTimeAction,int)
org.cocos2d.actions.interval.CCRepeat: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCRepeat: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCRepeat: void stop()
org.cocos2d.actions.interval.CCRepeat: void update(float)
org.cocos2d.actions.interval.CCRepeat: boolean isDone()
org.cocos2d.actions.interval.CCRepeat: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCRepeat: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCWaves3D
org.cocos2d.actions.grid.CCWaves3D: int waves
org.cocos2d.actions.grid.CCWaves3D: float amplitude
org.cocos2d.actions.grid.CCWaves3D: float amplitudeRate
org.cocos2d.actions.grid.CCWaves3D: org.cocos2d.actions.grid.CCWaves3D action(int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCWaves3D: CCWaves3D(int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCWaves3D: org.cocos2d.actions.grid.CCWaves3D copy()
org.cocos2d.actions.grid.CCWaves3D: void update(float)
org.cocos2d.actions.grid.CCWaves3D: java.lang.Object copy()
org.cocos2d.actions.grid.CCWaves3D: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: CCGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.types.HashCode
org.cocos2d.types.HashCode: org.cocos2d.types.HashCode hashCode
org.cocos2d.types.HashCode: HashCode()
org.cocos2d.types.HashCode: int hashCode()
org.cocos2d.types.HashCode: org.cocos2d.types.HashCode append(int)
org.cocos2d.types.HashCode: org.cocos2d.types.HashCode append(long)
org.cocos2d.types.HashCode: org.cocos2d.types.HashCode append(float)
org.cocos2d.types.HashCode: org.cocos2d.types.HashCode append(double)
org.cocos2d.types.HashCode: org.cocos2d.types.HashCode append(boolean)
org.cocos2d.types.HashCode: org.cocos2d.types.HashCode append(java.lang.Object)
org.cocos2d.particlesystem.CCPointParticleSystem
org.cocos2d.particlesystem.CCPointParticleSystem: org.cocos2d.utils.FastFloatBuffer vertices
org.cocos2d.particlesystem.CCPointParticleSystem: org.cocos2d.utils.FastFloatBuffer sizeBuffer
org.cocos2d.particlesystem.CCPointParticleSystem: int[] verticesID
org.cocos2d.particlesystem.CCPointParticleSystem: boolean $assertionsDisabled
org.cocos2d.particlesystem.CCPointParticleSystem: void <clinit>()
org.cocos2d.particlesystem.CCPointParticleSystem: CCPointParticleSystem(int)
org.cocos2d.particlesystem.CCPointParticleSystem: void finalize()
org.cocos2d.particlesystem.CCPointParticleSystem: void updateQuad(org.cocos2d.particlesystem.CCParticleSystem$CCParticle,org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCPointParticleSystem: void postStep()
org.cocos2d.particlesystem.CCPointParticleSystem: void draw()
org.cocos2d.particlesystem.CCPointParticleSystem: void setStartSpin(float)
org.cocos2d.particlesystem.CCPointParticleSystem: void setStartSpinVar(float)
org.cocos2d.particlesystem.CCPointParticleSystem: void setEndSpin(float)
org.cocos2d.particlesystem.CCPointParticleSystem: void setEndSpinVar(float)
org.cocos2d.particlesystem.CCPointParticleSystem: void setStartSize(float)
org.cocos2d.particlesystem.CCPointParticleSystem: void setEndSize(float)
org.cocos2d.particlesystem.CCPointParticleSystem: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.particlesystem.CCPointParticleSystem: org.cocos2d.types.ccBlendFunc getBlendFunc()
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleDurationInfinity
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleStartSizeEqualToEndSize
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleStartRadiusEqualToEndRadius
org.cocos2d.particlesystem.CCParticleSystem: int kParticleStartSizeEqualToEndSize
org.cocos2d.particlesystem.CCParticleSystem: int kParticleDurationInfinity
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleModeGravity
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleModeRadius
org.cocos2d.particlesystem.CCParticleSystem: int kCCPositionTypeFree
org.cocos2d.particlesystem.CCParticleSystem: int kCCPositionTypeGrouped
org.cocos2d.particlesystem.CCParticleSystem: int id
org.cocos2d.particlesystem.CCParticleSystem: boolean active
org.cocos2d.particlesystem.CCParticleSystem: float duration
org.cocos2d.particlesystem.CCParticleSystem: float elapsed
org.cocos2d.particlesystem.CCParticleSystem: float startSize
org.cocos2d.particlesystem.CCParticleSystem: float startSizeVar
org.cocos2d.particlesystem.CCParticleSystem: float endSize
org.cocos2d.particlesystem.CCParticleSystem: float endSizeVar
org.cocos2d.particlesystem.CCParticleSystem: float startSpin
org.cocos2d.particlesystem.CCParticleSystem: float startSpinVar
org.cocos2d.particlesystem.CCParticleSystem: float endSpin
org.cocos2d.particlesystem.CCParticleSystem: float endSpinVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint centerOfGravity
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint source
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint posVar
org.cocos2d.particlesystem.CCParticleSystem: float angle
org.cocos2d.particlesystem.CCParticleSystem: float angleVar
org.cocos2d.particlesystem.CCParticleSystem: float speed
org.cocos2d.particlesystem.CCParticleSystem: float speedVar
org.cocos2d.particlesystem.CCParticleSystem: float tangentialAccel
org.cocos2d.particlesystem.CCParticleSystem: float tangentialAccelVar
org.cocos2d.particlesystem.CCParticleSystem: float radialAccel
org.cocos2d.particlesystem.CCParticleSystem: float radialAccelVar
org.cocos2d.particlesystem.CCParticleSystem: float size
org.cocos2d.particlesystem.CCParticleSystem: float sizeVar
org.cocos2d.particlesystem.CCParticleSystem: float life
org.cocos2d.particlesystem.CCParticleSystem: float lifeVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F startColor
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F startColorVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F endColor
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F endColorVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccBlendFunc blendFunc
org.cocos2d.particlesystem.CCParticleSystem: int positionType
org.cocos2d.particlesystem.CCParticleSystem: boolean autoRemoveOnFinish_
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem$CCParticle[] particles
org.cocos2d.particlesystem.CCParticleSystem: int totalParticles
org.cocos2d.particlesystem.CCParticleSystem: int particleCount
org.cocos2d.particlesystem.CCParticleSystem: boolean blendAdditive
org.cocos2d.particlesystem.CCParticleSystem: boolean colorModulate
org.cocos2d.particlesystem.CCParticleSystem: float emissionRate
org.cocos2d.particlesystem.CCParticleSystem: float emitCounter
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.opengl.CCTexture2D texture
org.cocos2d.particlesystem.CCParticleSystem: int emitterMode
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem$ModeA modeA
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem$ModeB modeB
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccPointSprite[] vertices
org.cocos2d.particlesystem.CCParticleSystem: int verticesID
org.cocos2d.particlesystem.CCParticleSystem: int colorsID
org.cocos2d.particlesystem.CCParticleSystem: int particleIdx
org.cocos2d.particlesystem.CCParticleSystem: int kPositionTypeFree
org.cocos2d.particlesystem.CCParticleSystem: int kPositionTypeGrouped
org.cocos2d.particlesystem.CCParticleSystem: int positionType_
org.cocos2d.particlesystem.CCParticleSystem: boolean $assertionsDisabled
org.cocos2d.particlesystem.CCParticleSystem: void <clinit>()
org.cocos2d.particlesystem.CCParticleSystem: void setStartSize(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartSizeVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSize(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSizeVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartSpin(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartSpinVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSpin(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSpinVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setCenterOfGravity(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getCenterOfGravity()
org.cocos2d.particlesystem.CCParticleSystem: void setPosVar(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: void setAngle(float)
org.cocos2d.particlesystem.CCParticleSystem: void setAngleVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setLifeVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartColor(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F getStartColor()
org.cocos2d.particlesystem.CCParticleSystem: void setStartColorVar(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F getStartColorVar()
org.cocos2d.particlesystem.CCParticleSystem: void setEndColor(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: void setEndColorVar(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: int getTotalParticles()
org.cocos2d.particlesystem.CCParticleSystem: void setEmissionRate(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEmitterMode(int)
org.cocos2d.particlesystem.CCParticleSystem: void setAutoRemoveOnFinish(boolean)
org.cocos2d.particlesystem.CCParticleSystem: boolean isFull()
org.cocos2d.particlesystem.CCParticleSystem: void setTangentialAccel(float)
org.cocos2d.particlesystem.CCParticleSystem: float getTangentialAccel()
org.cocos2d.particlesystem.CCParticleSystem: void setTangentialAccelVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float getTangentialAccelVar()
org.cocos2d.particlesystem.CCParticleSystem: void setRadialAccel(float)
org.cocos2d.particlesystem.CCParticleSystem: float getRadialAccel()
org.cocos2d.particlesystem.CCParticleSystem: void setRadialAccelVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float getRadialAccelVar()
org.cocos2d.particlesystem.CCParticleSystem: void setGravity(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getGravity()
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint gravity()
org.cocos2d.particlesystem.CCParticleSystem: void setSpeed(float)
org.cocos2d.particlesystem.CCParticleSystem: float getSpeed()
org.cocos2d.particlesystem.CCParticleSystem: void setSpeedVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float getSpeedVar()
org.cocos2d.particlesystem.CCParticleSystem: void setStartRadius(float)
org.cocos2d.particlesystem.CCParticleSystem: float startRadius()
org.cocos2d.particlesystem.CCParticleSystem: void setStartRadiusVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float startRadiusVar()
org.cocos2d.particlesystem.CCParticleSystem: void setEndRadius(float)
org.cocos2d.particlesystem.CCParticleSystem: float endRadius()
org.cocos2d.particlesystem.CCParticleSystem: void setEndRadiusVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float endRadiusVar()
org.cocos2d.particlesystem.CCParticleSystem: boolean getActive()
org.cocos2d.particlesystem.CCParticleSystem: int getParticleCount()
org.cocos2d.particlesystem.CCParticleSystem: void setRotatePerSecond(float)
org.cocos2d.particlesystem.CCParticleSystem: float rotatePerSecond()
org.cocos2d.particlesystem.CCParticleSystem: void setRotatePerSecondVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float rotatePerSecondVar()
org.cocos2d.particlesystem.CCParticleSystem: float getDuration()
org.cocos2d.particlesystem.CCParticleSystem: void setDuration(float)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getSource()
org.cocos2d.particlesystem.CCParticleSystem: void setSource(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getPosVar()
org.cocos2d.particlesystem.CCParticleSystem: float getLife()
org.cocos2d.particlesystem.CCParticleSystem: void setLife(float)
org.cocos2d.particlesystem.CCParticleSystem: int getPositionType()
org.cocos2d.particlesystem.CCParticleSystem: void setPositionType(int)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.particlesystem.CCParticleSystem: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.particlesystem.CCParticleSystem: CCParticleSystem(int)
org.cocos2d.particlesystem.CCParticleSystem: void initParticle(org.cocos2d.particlesystem.CCParticleSystem$CCParticle)
org.cocos2d.particlesystem.CCParticleSystem: void stopSystem()
org.cocos2d.particlesystem.CCParticleSystem: void resetSystem()
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem particleWithFile(java.lang.String)
org.cocos2d.particlesystem.CCParticleSystem: CCParticleSystem(java.lang.String)
org.cocos2d.particlesystem.CCParticleSystem: CCParticleSystem(java.util.HashMap)
org.cocos2d.particlesystem.CCParticleSystem: boolean addParticle()
org.cocos2d.particlesystem.CCParticleSystem: void update(float)
org.cocos2d.particlesystem.CCParticleSystem: void updateQuad(org.cocos2d.particlesystem.CCParticleSystem$CCParticle,org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: void postStep()
org.cocos2d.particlesystem.CCParticleSystem: void setBlendAdditive(boolean)
org.cocos2d.particlesystem.CCParticleSystem: boolean getBlendAdditive()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.events.CCKeyDispatcher
org.cocos2d.events.CCKeyDispatcher: boolean kEventHandled
org.cocos2d.events.CCKeyDispatcher: boolean kEventIgnored
org.cocos2d.events.CCKeyDispatcher: java.util.ArrayList keyHandlers
org.cocos2d.events.CCKeyDispatcher: boolean dispatchEvents
org.cocos2d.events.CCKeyDispatcher: org.cocos2d.events.CCKeyDispatcher _sharedDispatcher
org.cocos2d.events.CCKeyDispatcher: org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue eventQueue
org.cocos2d.events.CCKeyDispatcher: void <clinit>()
org.cocos2d.events.CCKeyDispatcher: boolean getDispatchEvents()
org.cocos2d.events.CCKeyDispatcher: void setDispatchEvents(boolean)
org.cocos2d.events.CCKeyDispatcher: org.cocos2d.events.CCKeyDispatcher sharedDispatcher()
org.cocos2d.events.CCKeyDispatcher: CCKeyDispatcher()
org.cocos2d.events.CCKeyDispatcher: void addHandler(org.cocos2d.events.CCKeyHandler)
org.cocos2d.events.CCKeyDispatcher: void addDelegate(org.cocos2d.protocols.CCKeyDelegateProtocol,int)
org.cocos2d.events.CCKeyDispatcher: void removeDelegate(org.cocos2d.protocols.CCKeyDelegateProtocol)
org.cocos2d.events.CCKeyDispatcher: void removeAllDelegates()
org.cocos2d.events.CCKeyDispatcher: void queueMotionEvent(android.view.KeyEvent)
org.cocos2d.events.CCKeyDispatcher: void update()
org.cocos2d.events.CCKeyDispatcher: void onKeyDown(android.view.KeyEvent)
org.cocos2d.events.CCKeyDispatcher: void onKeyUp(android.view.KeyEvent)
org.cocos2d.actions.interval.CCSkewBy
org.cocos2d.actions.interval.CCSkewBy: float skewX
org.cocos2d.actions.interval.CCSkewBy: float skewY
org.cocos2d.actions.interval.CCSkewBy: org.cocos2d.actions.interval.CCSkewBy action(float,float,float)
org.cocos2d.actions.interval.CCSkewBy: CCSkewBy(float,float,float)
org.cocos2d.actions.interval.CCSkewBy: org.cocos2d.actions.interval.CCSkewBy copy()
org.cocos2d.actions.interval.CCSkewBy: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCSkewBy: org.cocos2d.actions.interval.CCSkewTo action(float,float,float)
org.cocos2d.actions.interval.CCSkewBy: java.lang.Object copy()
org.cocos2d.actions.interval.CCSkewBy: org.cocos2d.actions.interval.CCSkewTo copy()
org.cocos2d.actions.interval.CCSkewTo: float endSkewX
org.cocos2d.actions.interval.CCSkewTo: float endSkewY
org.cocos2d.actions.interval.CCSkewTo: float startSkewX
org.cocos2d.actions.interval.CCSkewTo: float deltaX
org.cocos2d.actions.interval.CCSkewTo: float startSkewY
org.cocos2d.actions.interval.CCSkewTo: float deltaY
org.cocos2d.actions.interval.CCSkewTo: org.cocos2d.actions.interval.CCSkewTo action(float,float,float)
org.cocos2d.actions.interval.CCSkewTo: CCSkewTo(float,float,float)
org.cocos2d.actions.interval.CCSkewTo: org.cocos2d.actions.interval.CCSkewTo copy()
org.cocos2d.actions.interval.CCSkewTo: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCSkewTo: void update(float)
org.cocos2d.actions.interval.CCSkewTo: java.lang.Object copy()
org.cocos2d.actions.interval.CCSkewTo: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.utils.collections.ConcurrentArrayHashMap$1
org.cocos2d.utils.collections.ConcurrentArrayHashMap$1: org.cocos2d.utils.collections.ConcurrentArrayHashMap this$0
org.cocos2d.utils.collections.ConcurrentArrayHashMap$1: ConcurrentArrayHashMap$1(org.cocos2d.utils.collections.ConcurrentArrayHashMap)
org.cocos2d.utils.collections.ConcurrentArrayHashMap$1: org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry allocate()
org.cocos2d.utils.collections.ConcurrentArrayHashMap$1: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.util.ArrayList objs
org.cocos2d.utils.pool.OneClassPool: OneClassPool()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object get()
org.cocos2d.utils.pool.OneClassPool: void free(java.lang.Object)
org.cocos2d.utils.pool.OneClassPool: int size()
org.cocos2d.utils.pool.OneClassPool: void clear()
org.cocos2d.menus.CCMenu$MenuState
org.cocos2d.menus.CCMenu$MenuState: org.cocos2d.menus.CCMenu$MenuState kMenuStateWaiting
org.cocos2d.menus.CCMenu$MenuState: org.cocos2d.menus.CCMenu$MenuState kMenuStateTrackingTouch
org.cocos2d.menus.CCMenu$MenuState: org.cocos2d.menus.CCMenu$MenuState[] ENUM$VALUES
org.cocos2d.menus.CCMenu$MenuState: void <clinit>()
org.cocos2d.menus.CCMenu$MenuState: CCMenu$MenuState(java.lang.String,int)
org.cocos2d.menus.CCMenu$MenuState: org.cocos2d.menus.CCMenu$MenuState[] values()
org.cocos2d.menus.CCMenu$MenuState: org.cocos2d.menus.CCMenu$MenuState valueOf(java.lang.String)
org.cocos2d.utils.Base64$OutputStream
org.cocos2d.utils.Base64$OutputStream: boolean encode
org.cocos2d.utils.Base64$OutputStream: int position
org.cocos2d.utils.Base64$OutputStream: byte[] buffer
org.cocos2d.utils.Base64$OutputStream: int bufferLength
org.cocos2d.utils.Base64$OutputStream: int lineLength
org.cocos2d.utils.Base64$OutputStream: boolean breakLines
org.cocos2d.utils.Base64$OutputStream: byte[] b4
org.cocos2d.utils.Base64$OutputStream: boolean suspendEncoding
org.cocos2d.utils.Base64$OutputStream: int options
org.cocos2d.utils.Base64$OutputStream: byte[] decodabet
org.cocos2d.utils.Base64$OutputStream: Base64$OutputStream(java.io.OutputStream)
org.cocos2d.utils.Base64$OutputStream: Base64$OutputStream(java.io.OutputStream,int)
org.cocos2d.utils.Base64$OutputStream: void write(int)
org.cocos2d.utils.Base64$OutputStream: void write(byte[],int,int)
org.cocos2d.utils.Base64$OutputStream: void flushBase64()
org.cocos2d.utils.Base64$OutputStream: void close()
org.cocos2d.utils.Base64$OutputStream: void suspendEncoding()
org.cocos2d.utils.Base64$OutputStream: void resumeEncoding()
org.cocos2d.tests.FontTest$Layer3
org.cocos2d.tests.FontTest$Layer3: org.cocos2d.menus.CCMenuItem disabledItem
org.cocos2d.tests.FontTest$Layer3: FontTest$Layer3()
org.cocos2d.tests.FontTest$Layer3: void menuCallback(java.lang.Object)
org.cocos2d.tests.FontTest$Layer3: void menuCallback2(java.lang.Object)
org.cocos2d.tests.FontTest$Layer3: void menuCallback3(java.lang.Object)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.ccVertex2F
org.cocos2d.types.ccVertex2F: org.cocos2d.types.CGPoint pnt
org.cocos2d.types.ccVertex2F: ccVertex2F()
org.cocos2d.types.ccVertex2F: void setCGPoint(org.cocos2d.types.CGPoint)
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$1
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$1: org.cocos2d.tests.SchedulerTest$SchedulerPauseResume this$1
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$1: SchedulerTest$SchedulerPauseResume$1(org.cocos2d.tests.SchedulerTest$SchedulerPauseResume)
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$1: void update(float)
org.cocos2d.tests.FontTest$Layer1
org.cocos2d.tests.FontTest$Layer1: org.cocos2d.menus.CCMenuItem disabledItem
org.cocos2d.tests.FontTest$Layer1: FontTest$Layer1()
org.cocos2d.tests.FontTest$Layer1: void menuCallback(java.lang.Object)
org.cocos2d.tests.FontTest$Layer1: void menuCallbackConfig(java.lang.Object)
org.cocos2d.tests.FontTest$Layer1: void menuCallbackDisabled(java.lang.Object)
org.cocos2d.tests.FontTest$Layer1: void menuCallbackEnable(java.lang.Object)
org.cocos2d.tests.FontTest$Layer1: void menuCallback2(java.lang.Object)
org.cocos2d.tests.FontTest$Layer1: void onQuit(java.lang.Object)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.FontTest$Layer2
org.cocos2d.tests.FontTest$Layer2: org.cocos2d.types.CGPoint centeredMenu
org.cocos2d.tests.FontTest$Layer2: boolean alignedH
org.cocos2d.tests.FontTest$Layer2: void alignMenusH()
org.cocos2d.tests.FontTest$Layer2: void alignMenusV()
org.cocos2d.tests.FontTest$Layer2: FontTest$Layer2()
org.cocos2d.tests.FontTest$Layer2: void menuCallbackBack(java.lang.Object)
org.cocos2d.tests.FontTest$Layer2: void menuCallbackOpacity(java.lang.Object)
org.cocos2d.tests.FontTest$Layer2: void menuCallbackAlign(java.lang.Object)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.utils.Base64$1
org.cocos2d.utils.Base64$1: java.lang.ClassLoader val$loader
org.cocos2d.utils.Base64$1: Base64$1(java.io.InputStream,java.lang.ClassLoader)
org.cocos2d.utils.Base64$1: java.lang.Class resolveClass(java.io.ObjectStreamClass)
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$2
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$2: org.cocos2d.tests.SchedulerTest$SchedulerPauseResume this$1
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$2: SchedulerTest$SchedulerPauseResume$2(org.cocos2d.tests.SchedulerTest$SchedulerPauseResume)
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$2: void update(float)
org.cocos2d.actions.interval.CCBlink
org.cocos2d.actions.interval.CCBlink: int times
org.cocos2d.actions.interval.CCBlink: org.cocos2d.actions.interval.CCBlink action(float,int)
org.cocos2d.actions.interval.CCBlink: CCBlink(float,int)
org.cocos2d.actions.interval.CCBlink: org.cocos2d.actions.interval.CCBlink copy()
org.cocos2d.actions.interval.CCBlink: void update(float)
org.cocos2d.actions.interval.CCBlink: org.cocos2d.actions.interval.CCBlink reverse()
org.cocos2d.actions.interval.CCBlink: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCBlink: java.lang.Object copy()
org.cocos2d.actions.interval.CCBlink: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$3
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$3: org.cocos2d.tests.SchedulerTest$SchedulerPauseResume this$1
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$3: SchedulerTest$SchedulerPauseResume$3(org.cocos2d.tests.SchedulerTest$SchedulerPauseResume)
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$3: void update(float)
org.cocos2d.opengl.GLSurfaceView$EglHelper
org.cocos2d.opengl.GLSurfaceView$EglHelper: javax.microedition.khronos.egl.EGL10 mEgl
org.cocos2d.opengl.GLSurfaceView$EglHelper: javax.microedition.khronos.egl.EGLDisplay mEglDisplay
org.cocos2d.opengl.GLSurfaceView$EglHelper: javax.microedition.khronos.egl.EGLSurface mEglSurface
org.cocos2d.opengl.GLSurfaceView$EglHelper: javax.microedition.khronos.egl.EGLConfig mEglConfig
org.cocos2d.opengl.GLSurfaceView$EglHelper: javax.microedition.khronos.egl.EGLContext mEglContext
org.cocos2d.opengl.GLSurfaceView$EglHelper: org.cocos2d.opengl.GLSurfaceView this$0
org.cocos2d.opengl.GLSurfaceView$EglHelper: GLSurfaceView$EglHelper(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView$EglHelper: void start()
org.cocos2d.opengl.GLSurfaceView$EglHelper: javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder)
org.cocos2d.opengl.GLSurfaceView$EglHelper: boolean swap()
org.cocos2d.opengl.GLSurfaceView$EglHelper: void destroySurface()
org.cocos2d.opengl.GLSurfaceView$EglHelper: void finish()
org.cocos2d.opengl.GLSurfaceView$EglHelper: void throwEglException(java.lang.String)
org.cocos2d.opengl.GLSurfaceView$EglHelper: boolean verifyContext()
org.cocos2d.tests.ActionsTest$ActionDemo$1
org.cocos2d.tests.ActionsTest$ActionDemo$1: org.cocos2d.tests.ActionsTest$ActionDemo this$1
org.cocos2d.tests.ActionsTest$ActionDemo$1: android.graphics.Bitmap val$bmpCopy
org.cocos2d.tests.ActionsTest$ActionDemo$1: ActionsTest$ActionDemo$1(org.cocos2d.tests.ActionsTest$ActionDemo,android.graphics.Bitmap)
org.cocos2d.tests.ActionsTest$ActionDemo$1: void load(org.cocos2d.opengl.GLResourceHelper$Resource)
org.cocos2d.nodes.CCSprite$TransformValues
org.cocos2d.nodes.CCSprite$TransformValues: org.cocos2d.types.CGPoint pos
org.cocos2d.nodes.CCSprite$TransformValues: org.cocos2d.types.CGPoint scale
org.cocos2d.nodes.CCSprite$TransformValues: float rotation
org.cocos2d.nodes.CCSprite$TransformValues: org.cocos2d.types.CGPoint ap
org.cocos2d.nodes.CCSprite$TransformValues: org.cocos2d.nodes.CCSprite this$0
org.cocos2d.nodes.CCSprite$TransformValues: CCSprite$TransformValues(org.cocos2d.nodes.CCSprite)
org.cocos2d.actions.interval.CCProgressTo
org.cocos2d.actions.interval.CCProgressTo: float to_
org.cocos2d.actions.interval.CCProgressTo: float from_
org.cocos2d.actions.interval.CCProgressTo: org.cocos2d.actions.interval.CCProgressTo action(float,float)
org.cocos2d.actions.interval.CCProgressTo: CCProgressTo(float,float)
org.cocos2d.actions.interval.CCProgressTo: org.cocos2d.actions.interval.CCProgressTo copy()
org.cocos2d.actions.interval.CCProgressTo: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCProgressTo: void update(float)
org.cocos2d.actions.interval.CCProgressTo: java.lang.Object copy()
org.cocos2d.actions.interval.CCProgressTo: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.events.CCTouchDispatcher$ccTouchHandlerHelperData
org.cocos2d.events.CCTouchDispatcher$ccTouchHandlerHelperData: java.lang.String touchesSel
org.cocos2d.events.CCTouchDispatcher$ccTouchHandlerHelperData: java.lang.String touchSel
org.cocos2d.events.CCTouchDispatcher$ccTouchHandlerHelperData: int ccTouchSelectorType
org.cocos2d.events.CCTouchDispatcher$ccTouchHandlerHelperData: org.cocos2d.events.CCTouchDispatcher this$0
org.cocos2d.events.CCTouchDispatcher$ccTouchHandlerHelperData: CCTouchDispatcher$ccTouchHandlerHelperData(org.cocos2d.events.CCTouchDispatcher)
org.cocos2d.tests.Box2dTest$Box2DTestLayer
org.cocos2d.tests.Box2dTest$Box2DTestLayer: int kTagTileMap
org.cocos2d.tests.Box2dTest$Box2DTestLayer: int kTagSpriteManager
org.cocos2d.tests.Box2dTest$Box2DTestLayer: int kTagAnimation1
org.cocos2d.tests.Box2dTest$Box2DTestLayer: float PTM_RATIO
org.cocos2d.tests.Box2dTest$Box2DTestLayer: float BUFFER
org.cocos2d.tests.Box2dTest$Box2DTestLayer: float FPS
org.cocos2d.tests.Box2dTest$Box2DTestLayer: float rdelta
org.cocos2d.tests.Box2dTest$Box2DTestLayer: com.badlogic.gdx.physics.box2d.World bxWorld
org.cocos2d.tests.Box2dTest$Box2DTestLayer: org.cocos2d.actions.UpdateCallback tickCallback
org.cocos2d.tests.Box2dTest$Box2DTestLayer: float prevX
org.cocos2d.tests.Box2dTest$Box2DTestLayer: float prevY
org.cocos2d.tests.Box2dTest$Box2DTestLayer: com.badlogic.gdx.math.Vector2 gravity
org.cocos2d.tests.Box2dTest$Box2DTestLayer: void <clinit>()
org.cocos2d.tests.Box2dTest$Box2DTestLayer: Box2dTest$Box2DTestLayer()
org.cocos2d.tests.Box2dTest$Box2DTestLayer: void onEnter()
org.cocos2d.tests.Box2dTest$Box2DTestLayer: void onExit()
org.cocos2d.tests.Box2dTest$Box2DTestLayer: void addNewSpriteWithCoords(org.cocos2d.types.CGPoint)
org.cocos2d.tests.Box2dTest$Box2DTestLayer: void tick(float)
org.cocos2d.tests.Box2dTest$Box2DTestLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.Box2dTest$Box2DTestLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.CCTexParams
org.cocos2d.types.CCTexParams: int minFilter
org.cocos2d.types.CCTexParams: int magFilter
org.cocos2d.types.CCTexParams: int wrapS
org.cocos2d.types.CCTexParams: int wrapT
org.cocos2d.types.CCTexParams: CCTexParams(int,int,int,int)
org.cocos2d.types.CCTexParams: org.cocos2d.types.CCTexParams copy()
org.cocos2d.types.CCTexParams: void set(int,int,int,int)
org.cocos2d.types.CCTexParams: void set(org.cocos2d.types.CCTexParams)
org.cocos2d.opengl.TGA$ImageTGA
org.cocos2d.opengl.TGA$ImageTGA: org.cocos2d.opengl.TGA$TGAError status
org.cocos2d.opengl.TGA$ImageTGA: int type
org.cocos2d.opengl.TGA$ImageTGA: int pixelDepth
org.cocos2d.opengl.TGA$ImageTGA: int width
org.cocos2d.opengl.TGA$ImageTGA: int height
org.cocos2d.opengl.TGA$ImageTGA: byte[] imageData
org.cocos2d.opengl.TGA$ImageTGA: int flipped
org.cocos2d.opengl.TGA$ImageTGA: TGA$ImageTGA()
org.cocos2d.tests.ParticleTest
org.cocos2d.tests.ParticleTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.ParticleTest: int sceneIdx
org.cocos2d.tests.ParticleTest: java.lang.Class[] transitions
org.cocos2d.tests.ParticleTest: void <clinit>()
org.cocos2d.tests.ParticleTest: ParticleTest()
org.cocos2d.tests.ParticleTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.ParticleTest: void onStart()
org.cocos2d.tests.ParticleTest: void onPause()
org.cocos2d.tests.ParticleTest: void onResume()
org.cocos2d.tests.ParticleTest: void onDestroy()
org.cocos2d.tests.ParticleTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.ParticleTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.ParticleTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.utils.Base64$InputStream
org.cocos2d.utils.Base64$InputStream: boolean encode
org.cocos2d.utils.Base64$InputStream: int position
org.cocos2d.utils.Base64$InputStream: byte[] buffer
org.cocos2d.utils.Base64$InputStream: int bufferLength
org.cocos2d.utils.Base64$InputStream: int numSigBytes
org.cocos2d.utils.Base64$InputStream: int lineLength
org.cocos2d.utils.Base64$InputStream: boolean breakLines
org.cocos2d.utils.Base64$InputStream: int options
org.cocos2d.utils.Base64$InputStream: byte[] decodabet
org.cocos2d.utils.Base64$InputStream: Base64$InputStream(java.io.InputStream)
org.cocos2d.utils.Base64$InputStream: Base64$InputStream(java.io.InputStream,int)
org.cocos2d.utils.Base64$InputStream: int read()
org.cocos2d.utils.Base64$InputStream: int read(byte[],int,int)
org.cocos2d.actions.CCProgressTimer
org.cocos2d.actions.CCProgressTimer: int kProgressTextureCoordsCount
org.cocos2d.actions.CCProgressTimer: char kProgressTextureCoords
org.cocos2d.actions.CCProgressTimer: int kCCProgressTimerTypeRadialCCW
org.cocos2d.actions.CCProgressTimer: int kCCProgressTimerTypeRadialCW
org.cocos2d.actions.CCProgressTimer: int kCCProgressTimerTypeHorizontalBarLR
org.cocos2d.actions.CCProgressTimer: int kCCProgressTimerTypeHorizontalBarRL
org.cocos2d.actions.CCProgressTimer: int kCCProgressTimerTypeVerticalBarBT
org.cocos2d.actions.CCProgressTimer: int kCCProgressTimerTypeVerticalBarTB
org.cocos2d.actions.CCProgressTimer: int type_
org.cocos2d.actions.CCProgressTimer: float percentage_
org.cocos2d.actions.CCProgressTimer: org.cocos2d.nodes.CCSprite sprite_
org.cocos2d.actions.CCProgressTimer: org.cocos2d.utils.FastFloatBuffer textureCoordinates
org.cocos2d.actions.CCProgressTimer: org.cocos2d.utils.FastFloatBuffer vertexCoordinates
org.cocos2d.actions.CCProgressTimer: org.cocos2d.utils.FastFloatBuffer colors
org.cocos2d.actions.CCProgressTimer: int vertexDataCount_
org.cocos2d.actions.CCProgressTimer: int getType()
org.cocos2d.actions.CCProgressTimer: float getPercentage()
org.cocos2d.actions.CCProgressTimer: org.cocos2d.nodes.CCSprite getSprite()
org.cocos2d.actions.CCProgressTimer: void setVertexDataCount(int)
org.cocos2d.actions.CCProgressTimer: void resetVertex()
org.cocos2d.actions.CCProgressTimer: org.cocos2d.actions.CCProgressTimer progress(java.lang.String)
org.cocos2d.actions.CCProgressTimer: CCProgressTimer(java.lang.String)
org.cocos2d.actions.CCProgressTimer: org.cocos2d.actions.CCProgressTimer progress(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.actions.CCProgressTimer: CCProgressTimer(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.actions.CCProgressTimer: void setPercentage(float)
org.cocos2d.actions.CCProgressTimer: void setSprite(org.cocos2d.nodes.CCSprite)
org.cocos2d.actions.CCProgressTimer: void setType(int)
org.cocos2d.actions.CCProgressTimer: org.cocos2d.types.CGPoint vertexFromTexCoord(org.cocos2d.types.CGPoint)
org.cocos2d.actions.CCProgressTimer: void updateColor()
org.cocos2d.actions.CCProgressTimer: void updateProgress()
org.cocos2d.actions.CCProgressTimer: void updateRadial()
org.cocos2d.actions.CCProgressTimer: void updateBar()
org.cocos2d.actions.CCProgressTimer: org.cocos2d.types.CGPoint boundaryTexCoord(int)
org.cocos2d.actions.CCProgressTimer: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.ccVertex3F
org.cocos2d.types.ccVertex3F: float x
org.cocos2d.types.ccVertex3F: float y
org.cocos2d.types.ccVertex3F: float z
org.cocos2d.types.ccVertex3F: ccVertex3F()
org.cocos2d.actions.tile.CCTurnOffTiles
org.cocos2d.actions.tile.CCTurnOffTiles: java.util.Random rand
org.cocos2d.actions.tile.CCTurnOffTiles: int seed
org.cocos2d.actions.tile.CCTurnOffTiles: int tilesCount
org.cocos2d.actions.tile.CCTurnOffTiles: int[] tilesOrder
org.cocos2d.actions.tile.CCTurnOffTiles: org.cocos2d.actions.tile.CCTurnOffTiles action(int,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTurnOffTiles: CCTurnOffTiles(int,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTurnOffTiles: org.cocos2d.actions.tile.CCTurnOffTiles copy()
org.cocos2d.actions.tile.CCTurnOffTiles: void shuffle(int[],int)
org.cocos2d.actions.tile.CCTurnOffTiles: void turnOnTile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTurnOffTiles: void turnOffTile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTurnOffTiles: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.tile.CCTurnOffTiles: void update(float)
org.cocos2d.actions.tile.CCTurnOffTiles: java.lang.Object copy()
org.cocos2d.actions.tile.CCTurnOffTiles: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: CCTiledGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCTwirl
org.cocos2d.actions.grid.CCTwirl: org.cocos2d.types.CGPoint position
org.cocos2d.actions.grid.CCTwirl: int twirls
org.cocos2d.actions.grid.CCTwirl: float amplitude
org.cocos2d.actions.grid.CCTwirl: float amplitudeRate
org.cocos2d.actions.grid.CCTwirl: org.cocos2d.actions.grid.CCTwirl action(org.cocos2d.types.CGPoint,int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCTwirl: CCTwirl(org.cocos2d.types.CGPoint,int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCTwirl: void update(float)
org.cocos2d.actions.grid.CCTwirl: org.cocos2d.actions.grid.CCTwirl copy()
org.cocos2d.actions.grid.CCTwirl: java.lang.Object copy()
org.cocos2d.actions.grid.CCTwirl: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: CCGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.camera.CCOrbitCamera
org.cocos2d.actions.camera.CCOrbitCamera: float radius
org.cocos2d.actions.camera.CCOrbitCamera: float deltaRadius
org.cocos2d.actions.camera.CCOrbitCamera: float angleZ
org.cocos2d.actions.camera.CCOrbitCamera: float deltaAngleZ
org.cocos2d.actions.camera.CCOrbitCamera: float angleX
org.cocos2d.actions.camera.CCOrbitCamera: float deltaAngleX
org.cocos2d.actions.camera.CCOrbitCamera: float radZ
org.cocos2d.actions.camera.CCOrbitCamera: float radDeltaZ
org.cocos2d.actions.camera.CCOrbitCamera: float radX
org.cocos2d.actions.camera.CCOrbitCamera: float radDeltaX
org.cocos2d.actions.camera.CCOrbitCamera: org.cocos2d.actions.camera.CCOrbitCamera action(float,float,float,float,float,float,float)
org.cocos2d.actions.camera.CCOrbitCamera: CCOrbitCamera(float,float,float,float,float,float,float)
org.cocos2d.actions.camera.CCOrbitCamera: org.cocos2d.actions.camera.CCOrbitCamera copy()
org.cocos2d.actions.camera.CCOrbitCamera: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.camera.CCOrbitCamera: void update(float)
org.cocos2d.actions.camera.CCOrbitCamera: void spherical(float[],float[],float[])
org.cocos2d.actions.camera.CCOrbitCamera: java.lang.Object copy()
org.cocos2d.actions.camera.CCOrbitCamera: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.camera.CCCameraAction: float centerXOrig
org.cocos2d.actions.camera.CCCameraAction: float centerYOrig
org.cocos2d.actions.camera.CCCameraAction: float centerZOrig
org.cocos2d.actions.camera.CCCameraAction: float eyeXOrig
org.cocos2d.actions.camera.CCCameraAction: float eyeYOrig
org.cocos2d.actions.camera.CCCameraAction: float eyeZOrig
org.cocos2d.actions.camera.CCCameraAction: float upXOrig
org.cocos2d.actions.camera.CCCameraAction: float upYOrig
org.cocos2d.actions.camera.CCCameraAction: float upZOrig
org.cocos2d.actions.camera.CCCameraAction: CCCameraAction(float)
org.cocos2d.actions.camera.CCCameraAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.camera.CCCameraAction: org.cocos2d.actions.interval.CCReverseTime reverse()
org.cocos2d.actions.camera.CCCameraAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.layers.CCColorLayer
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccColor3B color_
org.cocos2d.layers.CCColorLayer: int opacity_
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.layers.CCColorLayer: org.cocos2d.utils.FastFloatBuffer squareVertices_
org.cocos2d.layers.CCColorLayer: org.cocos2d.utils.FastFloatBuffer squareColors_
org.cocos2d.layers.CCColorLayer: org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B)
org.cocos2d.layers.CCColorLayer: org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: CCColorLayer(org.cocos2d.types.ccColor4B)
org.cocos2d.layers.CCColorLayer: CCColorLayer(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: void init(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: void updateColor()
org.cocos2d.layers.CCColorLayer: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.layers.CCColorLayer: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.layers.CCColorLayer: void setOpacity(int)
org.cocos2d.layers.CCColorLayer: int getOpacity()
org.cocos2d.layers.CCColorLayer: float getWidth()
org.cocos2d.layers.CCColorLayer: float getHeight()
org.cocos2d.layers.CCColorLayer: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.layers.CCColorLayer: void changeWidthAndHeight(float,float)
org.cocos2d.layers.CCColorLayer: void changeWidth(float)
org.cocos2d.layers.CCColorLayer: void changeHeight(float)
org.cocos2d.layers.CCColorLayer: boolean doesOpacityModifyRGB()
org.cocos2d.layers.CCColorLayer: void setOpacityModifyRGB(boolean)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.menus.CCMenuItemAtlasFont
org.cocos2d.menus.CCMenuItemAtlasFont: boolean $assertionsDisabled
org.cocos2d.menus.CCMenuItemAtlasFont: void <clinit>()
org.cocos2d.menus.CCMenuItemAtlasFont: org.cocos2d.menus.CCMenuItemAtlasFont item(java.lang.CharSequence,java.lang.String,int,int,char)
org.cocos2d.menus.CCMenuItemAtlasFont: org.cocos2d.menus.CCMenuItemAtlasFont item(java.lang.CharSequence,java.lang.String,int,int,char,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemAtlasFont: CCMenuItemAtlasFont(org.cocos2d.nodes.CCLabelAtlas,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.protocols.CCLabelProtocol label_
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B colorBackup
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B disabledColor_
org.cocos2d.menus.CCMenuItemLabel: float originalScale_
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.menus.CCMenuItemLabel item(org.cocos2d.protocols.CCLabelProtocol,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.menus.CCMenuItemLabel item(java.lang.String,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: CCMenuItemLabel(org.cocos2d.protocols.CCLabelProtocol,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: void setOpacity(int)
org.cocos2d.menus.CCMenuItemLabel: int getOpacity()
org.cocos2d.menus.CCMenuItemLabel: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B getDisabledColor()
org.cocos2d.menus.CCMenuItemLabel: void setDisabledColor(org.cocos2d.types.ccColor3B)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.protocols.CCLabelProtocol getLabel()
org.cocos2d.menus.CCMenuItemLabel: void setLabel(org.cocos2d.protocols.CCLabelProtocol)
org.cocos2d.menus.CCMenuItemLabel: void setString(java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: void activate()
org.cocos2d.menus.CCMenuItemLabel: void selected()
org.cocos2d.menus.CCMenuItemLabel: void unselected()
org.cocos2d.menus.CCMenuItemLabel: void setIsEnabled(boolean)
org.cocos2d.menus.CCMenuItemLabel: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.menus.CCMenuItemLabel: boolean doesOpacityModifyRGB()
org.cocos2d.menus.CCMenuItemLabel: void setOpacityModifyRGB(boolean)
org.cocos2d.menus.CCMenuItem: int kItemSize
org.cocos2d.menus.CCMenuItem: int _fontSize
org.cocos2d.menus.CCMenuItem: java.lang.String fontName
org.cocos2d.menus.CCMenuItem: int kCurrentItem
org.cocos2d.menus.CCMenuItem: int kZoomActionTag
org.cocos2d.menus.CCMenuItem: boolean isEnabled_
org.cocos2d.menus.CCMenuItem: boolean isSelected_
org.cocos2d.menus.CCMenuItem: java.lang.Object targetCallback
org.cocos2d.menus.CCMenuItem: java.lang.String selector
org.cocos2d.menus.CCMenuItem: java.lang.reflect.Method invocation
org.cocos2d.menus.CCMenuItem: void <clinit>()
org.cocos2d.menus.CCMenuItem: org.cocos2d.menus.CCMenuItem item(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: CCMenuItem(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: void activate()
org.cocos2d.menus.CCMenuItem: void selected()
org.cocos2d.menus.CCMenuItem: void unselected()
org.cocos2d.menus.CCMenuItem: void setIsEnabled(boolean)
org.cocos2d.menus.CCMenuItem: boolean isEnabled()
org.cocos2d.menus.CCMenuItem: org.cocos2d.types.CGRect rect()
org.cocos2d.menus.CCMenuItem: void rect(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.MotionStreakTest$Test1
org.cocos2d.tests.MotionStreakTest$Test1: org.cocos2d.nodes.CCNode root
org.cocos2d.tests.MotionStreakTest$Test1: org.cocos2d.nodes.CCNode target
org.cocos2d.tests.MotionStreakTest$Test1: org.cocos2d.nodes.CCMotionStreak streak
org.cocos2d.tests.MotionStreakTest$Test1: MotionStreakTest$Test1()
org.cocos2d.tests.MotionStreakTest$Test1: void onEnter()
org.cocos2d.tests.MotionStreakTest$Test1: void onUpdate(float)
org.cocos2d.tests.MotionStreakTest$Test1: java.lang.String title()
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer: MotionStreakTest$MotionStreakTestLayer()
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer: void restartCallback(java.lang.Object)
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer: void nextCallback(java.lang.Object)
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer: void backCallback(java.lang.Object)
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer: java.lang.String title()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.opengl.GLSurfaceView$LogWriter
org.cocos2d.opengl.GLSurfaceView$LogWriter: java.lang.StringBuilder mBuilder
org.cocos2d.opengl.GLSurfaceView$LogWriter: GLSurfaceView$LogWriter()
org.cocos2d.opengl.GLSurfaceView$LogWriter: void close()
org.cocos2d.opengl.GLSurfaceView$LogWriter: void flush()
org.cocos2d.opengl.GLSurfaceView$LogWriter: void write(char[],int,int)
org.cocos2d.opengl.GLSurfaceView$LogWriter: void flushBuilder()
org.cocos2d.tests.MotionStreakTest$Test2
org.cocos2d.tests.MotionStreakTest$Test2: org.cocos2d.nodes.CCNode root
org.cocos2d.tests.MotionStreakTest$Test2: org.cocos2d.nodes.CCNode target
org.cocos2d.tests.MotionStreakTest$Test2: org.cocos2d.nodes.CCMotionStreak streak
org.cocos2d.tests.MotionStreakTest$Test2: MotionStreakTest$Test2()
org.cocos2d.tests.MotionStreakTest$Test2: void onEnter()
org.cocos2d.tests.MotionStreakTest$Test2: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.MotionStreakTest$Test2: java.lang.String title()
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer: MotionStreakTest$MotionStreakTestLayer()
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer: void restartCallback(java.lang.Object)
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer: void nextCallback(java.lang.Object)
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer: void backCallback(java.lang.Object)
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer: java.lang.String title()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.tile.CCSplitCols
org.cocos2d.actions.tile.CCSplitCols: int cols
org.cocos2d.actions.tile.CCSplitCols: org.cocos2d.types.CGSize winSize
org.cocos2d.actions.tile.CCSplitCols: org.cocos2d.actions.tile.CCSplitCols action(int,float)
org.cocos2d.actions.tile.CCSplitCols: CCSplitCols(int,float)
org.cocos2d.actions.tile.CCSplitCols: org.cocos2d.actions.tile.CCSplitCols copy()
org.cocos2d.actions.tile.CCSplitCols: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.tile.CCSplitCols: void update(float)
org.cocos2d.actions.tile.CCSplitCols: java.lang.Object copy()
org.cocos2d.actions.tile.CCSplitCols: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: CCTiledGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.utils.PlistParser
org.cocos2d.utils.PlistParser: int TYPE_UNKNOWN
org.cocos2d.utils.PlistParser: int TYPE_KEY
org.cocos2d.utils.PlistParser: int TYPE_STRING
org.cocos2d.utils.PlistParser: int TYPE_INTEGER
org.cocos2d.utils.PlistParser: int TYPE_DATA
org.cocos2d.utils.PlistParser: int TYPE_DATE
org.cocos2d.utils.PlistParser: int TYPE_REAL
org.cocos2d.utils.PlistParser: java.lang.String EL_KEY
org.cocos2d.utils.PlistParser: java.lang.String EL_STRING
org.cocos2d.utils.PlistParser: java.lang.String EL_INTEGER
org.cocos2d.utils.PlistParser: java.lang.String EL_DATA
org.cocos2d.utils.PlistParser: java.lang.String EL_DATE
org.cocos2d.utils.PlistParser: java.lang.String EL_REAL
org.cocos2d.utils.PlistParser: java.lang.String EL_TRUE
org.cocos2d.utils.PlistParser: java.lang.String EL_FALSE
org.cocos2d.utils.PlistParser: java.lang.String EL_DICT
org.cocos2d.utils.PlistParser: java.lang.String EL_ARRAY
org.cocos2d.utils.PlistParser: int COLL_UNKNOWN
org.cocos2d.utils.PlistParser: int COLL_DICT
org.cocos2d.utils.PlistParser: int COLL_ARRAY
org.cocos2d.utils.PlistParser: java.lang.Object rootDict
org.cocos2d.utils.PlistParser: java.lang.String currentKey
org.cocos2d.utils.PlistParser: int currentElement
org.cocos2d.utils.PlistParser: int currentCollectionType
org.cocos2d.utils.PlistParser: java.lang.Object currentCollection
org.cocos2d.utils.PlistParser: java.util.ArrayList depthStack
org.cocos2d.utils.PlistParser: java.text.SimpleDateFormat dateFormat
org.cocos2d.utils.PlistParser: java.lang.StringBuilder characterData
org.cocos2d.utils.PlistParser: void <clinit>()
org.cocos2d.utils.PlistParser: java.util.HashMap parse(java.lang.String)
org.cocos2d.utils.PlistParser: java.util.HashMap parse(java.io.InputStream)
org.cocos2d.utils.PlistParser: java.util.ArrayList parseArray(java.lang.String)
org.cocos2d.utils.PlistParser: java.util.ArrayList parseArray(java.io.InputStream)
org.cocos2d.utils.PlistParser: java.lang.Object parsePlist(java.io.InputStream)
org.cocos2d.utils.PlistParser: PlistParser()
org.cocos2d.utils.PlistParser: void setupCurrentCollection(java.lang.Object)
org.cocos2d.utils.PlistParser: void depthUp(java.lang.Object)
org.cocos2d.utils.PlistParser: void depthDown()
org.cocos2d.utils.PlistParser: void addToCollection(java.lang.Object)
org.cocos2d.utils.PlistParser: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org.cocos2d.utils.PlistParser: void endElement(java.lang.String,java.lang.String,java.lang.String)
org.cocos2d.utils.PlistParser: void characters(char[],int,int)
org.cocos2d.transitions.CCOrientedTransitionScene
org.cocos2d.transitions.CCOrientedTransitionScene: int orientation
org.cocos2d.transitions.CCOrientedTransitionScene: org.cocos2d.transitions.CCOrientedTransitionScene transition(float,org.cocos2d.layers.CCScene,int)
org.cocos2d.transitions.CCOrientedTransitionScene: CCOrientedTransitionScene(float,org.cocos2d.layers.CCScene,int)
org.cocos2d.transitions.CCTransitionScene: int kSceneFade
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene inScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene outScene
org.cocos2d.transitions.CCTransitionScene: float duration
org.cocos2d.transitions.CCTransitionScene: boolean inSceneOnTop
org.cocos2d.transitions.CCTransitionScene: boolean sendCleanupToScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.actions.UpdateCallback setNewSceneCallback
org.cocos2d.transitions.CCTransitionScene: boolean $assertionsDisabled
org.cocos2d.transitions.CCTransitionScene: void <clinit>()
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: CCTransitionScene(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: void sceneOrder()
org.cocos2d.transitions.CCTransitionScene: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.transitions.CCTransitionScene: void finish()
org.cocos2d.transitions.CCTransitionScene: void setNewScene(float)
org.cocos2d.transitions.CCTransitionScene: void hideOutShowIn()
org.cocos2d.transitions.CCTransitionScene: void onEnter()
org.cocos2d.transitions.CCTransitionScene: void onExit()
org.cocos2d.transitions.CCTransitionScene: void onEnterTransitionDidFinish()
org.cocos2d.transitions.CCTransitionScene: void cleanup()
org.cocos2d.layers.CCScene: org.cocos2d.layers.CCScene node()
org.cocos2d.layers.CCScene: CCScene()
org.cocos2d.layers.CCScene: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.opengl.CCRenderTexture$1
org.cocos2d.opengl.CCRenderTexture$1: org.cocos2d.opengl.CCRenderTexture this$0
org.cocos2d.opengl.CCRenderTexture$1: int val$finPow
org.cocos2d.opengl.CCRenderTexture$1: CCRenderTexture$1(org.cocos2d.opengl.CCRenderTexture,int)
org.cocos2d.opengl.CCRenderTexture$1: void load(org.cocos2d.opengl.GLResourceHelper$Resource)
org.cocos2d.opengl.CCBitmapFontAtlas
org.cocos2d.opengl.CCBitmapFontAtlas: int kCCBitmapFontAtlasMaxChars
org.cocos2d.opengl.CCBitmapFontAtlas: org.cocos2d.utils.javolution.TextBuilder string_
org.cocos2d.opengl.CCBitmapFontAtlas: org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration parsed
org.cocos2d.opengl.CCBitmapFontAtlas: org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration configuration_
org.cocos2d.opengl.CCBitmapFontAtlas: int opacity_
org.cocos2d.opengl.CCBitmapFontAtlas: org.cocos2d.types.ccColor3B color_
org.cocos2d.opengl.CCBitmapFontAtlas: boolean opacityModifyRGB_
org.cocos2d.opengl.CCBitmapFontAtlas: java.util.HashMap configurations
org.cocos2d.opengl.CCBitmapFontAtlas: void <clinit>()
org.cocos2d.opengl.CCBitmapFontAtlas: int getOpacity()
org.cocos2d.opengl.CCBitmapFontAtlas: void setOpacity(int)
org.cocos2d.opengl.CCBitmapFontAtlas: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.opengl.CCBitmapFontAtlas: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.opengl.CCBitmapFontAtlas: void purgeCachedData()
org.cocos2d.opengl.CCBitmapFontAtlas: org.cocos2d.opengl.CCBitmapFontAtlas bitmapFontAtlas(java.lang.CharSequence,java.lang.String)
org.cocos2d.opengl.CCBitmapFontAtlas: CCBitmapFontAtlas(java.lang.CharSequence,java.lang.String)
org.cocos2d.opengl.CCBitmapFontAtlas: org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration FNTConfigLoadFile(java.lang.String)
org.cocos2d.opengl.CCBitmapFontAtlas: void FNTConfigRemoveCache()
org.cocos2d.opengl.CCBitmapFontAtlas: int kerningAmount(int,int)
org.cocos2d.opengl.CCBitmapFontAtlas: void createFontChars()
org.cocos2d.opengl.CCBitmapFontAtlas: void setString(java.lang.CharSequence)
org.cocos2d.opengl.CCBitmapFontAtlas: void setOpacityModifyRGB(boolean)
org.cocos2d.opengl.CCBitmapFontAtlas: boolean doesOpacityModifyRGB()
org.cocos2d.opengl.CCBitmapFontAtlas: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCSpriteSheet: int defaultCapacity
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.opengl.CCTextureAtlas textureAtlas_
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.nodes.CCSpriteSheet: java.util.ArrayList descendants_
org.cocos2d.nodes.CCSpriteSheet: boolean $assertionsDisabled
org.cocos2d.nodes.CCSpriteSheet: void <clinit>()
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.opengl.CCTextureAtlas getTextureAtlas()
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.types.ccBlendFunc getBlendFunc()
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(org.cocos2d.opengl.CCTexture2D,int)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(java.lang.String)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(java.lang.String,int)
org.cocos2d.nodes.CCSpriteSheet: CCSpriteSheet(org.cocos2d.opengl.CCTexture2D,int)
org.cocos2d.nodes.CCSpriteSheet: CCSpriteSheet(java.lang.String,int)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSprite createSprite(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSpriteSheet: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSprite initSprite(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCSpriteSheet: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCSpriteSheet: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCSpriteSheet: void removeChildAtIndex(int,boolean)
org.cocos2d.nodes.CCSpriteSheet: void removeAllChildren(boolean)
org.cocos2d.nodes.CCSpriteSheet: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCSpriteSheet: void increaseAtlasCapacity()
org.cocos2d.nodes.CCSpriteSheet: int rebuildIndexInOrder(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: int highestAtlasIndexInChild(org.cocos2d.nodes.CCSprite)
org.cocos2d.nodes.CCSpriteSheet: int lowestAtlasIndexInChild(org.cocos2d.nodes.CCSprite)
org.cocos2d.nodes.CCSpriteSheet: int atlasIndex(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: void insertChild(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: void removeSpriteFromAtlas(org.cocos2d.nodes.CCSprite)
org.cocos2d.nodes.CCSpriteSheet: void updateBlendFunc()
org.cocos2d.nodes.CCSpriteSheet: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.nodes.CCSpriteSheet: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.nodes.CCSpriteSheet: void addQuadFromSprite(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet addSpriteWithoutQuad(org.cocos2d.nodes.CCSprite,int,int)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.layers.CCTMXTiledMap
org.cocos2d.layers.CCTMXTiledMap: java.lang.String LOG_TAG
org.cocos2d.layers.CCTMXTiledMap: int CCTMXOrientationOrtho
org.cocos2d.layers.CCTMXTiledMap: int CCTMXOrientationHex
org.cocos2d.layers.CCTMXTiledMap: int CCTMXOrientationIso
org.cocos2d.layers.CCTMXTiledMap: org.cocos2d.types.CGSize mapSize_
org.cocos2d.layers.CCTMXTiledMap: org.cocos2d.types.CGSize tileSize_
org.cocos2d.layers.CCTMXTiledMap: int mapOrientation_
org.cocos2d.layers.CCTMXTiledMap: java.util.ArrayList objectGroups
org.cocos2d.layers.CCTMXTiledMap: java.util.HashMap properties_
org.cocos2d.layers.CCTMXTiledMap: java.util.HashMap tileProperties_
org.cocos2d.layers.CCTMXTiledMap: boolean $assertionsDisabled
org.cocos2d.layers.CCTMXTiledMap: void <clinit>()
org.cocos2d.layers.CCTMXTiledMap: org.cocos2d.types.CGSize getMapSize()
org.cocos2d.layers.CCTMXTiledMap: org.cocos2d.types.CGSize getTileSize()
org.cocos2d.layers.CCTMXTiledMap: int getMapOrientation()
org.cocos2d.layers.CCTMXTiledMap: java.util.HashMap getProperties()
org.cocos2d.layers.CCTMXTiledMap: void setProperties(java.util.HashMap)
org.cocos2d.layers.CCTMXTiledMap: org.cocos2d.layers.CCTMXTiledMap tiledMap(java.lang.String)
org.cocos2d.layers.CCTMXTiledMap: CCTMXTiledMap(java.lang.String)
org.cocos2d.layers.CCTMXTiledMap: org.cocos2d.layers.CCTMXLayer layerNamed(java.lang.String)
org.cocos2d.layers.CCTMXTiledMap: org.cocos2d.layers.CCTMXObjectGroup objectGroupNamed(java.lang.String)
org.cocos2d.layers.CCTMXTiledMap: org.cocos2d.layers.CCTMXObjectGroup groupNamed(java.lang.String)
org.cocos2d.layers.CCTMXTiledMap: java.lang.Object propertyNamed(java.lang.String)
org.cocos2d.layers.CCTMXTiledMap: java.util.HashMap propertiesForGID(int)
org.cocos2d.layers.CCTMXTiledMap: org.cocos2d.layers.CCTMXLayer parseLayer(org.cocos2d.layers.CCTMXLayerInfo,org.cocos2d.layers.CCTMXMapInfo)
org.cocos2d.layers.CCTMXTiledMap: org.cocos2d.layers.CCTMXTilesetInfo tilesetForLayer(org.cocos2d.layers.CCTMXLayerInfo,org.cocos2d.layers.CCTMXMapInfo)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.transitions.CCPageTurnTransition
org.cocos2d.transitions.CCPageTurnTransition: boolean back_
org.cocos2d.transitions.CCPageTurnTransition: org.cocos2d.transitions.CCPageTurnTransition transition(float,org.cocos2d.layers.CCScene,boolean)
org.cocos2d.transitions.CCPageTurnTransition: org.cocos2d.transitions.CCPageTurnTransition transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCPageTurnTransition: CCPageTurnTransition(float,org.cocos2d.layers.CCScene,boolean)
org.cocos2d.transitions.CCPageTurnTransition: void sceneOrder()
org.cocos2d.transitions.CCPageTurnTransition: void onEnter()
org.cocos2d.transitions.CCPageTurnTransition: org.cocos2d.actions.interval.CCIntervalAction action(org.cocos2d.types.ccGridSize)
org.cocos2d.transitions.CCPageTurnTransition: org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: int kSceneFade
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene inScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene outScene
org.cocos2d.transitions.CCTransitionScene: float duration
org.cocos2d.transitions.CCTransitionScene: boolean inSceneOnTop
org.cocos2d.transitions.CCTransitionScene: boolean sendCleanupToScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.actions.UpdateCallback setNewSceneCallback
org.cocos2d.transitions.CCTransitionScene: boolean $assertionsDisabled
org.cocos2d.transitions.CCTransitionScene: void <clinit>()
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: CCTransitionScene(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: void sceneOrder()
org.cocos2d.transitions.CCTransitionScene: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.transitions.CCTransitionScene: void finish()
org.cocos2d.transitions.CCTransitionScene: void setNewScene(float)
org.cocos2d.transitions.CCTransitionScene: void hideOutShowIn()
org.cocos2d.transitions.CCTransitionScene: void onEnter()
org.cocos2d.transitions.CCTransitionScene: void onExit()
org.cocos2d.transitions.CCTransitionScene: void onEnterTransitionDidFinish()
org.cocos2d.transitions.CCTransitionScene: void cleanup()
org.cocos2d.layers.CCScene: org.cocos2d.layers.CCScene node()
org.cocos2d.layers.CCScene: CCScene()
org.cocos2d.layers.CCScene: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.ccGridSize
org.cocos2d.types.ccGridSize: int x
org.cocos2d.types.ccGridSize: int y
org.cocos2d.types.ccGridSize: org.cocos2d.types.ccGridSize ccg(int,int)
org.cocos2d.types.ccGridSize: ccGridSize(int,int)
org.cocos2d.types.ccGridSize: ccGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.types.ccV2F_C4F_T2F
org.cocos2d.types.ccV2F_C4F_T2F: org.cocos2d.types.CGPoint vertices
org.cocos2d.types.ccV2F_C4F_T2F: org.cocos2d.types.ccColor4F colors
org.cocos2d.types.ccV2F_C4F_T2F: org.cocos2d.types.ccTex2F texCoords
org.cocos2d.types.ccV2F_C4F_T2F: ccV2F_C4F_T2F()
org.cocos2d.tests.MenuTest$Layer1
org.cocos2d.tests.MenuTest$Layer1: org.cocos2d.menus.CCMenuItem disabledItem
org.cocos2d.tests.MenuTest$Layer1: MenuTest$Layer1()
org.cocos2d.tests.MenuTest$Layer1: void menuCallback(java.lang.Object)
org.cocos2d.tests.MenuTest$Layer1: void menuCallbackConfig(java.lang.Object)
org.cocos2d.tests.MenuTest$Layer1: void menuCallbackDisabled(java.lang.Object)
org.cocos2d.tests.MenuTest$Layer1: void menuCallbackEnable(java.lang.Object)
org.cocos2d.tests.MenuTest$Layer1: void menuCallback2(java.lang.Object)
org.cocos2d.tests.MenuTest$Layer1: void onQuit(java.lang.Object)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.MenuTest$Layer2
org.cocos2d.tests.MenuTest$Layer2: org.cocos2d.types.CGPoint centeredMenu
org.cocos2d.tests.MenuTest$Layer2: boolean alignedH
org.cocos2d.tests.MenuTest$Layer2: void alignMenusH()
org.cocos2d.tests.MenuTest$Layer2: void alignMenusV()
org.cocos2d.tests.MenuTest$Layer2: MenuTest$Layer2()
org.cocos2d.tests.MenuTest$Layer2: void menuCallbackBack(java.lang.Object)
org.cocos2d.tests.MenuTest$Layer2: void menuCallbackOpacity(java.lang.Object)
org.cocos2d.tests.MenuTest$Layer2: void menuCallbackAlign(java.lang.Object)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.MenuTest$Layer3
org.cocos2d.tests.MenuTest$Layer3: org.cocos2d.menus.CCMenuItem disabledItem
org.cocos2d.tests.MenuTest$Layer3: MenuTest$Layer3()
org.cocos2d.tests.MenuTest$Layer3: void menuCallback(java.lang.Object)
org.cocos2d.tests.MenuTest$Layer3: void menuCallback2(java.lang.Object)
org.cocos2d.tests.MenuTest$Layer3: void menuCallback3(java.lang.Object)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.ActionManagerTest
org.cocos2d.tests.ActionManagerTest: int kTagNode
org.cocos2d.tests.ActionManagerTest: int kTagGrossini
org.cocos2d.tests.ActionManagerTest: int kTagSister
org.cocos2d.tests.ActionManagerTest: int kTagSlider
org.cocos2d.tests.ActionManagerTest: int kTagSequence
org.cocos2d.tests.ActionManagerTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.ActionManagerTest: int sceneIdx
org.cocos2d.tests.ActionManagerTest: java.lang.Class[] transitions
org.cocos2d.tests.ActionManagerTest: void <clinit>()
org.cocos2d.tests.ActionManagerTest: ActionManagerTest()
org.cocos2d.tests.ActionManagerTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.ActionManagerTest: void onStart()
org.cocos2d.tests.ActionManagerTest: void onPause()
org.cocos2d.tests.ActionManagerTest: void onResume()
org.cocos2d.tests.ActionManagerTest: void onDestroy()
org.cocos2d.tests.ActionManagerTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.ActionManagerTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.ActionManagerTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.actions.grid.CCLens3D
org.cocos2d.actions.grid.CCLens3D: org.cocos2d.types.CGPoint position
org.cocos2d.actions.grid.CCLens3D: float radius
org.cocos2d.actions.grid.CCLens3D: float lensEffect
org.cocos2d.actions.grid.CCLens3D: org.cocos2d.types.CGPoint lastPosition
org.cocos2d.actions.grid.CCLens3D: org.cocos2d.actions.grid.CCLens3D action(org.cocos2d.types.CGPoint,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCLens3D: CCLens3D(org.cocos2d.types.CGPoint,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCLens3D: org.cocos2d.actions.grid.CCLens3D copy()
org.cocos2d.actions.grid.CCLens3D: void update(float)
org.cocos2d.actions.grid.CCLens3D: java.lang.Object copy()
org.cocos2d.actions.grid.CCLens3D: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: CCGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.opengl.GLSurfaceView$SimpleEGLConfigChooser
org.cocos2d.opengl.GLSurfaceView$SimpleEGLConfigChooser: org.cocos2d.opengl.GLSurfaceView this$0
org.cocos2d.opengl.GLSurfaceView$SimpleEGLConfigChooser: GLSurfaceView$SimpleEGLConfigChooser(org.cocos2d.opengl.GLSurfaceView,boolean)
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int[] mValue
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mRedSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mGreenSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mBlueSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mAlphaSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mDepthSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mStencilSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: org.cocos2d.opengl.GLSurfaceView this$0
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: GLSurfaceView$ComponentSizeChooser(org.cocos2d.opengl.GLSurfaceView,int,int,int,int,int,int)
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: int[] mConfigSpec
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: org.cocos2d.opengl.GLSurfaceView this$0
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: GLSurfaceView$BaseConfigChooser(org.cocos2d.opengl.GLSurfaceView,int[])
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: int[] filterConfigSpec(int[])
org.cocos2d.types.ccColor3B
org.cocos2d.types.ccColor3B: int size
org.cocos2d.types.ccColor3B: org.cocos2d.types.ccColor3B ccWHITE
org.cocos2d.types.ccColor3B: org.cocos2d.types.ccColor3B ccYELLOW
org.cocos2d.types.ccColor3B: org.cocos2d.types.ccColor3B ccBLUE
org.cocos2d.types.ccColor3B: org.cocos2d.types.ccColor3B ccGREEN
org.cocos2d.types.ccColor3B: org.cocos2d.types.ccColor3B ccRED
org.cocos2d.types.ccColor3B: org.cocos2d.types.ccColor3B ccMAGENTA
org.cocos2d.types.ccColor3B: org.cocos2d.types.ccColor3B ccBLACK
org.cocos2d.types.ccColor3B: org.cocos2d.types.ccColor3B ccORANGE
org.cocos2d.types.ccColor3B: org.cocos2d.types.ccColor3B ccGRAY
org.cocos2d.types.ccColor3B: int r
org.cocos2d.types.ccColor3B: int g
org.cocos2d.types.ccColor3B: int b
org.cocos2d.types.ccColor3B: void <clinit>()
org.cocos2d.types.ccColor3B: ccColor3B(org.cocos2d.types.ccColor3B)
org.cocos2d.types.ccColor3B: ccColor3B(int,int,int)
org.cocos2d.types.ccColor3B: void set(org.cocos2d.types.ccColor3B)
org.cocos2d.types.ccColor3B: byte[] toByteArray()
org.cocos2d.types.ccColor3B: org.cocos2d.types.ccColor3B ccc3(int,int,int)
org.cocos2d.types.ccColor3B: java.lang.String toString()
org.cocos2d.opengl.GLSurfaceView
org.cocos2d.opengl.GLSurfaceView: boolean LOG_THREADS
org.cocos2d.opengl.GLSurfaceView: boolean LOG_SURFACE
org.cocos2d.opengl.GLSurfaceView: boolean LOG_RENDERER
org.cocos2d.opengl.GLSurfaceView: boolean DRAW_TWICE_AFTER_SIZE_CHANGED
org.cocos2d.opengl.GLSurfaceView: int RENDERMODE_WHEN_DIRTY
org.cocos2d.opengl.GLSurfaceView: int RENDERMODE_CONTINUOUSLY
org.cocos2d.opengl.GLSurfaceView: int DEBUG_CHECK_GL_ERROR
org.cocos2d.opengl.GLSurfaceView: int DEBUG_LOG_GL_CALLS
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$GLThreadManager sGLThreadManager
org.cocos2d.opengl.GLSurfaceView: boolean mSizeChanged
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$GLThread mGLThread
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLContextFactory mEGLContextFactory
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$GLWrapper mGLWrapper
org.cocos2d.opengl.GLSurfaceView: int mDebugFlags
org.cocos2d.opengl.GLSurfaceView: int mEGLContextClientVersion
org.cocos2d.opengl.GLSurfaceView: void <clinit>()
org.cocos2d.opengl.GLSurfaceView: GLSurfaceView(android.content.Context)
org.cocos2d.opengl.GLSurfaceView: GLSurfaceView(android.content.Context,android.util.AttributeSet)
org.cocos2d.opengl.GLSurfaceView: void init()
org.cocos2d.opengl.GLSurfaceView: void setGLWrapper(org.cocos2d.opengl.GLSurfaceView$GLWrapper)
org.cocos2d.opengl.GLSurfaceView: void setDebugFlags(int)
org.cocos2d.opengl.GLSurfaceView: int getDebugFlags()
org.cocos2d.opengl.GLSurfaceView: void setRenderer(org.cocos2d.opengl.GLSurfaceView$Renderer)
org.cocos2d.opengl.GLSurfaceView: void setEGLContextFactory(org.cocos2d.opengl.GLSurfaceView$EGLContextFactory)
org.cocos2d.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(org.cocos2d.opengl.GLSurfaceView$EGLWindowSurfaceFactory)
org.cocos2d.opengl.GLSurfaceView: void setEGLConfigChooser(org.cocos2d.opengl.GLSurfaceView$EGLConfigChooser)
org.cocos2d.opengl.GLSurfaceView: void setEGLConfigChooser(boolean)
org.cocos2d.opengl.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)
org.cocos2d.opengl.GLSurfaceView: void setEGLContextClientVersion(int)
org.cocos2d.opengl.GLSurfaceView: void setRenderMode(int)
org.cocos2d.opengl.GLSurfaceView: int getRenderMode()
org.cocos2d.opengl.GLSurfaceView: void requestRender()
org.cocos2d.opengl.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)
org.cocos2d.opengl.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)
org.cocos2d.opengl.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
org.cocos2d.opengl.GLSurfaceView: void onPause()
org.cocos2d.opengl.GLSurfaceView: void onResume()
org.cocos2d.opengl.GLSurfaceView: void setSafeMode(boolean)
org.cocos2d.opengl.GLSurfaceView: void queueEvent(java.lang.Runnable)
org.cocos2d.opengl.GLSurfaceView: void onWindowFocusChanged(boolean)
org.cocos2d.opengl.GLSurfaceView: void onDetachedFromWindow()
org.cocos2d.opengl.GLSurfaceView: void checkRenderThreadState()
org.cocos2d.opengl.GLSurfaceView: int access$0(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLConfigChooser access$1(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLContextFactory access$2(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLWindowSurfaceFactory access$3(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$GLWrapper access$4(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: int access$5(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$GLThreadManager access$6()
org.cocos2d.opengl.GLSurfaceView: boolean access$7(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: void access$8(org.cocos2d.opengl.GLSurfaceView,boolean)
org.cocos2d.actions.camera.CCCameraAction
org.cocos2d.actions.camera.CCCameraAction: float centerXOrig
org.cocos2d.actions.camera.CCCameraAction: float centerYOrig
org.cocos2d.actions.camera.CCCameraAction: float centerZOrig
org.cocos2d.actions.camera.CCCameraAction: float eyeXOrig
org.cocos2d.actions.camera.CCCameraAction: float eyeYOrig
org.cocos2d.actions.camera.CCCameraAction: float eyeZOrig
org.cocos2d.actions.camera.CCCameraAction: float upXOrig
org.cocos2d.actions.camera.CCCameraAction: float upYOrig
org.cocos2d.actions.camera.CCCameraAction: float upZOrig
org.cocos2d.actions.camera.CCCameraAction: CCCameraAction(float)
org.cocos2d.actions.camera.CCCameraAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.camera.CCCameraAction: org.cocos2d.actions.interval.CCReverseTime reverse()
org.cocos2d.actions.camera.CCCameraAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef: int charID
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef: org.cocos2d.types.CGRect rect
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef: int xOffset
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef: int yOffset
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef: int xAdvance
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef: CCBitmapFontAtlas$ccBitmapFontDef()
org.cocos2d.layers.CCTMXTilesetInfo
org.cocos2d.layers.CCTMXTilesetInfo: java.lang.String name
org.cocos2d.layers.CCTMXTilesetInfo: int firstGid
org.cocos2d.layers.CCTMXTilesetInfo: org.cocos2d.types.CGSize tileSize
org.cocos2d.layers.CCTMXTilesetInfo: int spacing
org.cocos2d.layers.CCTMXTilesetInfo: int margin
org.cocos2d.layers.CCTMXTilesetInfo: java.lang.String sourceImage
org.cocos2d.layers.CCTMXTilesetInfo: org.cocos2d.types.CGSize imageSize
org.cocos2d.layers.CCTMXTilesetInfo: CCTMXTilesetInfo()
org.cocos2d.layers.CCTMXTilesetInfo: org.cocos2d.types.CGRect rectForGID(int)
org.cocos2d.menus.CCMenuItem
org.cocos2d.menus.CCMenuItem: int kItemSize
org.cocos2d.menus.CCMenuItem: int _fontSize
org.cocos2d.menus.CCMenuItem: java.lang.String fontName
org.cocos2d.menus.CCMenuItem: int kCurrentItem
org.cocos2d.menus.CCMenuItem: int kZoomActionTag
org.cocos2d.menus.CCMenuItem: boolean isEnabled_
org.cocos2d.menus.CCMenuItem: boolean isSelected_
org.cocos2d.menus.CCMenuItem: java.lang.Object targetCallback
org.cocos2d.menus.CCMenuItem: java.lang.String selector
org.cocos2d.menus.CCMenuItem: java.lang.reflect.Method invocation
org.cocos2d.menus.CCMenuItem: void <clinit>()
org.cocos2d.menus.CCMenuItem: org.cocos2d.menus.CCMenuItem item(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: CCMenuItem(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: void activate()
org.cocos2d.menus.CCMenuItem: void selected()
org.cocos2d.menus.CCMenuItem: void unselected()
org.cocos2d.menus.CCMenuItem: void setIsEnabled(boolean)
org.cocos2d.menus.CCMenuItem: boolean isEnabled()
org.cocos2d.menus.CCMenuItem: org.cocos2d.types.CGRect rect()
org.cocos2d.menus.CCMenuItem: void rect(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.ease.CCEaseAction
org.cocos2d.actions.ease.CCEaseAction: float M_PI_X_2
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.interval.CCIntervalAction other
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.ease.CCEaseAction action(org.cocos2d.actions.interval.CCIntervalAction)
org.cocos2d.actions.ease.CCEaseAction: CCEaseAction(org.cocos2d.actions.interval.CCIntervalAction)
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.ease.CCEaseAction copy()
org.cocos2d.actions.ease.CCEaseAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.ease.CCEaseAction: void stop()
org.cocos2d.actions.ease.CCEaseAction: void update(float)
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.ease.CCEaseAction: java.lang.Object copy()
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.transitions.CCTransitionScene$1
org.cocos2d.transitions.CCTransitionScene$1: org.cocos2d.transitions.CCTransitionScene this$0
org.cocos2d.transitions.CCTransitionScene$1: CCTransitionScene$1(org.cocos2d.transitions.CCTransitionScene)
org.cocos2d.transitions.CCTransitionScene$1: void update(float)
org.cocos2d.actions.grid.CCGridAction
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.ClickAndMoveTest$MainLayer
org.cocos2d.tests.ClickAndMoveTest$MainLayer: int kTagSprite
org.cocos2d.tests.ClickAndMoveTest$MainLayer: org.cocos2d.actions.CCProgressTimer progressTimer
org.cocos2d.tests.ClickAndMoveTest$MainLayer: ClickAndMoveTest$MainLayer()
org.cocos2d.tests.ClickAndMoveTest$MainLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.ccColor4B
org.cocos2d.types.ccColor4B: int size
org.cocos2d.types.ccColor4B: int r
org.cocos2d.types.ccColor4B: int g
org.cocos2d.types.ccColor4B: int b
org.cocos2d.types.ccColor4B: int a
org.cocos2d.types.ccColor4B: ccColor4B(int,int,int,int)
org.cocos2d.types.ccColor4B: byte[] toByteArray()
org.cocos2d.types.ccColor4B: float[] toFloatArray()
org.cocos2d.types.ccColor4B: org.cocos2d.types.ccColor4B ccc4(int,int,int,int)
org.cocos2d.types.ccColor4B: java.lang.String toString()
org.cocos2d.actions.CCActionManager$1
org.cocos2d.actions.CCActionManager$1: org.cocos2d.actions.CCActionManager this$0
org.cocos2d.actions.CCActionManager$1: CCActionManager$1(org.cocos2d.actions.CCActionManager)
org.cocos2d.actions.CCActionManager$1: org.cocos2d.actions.CCActionManager$HashElement allocate()
org.cocos2d.actions.CCActionManager$1: java.lang.Object allocate()
org.cocos2d.utils.pool.ConcOneClassPool: org.cocos2d.utils.collections.ConcNodeCachingStack objs
org.cocos2d.utils.pool.ConcOneClassPool: ConcOneClassPool()
org.cocos2d.utils.pool.ConcOneClassPool: java.lang.Object allocate()
org.cocos2d.utils.pool.ConcOneClassPool: java.lang.Object get()
org.cocos2d.utils.pool.ConcOneClassPool: void free(java.lang.Object)
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int[] mValue
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mRedSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mGreenSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mBlueSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mAlphaSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mDepthSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int mStencilSize
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: org.cocos2d.opengl.GLSurfaceView this$0
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: GLSurfaceView$ComponentSizeChooser(org.cocos2d.opengl.GLSurfaceView,int,int,int,int,int,int)
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: int[] mConfigSpec
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: org.cocos2d.opengl.GLSurfaceView this$0
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: GLSurfaceView$BaseConfigChooser(org.cocos2d.opengl.GLSurfaceView,int[])
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: int[] filterConfigSpec(int[])
org.cocos2d.nodes.CCSpriteFrame
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.types.CGRect rect_
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.types.CGPoint offset_
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.types.CGSize originalSize_
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.opengl.CCTexture2D texture_
org.cocos2d.nodes.CCSpriteFrame: java.lang.Boolean rotated_
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.types.CGRect getRect()
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.types.CGRect getRectRef()
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.types.CGPoint getOffset()
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.types.CGPoint getOffsetRef()
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.nodes.CCSpriteFrame: java.lang.Boolean getRotated()
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.nodes.CCSpriteFrame frame(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.nodes.CCSpriteFrame frame(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect,org.cocos2d.types.CGPoint,org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.nodes.CCSpriteFrame frame(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect,java.lang.Boolean,org.cocos2d.types.CGPoint,org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCSpriteFrame: CCSpriteFrame(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCSpriteFrame: CCSpriteFrame(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect,org.cocos2d.types.CGPoint,org.cocos2d.types.CGSize,java.lang.Boolean)
org.cocos2d.nodes.CCSpriteFrame: org.cocos2d.nodes.CCSpriteFrame copy()
org.cocos2d.utils.collections.ConcNodeCachingStack$Node
org.cocos2d.utils.collections.ConcNodeCachingStack$Node: java.lang.Object item
org.cocos2d.utils.collections.ConcNodeCachingStack$Node: org.cocos2d.utils.collections.ConcNodeCachingStack$Node next
org.cocos2d.utils.collections.ConcNodeCachingStack$Node: ConcNodeCachingStack$Node()
org.cocos2d.utils.collections.ConcNodeCachingStack$Node: ConcNodeCachingStack$Node(org.cocos2d.utils.collections.ConcNodeCachingStack$Node)
org.cocos2d.types.ccColor4F
org.cocos2d.types.ccColor4F: float r
org.cocos2d.types.ccColor4F: float g
org.cocos2d.types.ccColor4F: float b
org.cocos2d.types.ccColor4F: float a
org.cocos2d.types.ccColor4F: ccColor4F()
org.cocos2d.types.ccColor4F: ccColor4F(float,float,float,float)
org.cocos2d.types.ccColor4F: ccColor4F(org.cocos2d.types.ccColor4F)
org.cocos2d.types.ccColor4F: ccColor4F(org.cocos2d.types.ccColor4B)
org.cocos2d.types.ccColor4F: ccColor4F(org.cocos2d.types.ccColor3B)
org.cocos2d.types.ccColor4F: float[] toFloatArray()
org.cocos2d.types.ccColor4F: org.cocos2d.types.ccColor4F ccc4FFromccc3B(org.cocos2d.types.ccColor3B)
org.cocos2d.types.ccColor4F: org.cocos2d.types.ccColor4F ccc4FFromccc4B(org.cocos2d.types.ccColor4B)
org.cocos2d.types.ccColor4F: boolean ccc4FEqual(org.cocos2d.types.ccColor4F,org.cocos2d.types.ccColor4F)
org.cocos2d.types.ccColor4F: java.lang.String toString()
org.cocos2d.actions.ease.CCEaseRateAction
org.cocos2d.actions.ease.CCEaseRateAction: float rate
org.cocos2d.actions.ease.CCEaseRateAction: org.cocos2d.actions.ease.CCEaseRateAction action(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.ease.CCEaseRateAction: CCEaseRateAction(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.ease.CCEaseRateAction: org.cocos2d.actions.ease.CCEaseRateAction copy()
org.cocos2d.actions.ease.CCEaseRateAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.ease.CCEaseRateAction: java.lang.Object copy()
org.cocos2d.actions.ease.CCEaseRateAction: org.cocos2d.actions.ease.CCEaseAction copy()
org.cocos2d.actions.ease.CCEaseAction: float M_PI_X_2
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.interval.CCIntervalAction other
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.ease.CCEaseAction action(org.cocos2d.actions.interval.CCIntervalAction)
org.cocos2d.actions.ease.CCEaseAction: CCEaseAction(org.cocos2d.actions.interval.CCIntervalAction)
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.ease.CCEaseAction copy()
org.cocos2d.actions.ease.CCEaseAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.ease.CCEaseAction: void stop()
org.cocos2d.actions.ease.CCEaseAction: void update(float)
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.ease.CCEaseAction: java.lang.Object copy()
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.AtlasTest$Atlas3
org.cocos2d.tests.AtlasTest$Atlas3: float time
org.cocos2d.tests.AtlasTest$Atlas3: AtlasTest$Atlas3()
org.cocos2d.tests.AtlasTest$Atlas3: void step(float)
org.cocos2d.tests.AtlasTest$Atlas3: java.lang.String title()
org.cocos2d.tests.AtlasTest$Atlas3: java.lang.String subtitle()
org.cocos2d.tests.AtlasTest$AtlasDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.AtlasTest$AtlasDemo: AtlasTest$AtlasDemo()
org.cocos2d.tests.AtlasTest$AtlasDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String title()
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.AtlasTest$Atlas4
org.cocos2d.tests.AtlasTest$Atlas4: float time
org.cocos2d.tests.AtlasTest$Atlas4: AtlasTest$Atlas4()
org.cocos2d.tests.AtlasTest$Atlas4: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.tests.AtlasTest$Atlas4: void step(float)
org.cocos2d.tests.AtlasTest$Atlas4: java.lang.String title()
org.cocos2d.tests.AtlasTest$Atlas4: java.lang.String subtitle()
org.cocos2d.tests.AtlasTest$AtlasDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.AtlasTest$AtlasDemo: AtlasTest$AtlasDemo()
org.cocos2d.tests.AtlasTest$AtlasDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String title()
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.AtlasTest$Atlas1
org.cocos2d.tests.AtlasTest$Atlas1: org.cocos2d.opengl.CCTextureAtlas textureAtlas
org.cocos2d.tests.AtlasTest$Atlas1: AtlasTest$Atlas1()
org.cocos2d.tests.AtlasTest$Atlas1: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.tests.AtlasTest$Atlas1: java.lang.String title()
org.cocos2d.tests.AtlasTest$Atlas1: java.lang.String subtitle()
org.cocos2d.tests.AtlasTest$AtlasDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.AtlasTest$AtlasDemo: AtlasTest$AtlasDemo()
org.cocos2d.tests.AtlasTest$AtlasDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String title()
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.utils.collections.IntMap
org.cocos2d.utils.collections.IntMap: org.cocos2d.utils.collections.IntMap$Entry[] table
org.cocos2d.utils.collections.IntMap: float loadFactor
org.cocos2d.utils.collections.IntMap: int size
org.cocos2d.utils.collections.IntMap: int mask
org.cocos2d.utils.collections.IntMap: int capacity
org.cocos2d.utils.collections.IntMap: int threshold
org.cocos2d.utils.collections.IntMap: IntMap()
org.cocos2d.utils.collections.IntMap: IntMap(int)
org.cocos2d.utils.collections.IntMap: IntMap(int,float)
org.cocos2d.utils.collections.IntMap: org.cocos2d.utils.collections.IntMap clone()
org.cocos2d.utils.collections.IntMap: boolean containsValue(java.lang.Object)
org.cocos2d.utils.collections.IntMap: boolean containsKey(int)
org.cocos2d.utils.collections.IntMap: java.lang.Object get(int)
org.cocos2d.utils.collections.IntMap: java.lang.Object put(int,java.lang.Object)
org.cocos2d.utils.collections.IntMap: java.lang.Object remove(int)
org.cocos2d.utils.collections.IntMap: int size()
org.cocos2d.utils.collections.IntMap: void clear()
org.cocos2d.utils.collections.IntMap: java.util.Iterator iterator()
org.cocos2d.utils.collections.IntMap: java.lang.Object clone()
org.cocos2d.utils.collections.IntMap: org.cocos2d.utils.collections.IntMap$Entry[] access$1(org.cocos2d.utils.collections.IntMap)
org.cocos2d.utils.collections.IntMap: int access$2(org.cocos2d.utils.collections.IntMap)
org.cocos2d.actions.CCTimer
org.cocos2d.actions.CCTimer: java.lang.Object target
org.cocos2d.actions.CCTimer: java.lang.String selector
org.cocos2d.actions.CCTimer: java.lang.reflect.Method invocation
org.cocos2d.actions.CCTimer: org.cocos2d.actions.UpdateCallback callback
org.cocos2d.actions.CCTimer: float interval
org.cocos2d.actions.CCTimer: float elapsed
org.cocos2d.actions.CCTimer: java.lang.String getSelector()
org.cocos2d.actions.CCTimer: org.cocos2d.actions.UpdateCallback getCallback()
org.cocos2d.actions.CCTimer: CCTimer(java.lang.Object,java.lang.String)
org.cocos2d.actions.CCTimer: CCTimer(java.lang.Object,java.lang.String,float)
org.cocos2d.actions.CCTimer: CCTimer(java.lang.Object,org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.actions.CCTimer: void setInterval(float)
org.cocos2d.actions.CCTimer: float getInterval()
org.cocos2d.actions.CCTimer: void update(float)
org.cocos2d.actions.grid.CCDeccelAmplitude
org.cocos2d.actions.grid.CCDeccelAmplitude: float rate
org.cocos2d.actions.grid.CCDeccelAmplitude: org.cocos2d.actions.interval.CCIntervalAction other
org.cocos2d.actions.grid.CCDeccelAmplitude: void setRate(float)
org.cocos2d.actions.grid.CCDeccelAmplitude: float getRate()
org.cocos2d.actions.grid.CCDeccelAmplitude: org.cocos2d.actions.grid.CCDeccelAmplitude action(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.grid.CCDeccelAmplitude: CCDeccelAmplitude(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.grid.CCDeccelAmplitude: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCDeccelAmplitude: void update(float)
org.cocos2d.actions.grid.CCDeccelAmplitude: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.Cocos2D$1
org.cocos2d.Cocos2D$1: java.text.Collator collator
org.cocos2d.Cocos2D$1: Cocos2D$1()
org.cocos2d.Cocos2D$1: int compare(java.util.Map,java.util.Map)
org.cocos2d.Cocos2D$1: int compare(java.lang.Object,java.lang.Object)
org.cocos2d.tests.CocosNodeTest
org.cocos2d.tests.CocosNodeTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.CocosNodeTest: int kTagSprite1
org.cocos2d.tests.CocosNodeTest: int kTagSprite2
org.cocos2d.tests.CocosNodeTest: int kTagSprite3
org.cocos2d.tests.CocosNodeTest: int kTagSlider
org.cocos2d.tests.CocosNodeTest: int sceneIdx
org.cocos2d.tests.CocosNodeTest: java.lang.Class[] transitions
org.cocos2d.tests.CocosNodeTest: void <clinit>()
org.cocos2d.tests.CocosNodeTest: CocosNodeTest()
org.cocos2d.tests.CocosNodeTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.CocosNodeTest: void onStart()
org.cocos2d.tests.CocosNodeTest: void onPause()
org.cocos2d.tests.CocosNodeTest: void onResume()
org.cocos2d.tests.CocosNodeTest: void onDestroy()
org.cocos2d.tests.CocosNodeTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.CocosNodeTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.CocosNodeTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.nodes.CCLabel
org.cocos2d.nodes.CCLabel: org.cocos2d.types.CGSize _dimensions
org.cocos2d.nodes.CCLabel: org.cocos2d.nodes.CCLabel$TextAlignment _alignment
org.cocos2d.nodes.CCLabel: java.lang.String _fontName
org.cocos2d.nodes.CCLabel: float _fontSize
org.cocos2d.nodes.CCLabel: java.lang.String _string
org.cocos2d.nodes.CCLabel: org.cocos2d.nodes.CCLabel makeLabel(java.lang.String,org.cocos2d.types.CGSize,org.cocos2d.nodes.CCLabel$TextAlignment,java.lang.String,float)
org.cocos2d.nodes.CCLabel: org.cocos2d.nodes.CCLabel makeLabel(java.lang.String,java.lang.String,float)
org.cocos2d.nodes.CCLabel: CCLabel(java.lang.CharSequence,java.lang.String,float)
org.cocos2d.nodes.CCLabel: CCLabel(java.lang.CharSequence,org.cocos2d.types.CGSize,org.cocos2d.nodes.CCLabel$TextAlignment,java.lang.String,float)
org.cocos2d.nodes.CCLabel: void setString(java.lang.CharSequence)
org.cocos2d.nodes.CCLabel: java.lang.String toString()
org.cocos2d.nodes.CCLabel: org.cocos2d.types.CGSize access$0(org.cocos2d.nodes.CCLabel)
org.cocos2d.nodes.CCLabel: java.lang.String access$1(org.cocos2d.nodes.CCLabel)
org.cocos2d.nodes.CCLabel: java.lang.String access$2(org.cocos2d.nodes.CCLabel)
org.cocos2d.nodes.CCLabel: float access$3(org.cocos2d.nodes.CCLabel)
org.cocos2d.nodes.CCLabel: org.cocos2d.nodes.CCLabel$TextAlignment access$4(org.cocos2d.nodes.CCLabel)
org.cocos2d.nodes.CCSprite: int CCSpriteIndexNotInitialized
org.cocos2d.nodes.CCSprite: int CC_HONOR_PARENT_TRANSFORM_TRANSLATE
org.cocos2d.nodes.CCSprite: int CC_HONOR_PARENT_TRANSFORM_ROTATE
org.cocos2d.nodes.CCSprite: int CC_HONOR_PARENT_TRANSFORM_SCALE
org.cocos2d.nodes.CCSprite: int CC_HONOR_PARENT_TRANSFORM_ALL
org.cocos2d.nodes.CCSprite: java.util.HashMap animations_
org.cocos2d.nodes.CCSprite: boolean flipY_
org.cocos2d.nodes.CCSprite: boolean flipX_
org.cocos2d.nodes.CCSprite: int opacity_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccColor3B color_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccColor3B colorUnmodified_
org.cocos2d.nodes.CCSprite: boolean opacityModifyRGB_
org.cocos2d.nodes.CCSprite: org.cocos2d.opengl.CCTexture2D texture_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGRect rect_
org.cocos2d.nodes.CCSprite: java.lang.Boolean rectRotated_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGPoint offsetPosition_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGPoint unflippedOffsetPositionFromCenter_
org.cocos2d.nodes.CCSprite: org.cocos2d.opengl.CCTextureAtlas textureAtlas_
org.cocos2d.nodes.CCSprite: int atlasIndex
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSpriteSheet spriteSheet_
org.cocos2d.nodes.CCSprite: int honorParentTransform_
org.cocos2d.nodes.CCSprite: boolean dirty_
org.cocos2d.nodes.CCSprite: boolean recursiveDirty_
org.cocos2d.nodes.CCSprite: boolean hasChildren_
org.cocos2d.nodes.CCSprite: org.cocos2d.utils.FastFloatBuffer texCoords
org.cocos2d.nodes.CCSprite: org.cocos2d.utils.FastFloatBuffer vertexes
org.cocos2d.nodes.CCSprite: org.cocos2d.utils.FastFloatBuffer colors
org.cocos2d.nodes.CCSprite: boolean usesSpriteSheet_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccColor4B tmpColor4B
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccColor4B[] tmpColors
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGAffineTransform tmpMatrix
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGAffineTransform tmpNewMatrix
org.cocos2d.nodes.CCSprite: float[] tmpV
org.cocos2d.nodes.CCSprite: boolean $assertionsDisabled
org.cocos2d.nodes.CCSprite: void <clinit>()
org.cocos2d.nodes.CCSprite: int getOpacity()
org.cocos2d.nodes.CCSprite: void setOpacity(int)
org.cocos2d.nodes.CCSprite: void setOpacityModifyRGB(boolean)
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.nodes.CCSprite: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.nodes.CCSprite: float[] getTexCoordsArray()
org.cocos2d.nodes.CCSprite: float[] getVertexArray()
org.cocos2d.nodes.CCSprite: org.cocos2d.utils.FastFloatBuffer getTexCoords()
org.cocos2d.nodes.CCSprite: org.cocos2d.utils.FastFloatBuffer getVertices()
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGRect getTextureRect()
org.cocos2d.nodes.CCSprite: java.lang.Boolean getTextureRectRotated()
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(java.lang.String,boolean)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(java.lang.String)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(java.lang.String,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(android.graphics.Bitmap)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(android.graphics.Bitmap,java.lang.String)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(org.cocos2d.nodes.CCSpriteSheet,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: CCSprite(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSprite: CCSprite(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: void init(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: CCSprite(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCSprite: void init(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCSprite: CCSprite(java.lang.String,boolean)
org.cocos2d.nodes.CCSprite: CCSprite(java.lang.String)
org.cocos2d.nodes.CCSprite: CCSprite()
org.cocos2d.nodes.CCSprite: CCSprite(java.lang.String,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: CCSprite(android.graphics.Bitmap)
org.cocos2d.nodes.CCSprite: CCSprite(android.graphics.Bitmap,java.lang.String)
org.cocos2d.nodes.CCSprite: CCSprite(org.cocos2d.nodes.CCSpriteSheet,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: void setTextureRect(float,float,float,float,java.lang.Boolean)
org.cocos2d.nodes.CCSprite: void setTextureRect(org.cocos2d.types.CGRect,java.lang.Boolean)
org.cocos2d.nodes.CCSprite: void setTextureRect(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: void useSelfRender()
org.cocos2d.nodes.CCSprite: void useSpriteSheetRender(org.cocos2d.nodes.CCSpriteSheet)
org.cocos2d.nodes.CCSprite: void init()
org.cocos2d.nodes.CCSprite: void setDisplayFrame(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCSprite: void setDisplayFrame(java.lang.String,int)
org.cocos2d.nodes.CCSprite: void setVisible(boolean)
org.cocos2d.nodes.CCSprite: void addAnimation(org.cocos2d.nodes.CCAnimation)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCAnimation animationByName(java.lang.String)
org.cocos2d.nodes.CCSprite: void updateColor()
org.cocos2d.nodes.CCSprite: void setFlipX(boolean)
org.cocos2d.nodes.CCSprite: boolean getFlipX()
org.cocos2d.nodes.CCSprite: void setFlipY(boolean)
org.cocos2d.nodes.CCSprite: boolean getFlipY()
org.cocos2d.nodes.CCSprite: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSprite: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.nodes.CCSprite: boolean isFrameDisplayed(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSpriteFrame displayedFrame()
org.cocos2d.nodes.CCSprite: void SET_DIRTY_RECURSIVELY()
org.cocos2d.nodes.CCSprite: void updateBlendFunc()
org.cocos2d.nodes.CCSprite: void initAnimationDictionary()
org.cocos2d.nodes.CCSprite: void setTextureRect(org.cocos2d.types.CGRect,org.cocos2d.types.CGSize,java.lang.Boolean)
org.cocos2d.nodes.CCSprite: void setTextureRect(float,float,float,float,float,float,boolean)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite$TransformValues getTransformValues()
org.cocos2d.nodes.CCSprite: boolean doesOpacityModifyRGB()
org.cocos2d.nodes.CCSprite: void setDirtyRecursively(boolean)
org.cocos2d.nodes.CCSprite: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCSprite: void setPosition(float,float)
org.cocos2d.nodes.CCSprite: void setRotation(float)
org.cocos2d.nodes.CCSprite: void setScaleX(float)
org.cocos2d.nodes.CCSprite: void setScaleY(float)
org.cocos2d.nodes.CCSprite: void setScale(float)
org.cocos2d.nodes.CCSprite: void setVertexZ(float)
org.cocos2d.nodes.CCSprite: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCSprite: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCSprite: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCSprite: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCSprite: void removeAllChildren(boolean)
org.cocos2d.nodes.CCSprite: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCSprite: void updateTextureCoords(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: void updateTransform()
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccBlendFunc getBlendFunc()
org.cocos2d.nodes.CCSprite: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.ParticleTest$DemoFirework
org.cocos2d.tests.ParticleTest$DemoFirework: int kTagLabelAtlas
org.cocos2d.tests.ParticleTest$DemoFirework: int kTagEmitter
org.cocos2d.tests.ParticleTest$DemoFirework: ParticleTest$DemoFirework()
org.cocos2d.tests.ParticleTest$DemoFirework: void onEnter()
org.cocos2d.tests.ParticleTest$DemoFirework: java.lang.String title()
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.ParticleTest$ParticleDemo: int kTagLabelAtlas
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.particlesystem.CCParticleSystem emitter
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.nodes.CCSprite background
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.utils.javolution.TextBuilder particleCountString
org.cocos2d.tests.ParticleTest$ParticleDemo: ParticleTest$ParticleDemo()
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.utils.javolution.TextBuilder getParticleCountString(int)
org.cocos2d.tests.ParticleTest$ParticleDemo: void update(float)
org.cocos2d.tests.ParticleTest$ParticleDemo: void toggleCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void setEmitterPosition()
org.cocos2d.tests.ParticleTest$ParticleDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: java.lang.String title()
org.cocos2d.tests.ParticleTest$ParticleDemo: java.lang.String subtitle()
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccColor3B color_
org.cocos2d.layers.CCColorLayer: int opacity_
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.layers.CCColorLayer: org.cocos2d.utils.FastFloatBuffer squareVertices_
org.cocos2d.layers.CCColorLayer: org.cocos2d.utils.FastFloatBuffer squareColors_
org.cocos2d.layers.CCColorLayer: org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B)
org.cocos2d.layers.CCColorLayer: org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: CCColorLayer(org.cocos2d.types.ccColor4B)
org.cocos2d.layers.CCColorLayer: CCColorLayer(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: void init(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: void updateColor()
org.cocos2d.layers.CCColorLayer: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.layers.CCColorLayer: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.layers.CCColorLayer: void setOpacity(int)
org.cocos2d.layers.CCColorLayer: int getOpacity()
org.cocos2d.layers.CCColorLayer: float getWidth()
org.cocos2d.layers.CCColorLayer: float getHeight()
org.cocos2d.layers.CCColorLayer: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.layers.CCColorLayer: void changeWidthAndHeight(float,float)
org.cocos2d.layers.CCColorLayer: void changeWidth(float)
org.cocos2d.layers.CCColorLayer: void changeHeight(float)
org.cocos2d.layers.CCColorLayer: boolean doesOpacityModifyRGB()
org.cocos2d.layers.CCColorLayer: void setOpacityModifyRGB(boolean)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCSpeed
org.cocos2d.actions.base.CCSpeed: org.cocos2d.actions.interval.CCIntervalAction other
org.cocos2d.actions.base.CCSpeed: float speed
org.cocos2d.actions.base.CCSpeed: float getSpeed()
org.cocos2d.actions.base.CCSpeed: void setSpeed(float)
org.cocos2d.actions.base.CCSpeed: org.cocos2d.actions.base.CCSpeed action(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.base.CCSpeed: CCSpeed(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.base.CCSpeed: org.cocos2d.actions.base.CCSpeed copy()
org.cocos2d.actions.base.CCSpeed: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCSpeed: void stop()
org.cocos2d.actions.base.CCSpeed: void step(float)
org.cocos2d.actions.base.CCSpeed: boolean isDone()
org.cocos2d.actions.base.CCSpeed: org.cocos2d.actions.base.CCSpeed reverse()
org.cocos2d.actions.base.CCSpeed: void update(float)
org.cocos2d.actions.base.CCSpeed: java.lang.Object copy()
org.cocos2d.actions.base.CCSpeed: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.TileMapTest$TMXOrthoVertexZ
org.cocos2d.tests.TileMapTest$TMXOrthoVertexZ: org.cocos2d.nodes.CCSprite tamara
org.cocos2d.tests.TileMapTest$TMXOrthoVertexZ: TileMapTest$TMXOrthoVertexZ()
org.cocos2d.tests.TileMapTest$TMXOrthoVertexZ: void repositionSprite(float)
org.cocos2d.tests.TileMapTest$TMXOrthoVertexZ: void onEnter()
org.cocos2d.tests.TileMapTest$TMXOrthoVertexZ: void onExit()
org.cocos2d.tests.TileMapTest$TMXOrthoVertexZ: java.lang.String title()
org.cocos2d.tests.TileMapTest$TMXOrthoVertexZ: java.lang.String subtitle()
org.cocos2d.tests.TileMapTest$TileDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.TileMapTest$TileDemo: TileMapTest$TileDemo()
org.cocos2d.tests.TileMapTest$TileDemo: void registerWithTouchDispatcher()
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String title()
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.ParallaxTest$Parallax2
org.cocos2d.tests.ParallaxTest$Parallax2: org.cocos2d.types.CGPoint previousLocation
org.cocos2d.tests.ParallaxTest$Parallax2: ParallaxTest$Parallax2()
org.cocos2d.tests.ParallaxTest$Parallax2: void registerWithTouchDispatcher()
org.cocos2d.tests.ParallaxTest$Parallax2: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.ParallaxTest$Parallax2: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.ParallaxTest$Parallax2: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.tests.ParallaxTest$Parallax2: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.ParallaxTest$Parallax2: java.lang.String title()
org.cocos2d.tests.ParallaxTest$ParallaxDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.ParallaxTest$ParallaxDemo: int kTagNode
org.cocos2d.tests.ParallaxTest$ParallaxDemo: int kTagGrossini
org.cocos2d.tests.ParallaxTest$ParallaxDemo: ParallaxTest$ParallaxDemo()
org.cocos2d.tests.ParallaxTest$ParallaxDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.ParallaxTest$ParallaxDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.ParallaxTest$ParallaxDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.ParallaxTest$ParallaxDemo: java.lang.String title()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.utils.javolution.TextBuilder
org.cocos2d.utils.javolution.TextBuilder: int B0
org.cocos2d.utils.javolution.TextBuilder: int C0
org.cocos2d.utils.javolution.TextBuilder: int B1
org.cocos2d.utils.javolution.TextBuilder: int C1
org.cocos2d.utils.javolution.TextBuilder: int M1
org.cocos2d.utils.javolution.TextBuilder: char[] _low
org.cocos2d.utils.javolution.TextBuilder: char[][] _high
org.cocos2d.utils.javolution.TextBuilder: int _length
org.cocos2d.utils.javolution.TextBuilder: int _capacity
org.cocos2d.utils.javolution.TextBuilder: char[] DIGIT_TO_CHAR
org.cocos2d.utils.javolution.TextBuilder: long[] POW10_LONG
org.cocos2d.utils.javolution.TextBuilder: void <clinit>()
org.cocos2d.utils.javolution.TextBuilder: TextBuilder()
org.cocos2d.utils.javolution.TextBuilder: TextBuilder(java.lang.String)
org.cocos2d.utils.javolution.TextBuilder: TextBuilder(int)
org.cocos2d.utils.javolution.TextBuilder: int length()
org.cocos2d.utils.javolution.TextBuilder: char charAt(int)
org.cocos2d.utils.javolution.TextBuilder: void getChars(int,int,char[],int)
org.cocos2d.utils.javolution.TextBuilder: void setCharAt(int,char)
org.cocos2d.utils.javolution.TextBuilder: void setLength(int)
org.cocos2d.utils.javolution.TextBuilder: void setLength(int,char)
org.cocos2d.utils.javolution.TextBuilder: java.lang.CharSequence subSequence(int,int)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(char)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(java.lang.Object)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder appendNumber(java.lang.Object)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(java.lang.CharSequence)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(java.lang.CharSequence,int,int)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(java.lang.String)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(java.lang.String,int,int)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(char[])
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(char[],int,int)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(boolean)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(int)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(int,int)
org.cocos2d.utils.javolution.TextBuilder: void appendPositive(int,int)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(long)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(long,int)
org.cocos2d.utils.javolution.TextBuilder: void appendPositive(long,int)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(float)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(double)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder append(double,int,boolean,boolean)
org.cocos2d.utils.javolution.TextBuilder: void appendFraction(long,int,boolean)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder insert(int,java.lang.CharSequence)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder clear()
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder delete(int,int)
org.cocos2d.utils.javolution.TextBuilder: org.cocos2d.utils.javolution.TextBuilder reverse()
org.cocos2d.utils.javolution.TextBuilder: java.lang.String toString()
org.cocos2d.utils.javolution.TextBuilder: void reset()
org.cocos2d.utils.javolution.TextBuilder: int hashCode()
org.cocos2d.utils.javolution.TextBuilder: boolean equals(java.lang.Object)
org.cocos2d.utils.javolution.TextBuilder: void print(java.io.Writer)
org.cocos2d.utils.javolution.TextBuilder: void println(java.io.Writer)
org.cocos2d.utils.javolution.TextBuilder: boolean contentEquals(java.lang.CharSequence)
org.cocos2d.utils.javolution.TextBuilder: boolean contentEquals(java.lang.String)
org.cocos2d.utils.javolution.TextBuilder: void increaseCapacity()
org.cocos2d.utils.javolution.TextBuilder: java.lang.Appendable append(java.lang.CharSequence,int,int)
org.cocos2d.utils.javolution.TextBuilder: java.lang.Appendable append(java.lang.CharSequence)
org.cocos2d.utils.javolution.TextBuilder: java.lang.Appendable append(char)
org.cocos2d.transitions.CCTransitionScene
org.cocos2d.transitions.CCTransitionScene: int kSceneFade
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene inScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene outScene
org.cocos2d.transitions.CCTransitionScene: float duration
org.cocos2d.transitions.CCTransitionScene: boolean inSceneOnTop
org.cocos2d.transitions.CCTransitionScene: boolean sendCleanupToScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.actions.UpdateCallback setNewSceneCallback
org.cocos2d.transitions.CCTransitionScene: boolean $assertionsDisabled
org.cocos2d.transitions.CCTransitionScene: void <clinit>()
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: CCTransitionScene(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: void sceneOrder()
org.cocos2d.transitions.CCTransitionScene: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.transitions.CCTransitionScene: void finish()
org.cocos2d.transitions.CCTransitionScene: void setNewScene(float)
org.cocos2d.transitions.CCTransitionScene: void hideOutShowIn()
org.cocos2d.transitions.CCTransitionScene: void onEnter()
org.cocos2d.transitions.CCTransitionScene: void onExit()
org.cocos2d.transitions.CCTransitionScene: void onEnterTransitionDidFinish()
org.cocos2d.transitions.CCTransitionScene: void cleanup()
org.cocos2d.layers.CCScene: org.cocos2d.layers.CCScene node()
org.cocos2d.layers.CCScene: CCScene()
org.cocos2d.layers.CCScene: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.transitions.CCTransitionScene$TransitionWithInvalidSceneException
org.cocos2d.transitions.CCTransitionScene$TransitionWithInvalidSceneException: long serialVersionUID
org.cocos2d.transitions.CCTransitionScene$TransitionWithInvalidSceneException: CCTransitionScene$TransitionWithInvalidSceneException(java.lang.String)
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest: float time
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest: AtlasTest$LabelAtlasColorTest()
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest: void step(float)
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest: java.lang.String title()
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest: java.lang.String subtitle()
org.cocos2d.tests.AtlasTest$AtlasDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.AtlasTest$AtlasDemo: AtlasTest$AtlasDemo()
org.cocos2d.tests.AtlasTest$AtlasDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String title()
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.CCPointSize
org.cocos2d.types.CCPointSize: float size
org.cocos2d.types.CCPointSize: CCPointSize()
org.cocos2d.actions.interval.CCPropertyAction
org.cocos2d.actions.interval.CCPropertyAction: java.lang.reflect.Method setMethod_
org.cocos2d.actions.interval.CCPropertyAction: java.lang.String key_
org.cocos2d.actions.interval.CCPropertyAction: float from_
org.cocos2d.actions.interval.CCPropertyAction: float to_
org.cocos2d.actions.interval.CCPropertyAction: float delta_
org.cocos2d.actions.interval.CCPropertyAction: org.cocos2d.actions.interval.CCPropertyAction action(float,java.lang.String,float,float)
org.cocos2d.actions.interval.CCPropertyAction: CCPropertyAction(float,java.lang.String,float,float)
org.cocos2d.actions.interval.CCPropertyAction: org.cocos2d.actions.interval.CCPropertyAction copy()
org.cocos2d.actions.interval.CCPropertyAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCPropertyAction: void update(float)
org.cocos2d.actions.interval.CCPropertyAction: org.cocos2d.actions.interval.CCPropertyAction reverse()
org.cocos2d.actions.interval.CCPropertyAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCPropertyAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCPropertyAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.ease.CCEaseElastic
org.cocos2d.actions.ease.CCEaseElastic: float period_
org.cocos2d.actions.ease.CCEaseElastic: CCEaseElastic(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.ease.CCEaseElastic: CCEaseElastic(org.cocos2d.actions.interval.CCIntervalAction)
org.cocos2d.actions.ease.CCEaseElastic: org.cocos2d.actions.ease.CCEaseAction copy()
org.cocos2d.actions.ease.CCEaseElastic: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.ease.CCEaseElastic: java.lang.Object copy()
org.cocos2d.actions.ease.CCEaseAction: float M_PI_X_2
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.interval.CCIntervalAction other
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.ease.CCEaseAction action(org.cocos2d.actions.interval.CCIntervalAction)
org.cocos2d.actions.ease.CCEaseAction: CCEaseAction(org.cocos2d.actions.interval.CCIntervalAction)
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.ease.CCEaseAction copy()
org.cocos2d.actions.ease.CCEaseAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.ease.CCEaseAction: void stop()
org.cocos2d.actions.ease.CCEaseAction: void update(float)
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.ease.CCEaseAction: java.lang.Object copy()
org.cocos2d.actions.ease.CCEaseAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.utils.BufferProvider
org.cocos2d.utils.BufferProvider: int ALLOCATION_SIZE
org.cocos2d.utils.BufferProvider: java.nio.ByteBuffer currentBuffer
org.cocos2d.utils.BufferProvider: org.cocos2d.utils.BufferProvider global_synced
org.cocos2d.utils.BufferProvider: void <clinit>()
org.cocos2d.utils.BufferProvider: BufferProvider()
org.cocos2d.utils.BufferProvider: java.nio.ByteBuffer allocate(int)
org.cocos2d.utils.BufferProvider: java.nio.ByteBuffer allocateDirect(int)
org.cocos2d.utils.BufferProvider: void drawQuads(javax.microedition.khronos.opengles.GL10,org.cocos2d.utils.FastFloatBuffer,org.cocos2d.utils.FastFloatBuffer)
org.cocos2d.utils.BufferProvider: void fillFloatBuffer(org.cocos2d.utils.FastFloatBuffer,float[])
org.cocos2d.utils.BufferProvider: org.cocos2d.utils.FastFloatBuffer makeFloatBuffer(float[])
org.cocos2d.utils.BufferProvider: org.cocos2d.utils.FastFloatBuffer createFloatBuffer(int)
org.cocos2d.utils.BufferProvider: java.nio.ByteBuffer createByteBuffer(int)
org.cocos2d.utils.BufferProvider: java.nio.ShortBuffer createShortBuffer(int)
org.cocos2d.utils.BufferProvider: java.nio.ByteBuffer bufferFromFile(java.lang.String)
org.cocos2d.tests.AtlasTest$Atlas3$1
org.cocos2d.tests.AtlasTest$Atlas3$1: org.cocos2d.tests.AtlasTest$Atlas3 this$1
org.cocos2d.tests.AtlasTest$Atlas3$1: AtlasTest$Atlas3$1(org.cocos2d.tests.AtlasTest$Atlas3)
org.cocos2d.tests.AtlasTest$Atlas3$1: void update(float)
org.cocos2d.tests.AtlasTest$Atlas4$1
org.cocos2d.tests.AtlasTest$Atlas4$1: org.cocos2d.tests.AtlasTest$Atlas4 this$1
org.cocos2d.tests.AtlasTest$Atlas4$1: AtlasTest$Atlas4$1(org.cocos2d.tests.AtlasTest$Atlas4)
org.cocos2d.tests.AtlasTest$Atlas4$1: void update(float)
org.cocos2d.actions.interval.CCBezierTo
org.cocos2d.actions.interval.CCBezierTo: org.cocos2d.types.CCBezierConfig originalconfig
org.cocos2d.actions.interval.CCBezierTo: org.cocos2d.actions.interval.CCBezierTo action(float,org.cocos2d.types.CCBezierConfig)
org.cocos2d.actions.interval.CCBezierTo: CCBezierTo(float,org.cocos2d.types.CCBezierConfig)
org.cocos2d.actions.interval.CCBezierTo: org.cocos2d.actions.interval.CCBezierTo copy()
org.cocos2d.actions.interval.CCBezierTo: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCBezierTo: org.cocos2d.actions.interval.CCBezierTo reverse()
org.cocos2d.actions.interval.CCBezierTo: org.cocos2d.actions.interval.CCBezierBy action(float,org.cocos2d.types.CCBezierConfig)
org.cocos2d.actions.interval.CCBezierTo: org.cocos2d.actions.interval.CCBezierBy reverse()
org.cocos2d.actions.interval.CCBezierTo: java.lang.Object copy()
org.cocos2d.actions.interval.CCBezierTo: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.types.CCBezierConfig config
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.types.CGPoint startPosition
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.actions.interval.CCBezierBy action(float,org.cocos2d.types.CCBezierConfig)
org.cocos2d.actions.interval.CCBezierBy: CCBezierBy(float,org.cocos2d.types.CCBezierConfig)
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCBezierBy: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCBezierBy: void update(float)
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.actions.interval.CCBezierBy reverse()
org.cocos2d.actions.interval.CCBezierBy: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCBezierBy: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.menus.CCMenuItemLabel
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.protocols.CCLabelProtocol label_
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B colorBackup
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B disabledColor_
org.cocos2d.menus.CCMenuItemLabel: float originalScale_
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.menus.CCMenuItemLabel item(org.cocos2d.protocols.CCLabelProtocol,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.menus.CCMenuItemLabel item(java.lang.String,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: CCMenuItemLabel(org.cocos2d.protocols.CCLabelProtocol,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: void setOpacity(int)
org.cocos2d.menus.CCMenuItemLabel: int getOpacity()
org.cocos2d.menus.CCMenuItemLabel: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B getDisabledColor()
org.cocos2d.menus.CCMenuItemLabel: void setDisabledColor(org.cocos2d.types.ccColor3B)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.protocols.CCLabelProtocol getLabel()
org.cocos2d.menus.CCMenuItemLabel: void setLabel(org.cocos2d.protocols.CCLabelProtocol)
org.cocos2d.menus.CCMenuItemLabel: void setString(java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: void activate()
org.cocos2d.menus.CCMenuItemLabel: void selected()
org.cocos2d.menus.CCMenuItemLabel: void unselected()
org.cocos2d.menus.CCMenuItemLabel: void setIsEnabled(boolean)
org.cocos2d.menus.CCMenuItemLabel: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.menus.CCMenuItemLabel: boolean doesOpacityModifyRGB()
org.cocos2d.menus.CCMenuItemLabel: void setOpacityModifyRGB(boolean)
org.cocos2d.menus.CCMenuItem: int kItemSize
org.cocos2d.menus.CCMenuItem: int _fontSize
org.cocos2d.menus.CCMenuItem: java.lang.String fontName
org.cocos2d.menus.CCMenuItem: int kCurrentItem
org.cocos2d.menus.CCMenuItem: int kZoomActionTag
org.cocos2d.menus.CCMenuItem: boolean isEnabled_
org.cocos2d.menus.CCMenuItem: boolean isSelected_
org.cocos2d.menus.CCMenuItem: java.lang.Object targetCallback
org.cocos2d.menus.CCMenuItem: java.lang.String selector
org.cocos2d.menus.CCMenuItem: java.lang.reflect.Method invocation
org.cocos2d.menus.CCMenuItem: void <clinit>()
org.cocos2d.menus.CCMenuItem: org.cocos2d.menus.CCMenuItem item(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: CCMenuItem(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: void activate()
org.cocos2d.menus.CCMenuItem: void selected()
org.cocos2d.menus.CCMenuItem: void unselected()
org.cocos2d.menus.CCMenuItem: void setIsEnabled(boolean)
org.cocos2d.menus.CCMenuItem: boolean isEnabled()
org.cocos2d.menus.CCMenuItem: org.cocos2d.types.CGRect rect()
org.cocos2d.menus.CCMenuItem: void rect(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.CGPoint
org.cocos2d.types.CGPoint: float kCGPointEpsilon
org.cocos2d.types.CGPoint: float x
org.cocos2d.types.CGPoint: float y
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ZERO_POINT
org.cocos2d.types.CGPoint: void <clinit>()
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint getZero()
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint zero()
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint make(float,float)
org.cocos2d.types.CGPoint: CGPoint()
org.cocos2d.types.CGPoint: CGPoint(float,float)
org.cocos2d.types.CGPoint: void set(float,float)
org.cocos2d.types.CGPoint: void set(org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: java.lang.String toString()
org.cocos2d.types.CGPoint: boolean equalToPoint(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint applyAffineTransform(org.cocos2d.types.CGPoint,org.cocos2d.types.CGAffineTransform)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccp(float,float)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpNeg(org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpAdd(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpSub(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpMult(org.cocos2d.types.CGPoint,float)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpMidpoint(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: float ccpDot(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: float ccpCross(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpPerp(org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpRPerp(org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpProject(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpRotate(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpUnrotate(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: float ccpLengthSQ(org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: float ccpLength(org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: float ccpDistance(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpNormalize(org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpForAngle(float)
org.cocos2d.types.CGPoint: float ccpToAngle(org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: float ccpCalcRotate(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: float ccpAngle(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpLerp(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,float)
org.cocos2d.types.CGPoint: float clampf(float,float,float)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpClamp(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpFromSize(org.cocos2d.types.CGSize)
org.cocos2d.types.CGPoint: boolean ccpFuzzyEqual(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,float)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpCompMult(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: float ccpAngleSigned(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGPoint: org.cocos2d.types.CGPoint ccpRotateByAngle(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,float)
org.cocos2d.types.CGPoint: boolean ccpLineIntersect(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.config.ccConfig
org.cocos2d.config.ccConfig: java.lang.String cocos2dVersion
org.cocos2d.config.ccConfig: int COCOS2D_DEBUG
org.cocos2d.config.ccConfig: int CC_FONT_LABEL_SUPPORT
org.cocos2d.config.ccConfig: boolean CC_DIRECTOR_FAST_FPS
org.cocos2d.config.ccConfig: float CC_DIRECTOR_FPS_INTERVAL
org.cocos2d.config.ccConfig: int CC_DIRECTOR_DISPATCH_FAST_EVENTS
org.cocos2d.config.ccConfig: boolean CC_COCOSNODE_RENDER_SUBPIXEL
org.cocos2d.config.ccConfig: int CC_SPRITESHEET_RENDER_SUBPIXEL
org.cocos2d.config.ccConfig: int CC_TEXTURE_ATLAS_USES_VBO
org.cocos2d.config.ccConfig: boolean CC_NODE_TRANSFORM_USING_AFFINE_MATRIX
org.cocos2d.config.ccConfig: boolean CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP
org.cocos2d.config.ccConfig: int CC_TEXTURE_NPOT_SUPPORT
org.cocos2d.config.ccConfig: int CC_SPRITE_DEBUG_DRAW
org.cocos2d.config.ccConfig: boolean CC_SPRITESHEET_DEBUG_DRAW
org.cocos2d.config.ccConfig: int CC_BITMAPFONTATLAS_DEBUG_DRAW
org.cocos2d.config.ccConfig: int CC_LABELATLAS_DEBUG_DRAW
org.cocos2d.config.ccConfig: boolean CC_ENABLE_PROFILERS
org.cocos2d.config.ccConfig: int CC_COMPATIBILITY_WITH_0_8
org.cocos2d.config.ccConfig: int CC_BLEND_SRC
org.cocos2d.config.ccConfig: int CC_BLEND_DST
org.cocos2d.config.ccConfig: ccConfig()
org.cocos2d.actions.grid.CCAccelDeccelAmplitude
org.cocos2d.actions.grid.CCAccelDeccelAmplitude: float rate
org.cocos2d.actions.grid.CCAccelDeccelAmplitude: org.cocos2d.actions.interval.CCIntervalAction other
org.cocos2d.actions.grid.CCAccelDeccelAmplitude: org.cocos2d.actions.grid.CCAccelDeccelAmplitude action(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.grid.CCAccelDeccelAmplitude: CCAccelDeccelAmplitude(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.grid.CCAccelDeccelAmplitude: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCAccelDeccelAmplitude: void update(float)
org.cocos2d.actions.grid.CCAccelDeccelAmplitude: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.utils.collections.ConcurrentArrayHashMap
org.cocos2d.utils.collections.ConcurrentArrayHashMap: java.util.ArrayList array
org.cocos2d.utils.collections.ConcurrentArrayHashMap: java.util.HashMap map
org.cocos2d.utils.collections.ConcurrentArrayHashMap: org.cocos2d.utils.pool.OneClassPool pool
org.cocos2d.utils.collections.ConcurrentArrayHashMap: ConcurrentArrayHashMap()
org.cocos2d.utils.collections.ConcurrentArrayHashMap: void put(java.lang.Object,java.lang.Object)
org.cocos2d.utils.collections.ConcurrentArrayHashMap: java.lang.Object get(java.lang.Object)
org.cocos2d.utils.collections.ConcurrentArrayHashMap: java.lang.Object remove(java.lang.Object)
org.cocos2d.utils.collections.ConcurrentArrayHashMap: org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry firstValue()
org.cocos2d.utils.collections.ConcurrentArrayHashMap: org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry nextValue(org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry)
org.cocos2d.actions.interval.CCSkewTo
org.cocos2d.actions.interval.CCSkewTo: float endSkewX
org.cocos2d.actions.interval.CCSkewTo: float endSkewY
org.cocos2d.actions.interval.CCSkewTo: float startSkewX
org.cocos2d.actions.interval.CCSkewTo: float deltaX
org.cocos2d.actions.interval.CCSkewTo: float startSkewY
org.cocos2d.actions.interval.CCSkewTo: float deltaY
org.cocos2d.actions.interval.CCSkewTo: org.cocos2d.actions.interval.CCSkewTo action(float,float,float)
org.cocos2d.actions.interval.CCSkewTo: CCSkewTo(float,float,float)
org.cocos2d.actions.interval.CCSkewTo: org.cocos2d.actions.interval.CCSkewTo copy()
org.cocos2d.actions.interval.CCSkewTo: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCSkewTo: void update(float)
org.cocos2d.actions.interval.CCSkewTo: java.lang.Object copy()
org.cocos2d.actions.interval.CCSkewTo: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.types.ccV3F_C4B_T2F_Quad
org.cocos2d.types.ccV3F_C4B_T2F_Quad: org.cocos2d.types.ccV3F_C4B_T2F tl
org.cocos2d.types.ccV3F_C4B_T2F_Quad: org.cocos2d.types.ccV3F_C4B_T2F bl
org.cocos2d.types.ccV3F_C4B_T2F_Quad: org.cocos2d.types.ccV3F_C4B_T2F tr
org.cocos2d.types.ccV3F_C4B_T2F_Quad: org.cocos2d.types.ccV3F_C4B_T2F br
org.cocos2d.types.ccV3F_C4B_T2F_Quad: ccV3F_C4B_T2F_Quad()
org.cocos2d.actions.CCScheduler$SchedulerTimerNotFound
org.cocos2d.actions.CCScheduler$SchedulerTimerNotFound: long serialVersionUID
org.cocos2d.actions.CCScheduler$SchedulerTimerNotFound: CCScheduler$SchedulerTimerNotFound(java.lang.String)
org.cocos2d.types.ccV2F_C4F_T2F_Quad
org.cocos2d.types.ccV2F_C4F_T2F_Quad: org.cocos2d.types.ccV2F_C4F_T2F bl
org.cocos2d.types.ccV2F_C4F_T2F_Quad: org.cocos2d.types.ccV2F_C4F_T2F br
org.cocos2d.types.ccV2F_C4F_T2F_Quad: org.cocos2d.types.ccV2F_C4F_T2F tl
org.cocos2d.types.ccV2F_C4F_T2F_Quad: org.cocos2d.types.ccV2F_C4F_T2F tr
org.cocos2d.types.ccV2F_C4F_T2F_Quad: ccV2F_C4F_T2F_Quad()
org.cocos2d.nodes.CCNode
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.utils.pool.ObjectPool
org.cocos2d.utils.pool.ObjectPool: java.util.HashMap lists
org.cocos2d.utils.pool.ObjectPool: ObjectPool()
org.cocos2d.utils.pool.ObjectPool: org.cocos2d.utils.pool.OneClassPool registerPool(java.lang.Class,org.cocos2d.utils.pool.OneClassPool)
org.cocos2d.utils.pool.ObjectPool: org.cocos2d.utils.pool.OneClassPool getPool(java.lang.Class)
org.cocos2d.utils.pool.ObjectPool: void clearAll()
org.cocos2d.tests.TileMapTest$TMXReadWriteTest
org.cocos2d.tests.TileMapTest$TMXReadWriteTest: int gid
org.cocos2d.tests.TileMapTest$TMXReadWriteTest: int gid2
org.cocos2d.tests.TileMapTest$TMXReadWriteTest: TileMapTest$TMXReadWriteTest()
org.cocos2d.tests.TileMapTest$TMXReadWriteTest: void removeSprite(java.lang.Object)
org.cocos2d.tests.TileMapTest$TMXReadWriteTest: void updateCol(float)
org.cocos2d.tests.TileMapTest$TMXReadWriteTest: void repaintWithGID(float)
org.cocos2d.tests.TileMapTest$TMXReadWriteTest: void removeTiles(float)
org.cocos2d.tests.TileMapTest$TMXReadWriteTest: java.lang.String title()
org.cocos2d.tests.TileMapTest$TileDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.TileMapTest$TileDemo: TileMapTest$TileDemo()
org.cocos2d.tests.TileMapTest$TileDemo: void registerWithTouchDispatcher()
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String title()
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.transitions.CCRadialCCWTransition
org.cocos2d.transitions.CCRadialCCWTransition: int kSceneRadial
org.cocos2d.transitions.CCRadialCCWTransition: org.cocos2d.transitions.CCRadialCCWTransition transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCRadialCCWTransition: CCRadialCCWTransition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCRadialCCWTransition: void sceneOrder()
org.cocos2d.transitions.CCRadialCCWTransition: int radialType()
org.cocos2d.transitions.CCRadialCCWTransition: void onEnter()
org.cocos2d.transitions.CCRadialCCWTransition: void onExit()
org.cocos2d.transitions.CCRadialCCWTransition: org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: int kSceneFade
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene inScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.layers.CCScene outScene
org.cocos2d.transitions.CCTransitionScene: float duration
org.cocos2d.transitions.CCTransitionScene: boolean inSceneOnTop
org.cocos2d.transitions.CCTransitionScene: boolean sendCleanupToScene
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.actions.UpdateCallback setNewSceneCallback
org.cocos2d.transitions.CCTransitionScene: boolean $assertionsDisabled
org.cocos2d.transitions.CCTransitionScene: void <clinit>()
org.cocos2d.transitions.CCTransitionScene: org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: CCTransitionScene(float,org.cocos2d.layers.CCScene)
org.cocos2d.transitions.CCTransitionScene: void sceneOrder()
org.cocos2d.transitions.CCTransitionScene: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.transitions.CCTransitionScene: void finish()
org.cocos2d.transitions.CCTransitionScene: void setNewScene(float)
org.cocos2d.transitions.CCTransitionScene: void hideOutShowIn()
org.cocos2d.transitions.CCTransitionScene: void onEnter()
org.cocos2d.transitions.CCTransitionScene: void onExit()
org.cocos2d.transitions.CCTransitionScene: void onEnterTransitionDidFinish()
org.cocos2d.transitions.CCTransitionScene: void cleanup()
org.cocos2d.layers.CCScene: org.cocos2d.layers.CCScene node()
org.cocos2d.layers.CCScene: CCScene()
org.cocos2d.layers.CCScene: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCMotionStreak
org.cocos2d.nodes.CCMotionStreak: org.cocos2d.nodes.CCRibbon ribbon_
org.cocos2d.nodes.CCMotionStreak: float segThreshold_
org.cocos2d.nodes.CCMotionStreak: float width_
org.cocos2d.nodes.CCMotionStreak: org.cocos2d.types.CGPoint lastLocation_
org.cocos2d.nodes.CCMotionStreak: org.cocos2d.nodes.CCRibbon getRibbon()
org.cocos2d.nodes.CCMotionStreak: org.cocos2d.nodes.CCMotionStreak streak(float,float,java.lang.String,float,float,org.cocos2d.types.ccColor4B)
org.cocos2d.nodes.CCMotionStreak: CCMotionStreak(float,float,java.lang.String,float,float,org.cocos2d.types.ccColor4B)
org.cocos2d.nodes.CCMotionStreak: void update(float)
org.cocos2d.nodes.CCMotionStreak: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCMotionStreak: org.cocos2d.opengl.CCTexture2D texture()
org.cocos2d.nodes.CCMotionStreak: org.cocos2d.types.ccBlendFunc blendFunc()
org.cocos2d.nodes.CCMotionStreak: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.grid.CCGrid3D
org.cocos2d.grid.CCGrid3D: org.cocos2d.utils.FastFloatBuffer texCoordinates
org.cocos2d.grid.CCGrid3D: org.cocos2d.utils.FastFloatBuffer vertices
org.cocos2d.grid.CCGrid3D: org.cocos2d.utils.FastFloatBuffer originalVertices
org.cocos2d.grid.CCGrid3D: java.nio.ShortBuffer indices
org.cocos2d.grid.CCGrid3D: org.cocos2d.utils.FastFloatBuffer mVertexBuffer
org.cocos2d.grid.CCGrid3D: CCGrid3D(org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCGrid3D: void blit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGrid3D: void calculateVertexPoints()
org.cocos2d.grid.CCGrid3D: org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCGrid3D: org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCGrid3D: void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D)
org.cocos2d.grid.CCGrid3D: void reuse(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: boolean active_
org.cocos2d.grid.CCGridBase: int reuseGrid_
org.cocos2d.grid.CCGridBase: org.cocos2d.types.ccGridSize gridSize_
org.cocos2d.grid.CCGridBase: org.cocos2d.opengl.CCTexture2D texture_
org.cocos2d.grid.CCGridBase: org.cocos2d.types.CGPoint step_
org.cocos2d.grid.CCGridBase: org.cocos2d.grid.CCGrabber grabber_
org.cocos2d.grid.CCGridBase: boolean isTextureFlipped_
org.cocos2d.grid.CCGridBase: javax.microedition.khronos.opengles.GL10 gl
org.cocos2d.grid.CCGridBase: int kTextureSize
org.cocos2d.grid.CCGridBase: org.cocos2d.types.CGPoint getStep()
org.cocos2d.grid.CCGridBase: boolean isTextureFlipped()
org.cocos2d.grid.CCGridBase: void setIsTextureFlipped(javax.microedition.khronos.opengles.GL10,boolean)
org.cocos2d.grid.CCGridBase: int reuseGrid()
org.cocos2d.grid.CCGridBase: void setReuseGrid(int)
org.cocos2d.grid.CCGridBase: boolean isActive()
org.cocos2d.grid.CCGridBase: void setActive(boolean)
org.cocos2d.grid.CCGridBase: int getGridWidth()
org.cocos2d.grid.CCGridBase: int getGridHeight()
org.cocos2d.grid.CCGridBase: CCGridBase(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean)
org.cocos2d.grid.CCGridBase: void init(org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean)
org.cocos2d.grid.CCGridBase: CCGridBase(org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCGridBase: java.lang.String toString()
org.cocos2d.grid.CCGridBase: void applyLandscape(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void set2DProjection(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void set3DProjection(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void beforeDraw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void afterDraw(javax.microedition.khronos.opengles.GL10,org.cocos2d.nodes.CCNode)
org.cocos2d.grid.CCGridBase: void finalize()
org.cocos2d.grid.CCGridBase: void blit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void reuse(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void calculateVertexPoints()
org.cocos2d.grid.CCGridBase: void access$0(org.cocos2d.grid.CCGridBase,org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean)
org.cocos2d.nodes.CCSpriteSheet
org.cocos2d.nodes.CCSpriteSheet: int defaultCapacity
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.opengl.CCTextureAtlas textureAtlas_
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.nodes.CCSpriteSheet: java.util.ArrayList descendants_
org.cocos2d.nodes.CCSpriteSheet: boolean $assertionsDisabled
org.cocos2d.nodes.CCSpriteSheet: void <clinit>()
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.opengl.CCTextureAtlas getTextureAtlas()
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.types.ccBlendFunc getBlendFunc()
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(org.cocos2d.opengl.CCTexture2D,int)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(java.lang.String)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet spriteSheet(java.lang.String,int)
org.cocos2d.nodes.CCSpriteSheet: CCSpriteSheet(org.cocos2d.opengl.CCTexture2D,int)
org.cocos2d.nodes.CCSpriteSheet: CCSpriteSheet(java.lang.String,int)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSprite createSprite(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSpriteSheet: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSprite initSprite(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCSpriteSheet: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCSpriteSheet: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCSpriteSheet: void removeChildAtIndex(int,boolean)
org.cocos2d.nodes.CCSpriteSheet: void removeAllChildren(boolean)
org.cocos2d.nodes.CCSpriteSheet: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCSpriteSheet: void increaseAtlasCapacity()
org.cocos2d.nodes.CCSpriteSheet: int rebuildIndexInOrder(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: int highestAtlasIndexInChild(org.cocos2d.nodes.CCSprite)
org.cocos2d.nodes.CCSpriteSheet: int lowestAtlasIndexInChild(org.cocos2d.nodes.CCSprite)
org.cocos2d.nodes.CCSpriteSheet: int atlasIndex(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: void insertChild(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: void removeSpriteFromAtlas(org.cocos2d.nodes.CCSprite)
org.cocos2d.nodes.CCSpriteSheet: void updateBlendFunc()
org.cocos2d.nodes.CCSpriteSheet: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.nodes.CCSpriteSheet: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.nodes.CCSpriteSheet: void addQuadFromSprite(org.cocos2d.nodes.CCSprite,int)
org.cocos2d.nodes.CCSpriteSheet: org.cocos2d.nodes.CCSpriteSheet addSpriteWithoutQuad(org.cocos2d.nodes.CCSprite,int,int)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCTextureNode
org.cocos2d.nodes.CCTextureNode: org.cocos2d.opengl.CCTexture2D texture_
org.cocos2d.nodes.CCTextureNode: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.nodes.CCTextureNode: int opacity_
org.cocos2d.nodes.CCTextureNode: org.cocos2d.types.ccColor3B color_
org.cocos2d.nodes.CCTextureNode: boolean opacityModifyRGB_
org.cocos2d.nodes.CCTextureNode: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.nodes.CCTextureNode: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCTextureNode: int getOpacity()
org.cocos2d.nodes.CCTextureNode: void setOpacity(int)
org.cocos2d.nodes.CCTextureNode: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.nodes.CCTextureNode: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.nodes.CCTextureNode: CCTextureNode()
org.cocos2d.nodes.CCTextureNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCTextureNode: float getWidth()
org.cocos2d.nodes.CCTextureNode: float getHeight()
org.cocos2d.nodes.CCTextureNode: boolean doesOpacityModifyRGB()
org.cocos2d.nodes.CCTextureNode: void setOpacityModifyRGB(boolean)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.ActionsTest
org.cocos2d.tests.ActionsTest: java.lang.String LOG_TAG
org.cocos2d.tests.ActionsTest: int kTagAnimationDance
org.cocos2d.tests.ActionsTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.ActionsTest: int sceneIdx
org.cocos2d.tests.ActionsTest: java.lang.Class[] transitions
org.cocos2d.tests.ActionsTest: void <clinit>()
org.cocos2d.tests.ActionsTest: ActionsTest()
org.cocos2d.tests.ActionsTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.ActionsTest: void onStart()
org.cocos2d.tests.ActionsTest: void onPause()
org.cocos2d.tests.ActionsTest: void onResume()
org.cocos2d.tests.ActionsTest: void onDestroy()
org.cocos2d.tests.ActionsTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.ActionsTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.ActionsTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.tests.ActionsTest: java.lang.String access$0()
org.cocos2d.types.CCVertex3D
org.cocos2d.types.CCVertex3D: float x
org.cocos2d.types.CCVertex3D: float y
org.cocos2d.types.CCVertex3D: float z
org.cocos2d.types.CCVertex3D: CCVertex3D(float,float,float)
org.cocos2d.utils.collections.IntMap$IntMapIterator
org.cocos2d.utils.collections.IntMap$IntMapIterator: org.cocos2d.utils.collections.IntMap$Entry cur
org.cocos2d.utils.collections.IntMap$IntMapIterator: int idx
org.cocos2d.utils.collections.IntMap$IntMapIterator: int el
org.cocos2d.utils.collections.IntMap$IntMapIterator: org.cocos2d.utils.collections.IntMap this$0
org.cocos2d.utils.collections.IntMap$IntMapIterator: IntMap$IntMapIterator(org.cocos2d.utils.collections.IntMap)
org.cocos2d.utils.collections.IntMap$IntMapIterator: boolean hasNext()
org.cocos2d.utils.collections.IntMap$IntMapIterator: org.cocos2d.utils.collections.IntMap$Entry next()
org.cocos2d.utils.collections.IntMap$IntMapIterator: void remove()
org.cocos2d.utils.collections.IntMap$IntMapIterator: java.lang.Object next()
org.cocos2d.utils.collections.IntMap$Entry
org.cocos2d.utils.collections.IntMap$Entry: int key
org.cocos2d.utils.collections.IntMap$Entry: java.lang.Object value
org.cocos2d.utils.collections.IntMap$Entry: org.cocos2d.utils.collections.IntMap$Entry next
org.cocos2d.utils.collections.IntMap$Entry: IntMap$Entry(int,java.lang.Object,org.cocos2d.utils.collections.IntMap$Entry)
org.cocos2d.utils.collections.IntMap$Entry: int getKey()
org.cocos2d.utils.collections.IntMap$Entry: java.lang.Object getValue()
org.cocos2d.utils.collections.IntMap$Entry: java.lang.String toString()
org.cocos2d.utils.collections.IntMap$Entry: org.cocos2d.utils.collections.IntMap$Entry clone()
org.cocos2d.utils.collections.IntMap$Entry: java.lang.Object clone()
org.cocos2d.types.CGRect$Edge
org.cocos2d.types.CGRect$Edge: org.cocos2d.types.CGRect$Edge MinXEdge
org.cocos2d.types.CGRect$Edge: org.cocos2d.types.CGRect$Edge MinYEdge
org.cocos2d.types.CGRect$Edge: org.cocos2d.types.CGRect$Edge MaxXEdge
org.cocos2d.types.CGRect$Edge: org.cocos2d.types.CGRect$Edge MaxYEdge
org.cocos2d.types.CGRect$Edge: org.cocos2d.types.CGRect$Edge[] ENUM$VALUES
org.cocos2d.types.CGRect$Edge: void <clinit>()
org.cocos2d.types.CGRect$Edge: CGRect$Edge(java.lang.String,int)
org.cocos2d.types.CGRect$Edge: org.cocos2d.types.CGRect$Edge[] values()
org.cocos2d.types.CGRect$Edge: org.cocos2d.types.CGRect$Edge valueOf(java.lang.String)
org.cocos2d.opengl.CCDrawingPrimitives
org.cocos2d.opengl.CCDrawingPrimitives: org.cocos2d.utils.FastFloatBuffer tmpFloatBuf
org.cocos2d.opengl.CCDrawingPrimitives: CCDrawingPrimitives()
org.cocos2d.opengl.CCDrawingPrimitives: org.cocos2d.utils.FastFloatBuffer getVertices(int)
org.cocos2d.opengl.CCDrawingPrimitives: void ccDrawPoint(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint)
org.cocos2d.opengl.CCDrawingPrimitives: void ccDrawPoints(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint[],int)
org.cocos2d.opengl.CCDrawingPrimitives: void ccDrawLine(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.opengl.CCDrawingPrimitives: void ccDrawRect(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGRect)
org.cocos2d.opengl.CCDrawingPrimitives: void ccDrawPoly(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint[],int,boolean)
org.cocos2d.opengl.CCDrawingPrimitives: void ccDrawCircle(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint,float,float,int,boolean)
org.cocos2d.opengl.CCDrawingPrimitives: void ccDrawQuadBezier(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,int)
org.cocos2d.opengl.CCDrawingPrimitives: void ccDrawCubicBezier(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,int)
org.cocos2d.tests.SpritesTest
org.cocos2d.tests.SpritesTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.SpritesTest: int kTagAnimationDance
org.cocos2d.tests.SpritesTest: int sceneIdx
org.cocos2d.tests.SpritesTest: java.lang.Class[] transitions
org.cocos2d.tests.SpritesTest: void <clinit>()
org.cocos2d.tests.SpritesTest: SpritesTest()
org.cocos2d.tests.SpritesTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.SpritesTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.SpritesTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.SpritesTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.tests.SpritesTest: void onStart()
org.cocos2d.tests.SpritesTest: void onPause()
org.cocos2d.tests.SpritesTest: void onResume()
org.cocos2d.tests.SpritesTest: void onDestroy()
org.cocos2d.tests.MotionStreakTest
org.cocos2d.tests.MotionStreakTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.MotionStreakTest: int kTagLabel
org.cocos2d.tests.MotionStreakTest: int kTagSprite1
org.cocos2d.tests.MotionStreakTest: int kTagSprite2
org.cocos2d.tests.MotionStreakTest: int sceneIdx
org.cocos2d.tests.MotionStreakTest: java.lang.Class[] transitions
org.cocos2d.tests.MotionStreakTest: void <clinit>()
org.cocos2d.tests.MotionStreakTest: MotionStreakTest()
org.cocos2d.tests.MotionStreakTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.MotionStreakTest: void onStart()
org.cocos2d.tests.MotionStreakTest: void onPause()
org.cocos2d.tests.MotionStreakTest: void onResume()
org.cocos2d.tests.MotionStreakTest: void onDestroy()
org.cocos2d.tests.MotionStreakTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.MotionStreakTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.MotionStreakTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.actions.instant.CCFlipY
org.cocos2d.actions.instant.CCFlipY: boolean flipY
org.cocos2d.actions.instant.CCFlipY: org.cocos2d.actions.instant.CCFlipY action(boolean)
org.cocos2d.actions.instant.CCFlipY: CCFlipY(boolean)
org.cocos2d.actions.instant.CCFlipY: org.cocos2d.actions.instant.CCFlipY copy()
org.cocos2d.actions.instant.CCFlipY: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.instant.CCFlipY: org.cocos2d.actions.instant.CCFlipY reverse()
org.cocos2d.actions.instant.CCFlipY: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.instant.CCFlipY: java.lang.Object copy()
org.cocos2d.actions.instant.CCFlipY: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: CCInstantAction()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: boolean isDone()
org.cocos2d.actions.instant.CCInstantAction: void step(float)
org.cocos2d.actions.instant.CCInstantAction: void update(float)
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.instant.CCInstantAction: java.lang.Object copy()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.instant.CCFlipX
org.cocos2d.actions.instant.CCFlipX: boolean flipX
org.cocos2d.actions.instant.CCFlipX: org.cocos2d.actions.instant.CCFlipX action(boolean)
org.cocos2d.actions.instant.CCFlipX: CCFlipX(boolean)
org.cocos2d.actions.instant.CCFlipX: org.cocos2d.actions.instant.CCFlipX copy()
org.cocos2d.actions.instant.CCFlipX: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.instant.CCFlipX: org.cocos2d.actions.instant.CCFlipX reverse()
org.cocos2d.actions.instant.CCFlipX: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.instant.CCFlipX: java.lang.Object copy()
org.cocos2d.actions.instant.CCFlipX: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: CCInstantAction()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: boolean isDone()
org.cocos2d.actions.instant.CCInstantAction: void step(float)
org.cocos2d.actions.instant.CCInstantAction: void update(float)
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.instant.CCInstantAction: java.lang.Object copy()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.CCActionManager
org.cocos2d.actions.CCActionManager: java.lang.String LOG_TAG
org.cocos2d.actions.CCActionManager: org.cocos2d.utils.pool.ConcOneClassPool pool
org.cocos2d.actions.CCActionManager: org.cocos2d.utils.collections.ConcurrentArrayHashMap targets
org.cocos2d.actions.CCActionManager: org.cocos2d.actions.CCActionManager _sharedManager
org.cocos2d.actions.CCActionManager: boolean $assertionsDisabled
org.cocos2d.actions.CCActionManager: void <clinit>()
org.cocos2d.actions.CCActionManager: org.cocos2d.actions.CCActionManager sharedManager()
org.cocos2d.actions.CCActionManager: CCActionManager()
org.cocos2d.actions.CCActionManager: void deleteHashElement(org.cocos2d.actions.CCActionManager$HashElement)
org.cocos2d.actions.CCActionManager: void removeAction(int,org.cocos2d.actions.CCActionManager$HashElement)
org.cocos2d.actions.CCActionManager: void pauseAllActions(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.CCActionManager: void resumeAllActions(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.CCActionManager: void addAction(org.cocos2d.actions.base.CCAction,org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.actions.CCActionManager: void removeAllActions()
org.cocos2d.actions.CCActionManager: void removeAllActions(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.CCActionManager: void removeAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.actions.CCActionManager: void removeAction(int,org.cocos2d.nodes.CCNode)
org.cocos2d.actions.CCActionManager: org.cocos2d.actions.base.CCAction getAction(int,org.cocos2d.nodes.CCNode)
org.cocos2d.actions.CCActionManager: int numberOfRunningActions(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.CCActionManager: void update(float)
org.cocos2d.actions.CCActionManager: void resume(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.CCActionManager: void pause(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.CCActionManager: void purgeSharedManager()
org.cocos2d.actions.base.CCRepeatForever
org.cocos2d.actions.base.CCRepeatForever: org.cocos2d.actions.interval.CCIntervalAction other
org.cocos2d.actions.base.CCRepeatForever: org.cocos2d.actions.base.CCRepeatForever action(org.cocos2d.actions.interval.CCIntervalAction)
org.cocos2d.actions.base.CCRepeatForever: CCRepeatForever(org.cocos2d.actions.interval.CCIntervalAction)
org.cocos2d.actions.base.CCRepeatForever: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCRepeatForever: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCRepeatForever: void step(float)
org.cocos2d.actions.base.CCRepeatForever: boolean isDone()
org.cocos2d.actions.base.CCRepeatForever: org.cocos2d.actions.base.CCRepeatForever reverse()
org.cocos2d.actions.base.CCRepeatForever: void update(float)
org.cocos2d.actions.base.CCRepeatForever: java.lang.Object copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.nodes.CCParallaxNode
org.cocos2d.nodes.CCParallaxNode: java.util.ArrayList parallaxArray_
org.cocos2d.nodes.CCParallaxNode: org.cocos2d.types.CGPoint lastPosition
org.cocos2d.nodes.CCParallaxNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCParallaxNode: void <clinit>()
org.cocos2d.nodes.CCParallaxNode: org.cocos2d.nodes.CCParallaxNode node()
org.cocos2d.nodes.CCParallaxNode: CCParallaxNode()
org.cocos2d.nodes.CCParallaxNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCParallaxNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,float,float,float,float)
org.cocos2d.nodes.CCParallaxNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCParallaxNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCParallaxNode: org.cocos2d.types.CGPoint absolutePosition()
org.cocos2d.nodes.CCParallaxNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCParallaxNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCTintTo
org.cocos2d.actions.interval.CCTintTo: org.cocos2d.types.ccColor3B to
org.cocos2d.actions.interval.CCTintTo: org.cocos2d.types.ccColor3B from
org.cocos2d.actions.interval.CCTintTo: org.cocos2d.actions.interval.CCTintTo action(float,org.cocos2d.types.ccColor3B)
org.cocos2d.actions.interval.CCTintTo: CCTintTo(float,org.cocos2d.types.ccColor3B)
org.cocos2d.actions.interval.CCTintTo: org.cocos2d.actions.interval.CCTintTo copy()
org.cocos2d.actions.interval.CCTintTo: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCTintTo: void update(float)
org.cocos2d.actions.interval.CCTintTo: java.lang.Object copy()
org.cocos2d.actions.interval.CCTintTo: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.grid.CCGridBase
org.cocos2d.grid.CCGridBase: boolean active_
org.cocos2d.grid.CCGridBase: int reuseGrid_
org.cocos2d.grid.CCGridBase: org.cocos2d.types.ccGridSize gridSize_
org.cocos2d.grid.CCGridBase: org.cocos2d.opengl.CCTexture2D texture_
org.cocos2d.grid.CCGridBase: org.cocos2d.types.CGPoint step_
org.cocos2d.grid.CCGridBase: org.cocos2d.grid.CCGrabber grabber_
org.cocos2d.grid.CCGridBase: boolean isTextureFlipped_
org.cocos2d.grid.CCGridBase: javax.microedition.khronos.opengles.GL10 gl
org.cocos2d.grid.CCGridBase: int kTextureSize
org.cocos2d.grid.CCGridBase: org.cocos2d.types.CGPoint getStep()
org.cocos2d.grid.CCGridBase: boolean isTextureFlipped()
org.cocos2d.grid.CCGridBase: void setIsTextureFlipped(javax.microedition.khronos.opengles.GL10,boolean)
org.cocos2d.grid.CCGridBase: int reuseGrid()
org.cocos2d.grid.CCGridBase: void setReuseGrid(int)
org.cocos2d.grid.CCGridBase: boolean isActive()
org.cocos2d.grid.CCGridBase: void setActive(boolean)
org.cocos2d.grid.CCGridBase: int getGridWidth()
org.cocos2d.grid.CCGridBase: int getGridHeight()
org.cocos2d.grid.CCGridBase: CCGridBase(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean)
org.cocos2d.grid.CCGridBase: void init(org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean)
org.cocos2d.grid.CCGridBase: CCGridBase(org.cocos2d.types.ccGridSize)
org.cocos2d.grid.CCGridBase: java.lang.String toString()
org.cocos2d.grid.CCGridBase: void applyLandscape(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void set2DProjection(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void set3DProjection(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void beforeDraw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void afterDraw(javax.microedition.khronos.opengles.GL10,org.cocos2d.nodes.CCNode)
org.cocos2d.grid.CCGridBase: void finalize()
org.cocos2d.grid.CCGridBase: void blit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void reuse(javax.microedition.khronos.opengles.GL10)
org.cocos2d.grid.CCGridBase: void calculateVertexPoints()
org.cocos2d.grid.CCGridBase: void access$0(org.cocos2d.grid.CCGridBase,org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean)
org.cocos2d.actions.interval.CCSequence
org.cocos2d.actions.interval.CCSequence: org.cocos2d.actions.base.CCFiniteTimeAction[] actions
org.cocos2d.actions.interval.CCSequence: float split
org.cocos2d.actions.interval.CCSequence: int last
org.cocos2d.actions.interval.CCSequence: org.cocos2d.actions.interval.CCSequence actions(org.cocos2d.actions.base.CCFiniteTimeAction,org.cocos2d.actions.base.CCFiniteTimeAction[])
org.cocos2d.actions.interval.CCSequence: CCSequence(org.cocos2d.actions.base.CCFiniteTimeAction,org.cocos2d.actions.base.CCFiniteTimeAction)
org.cocos2d.actions.interval.CCSequence: org.cocos2d.actions.interval.CCSequence copy()
org.cocos2d.actions.interval.CCSequence: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCSequence: void stop()
org.cocos2d.actions.interval.CCSequence: void update(float)
org.cocos2d.actions.interval.CCSequence: org.cocos2d.actions.interval.CCSequence reverse()
org.cocos2d.actions.interval.CCSequence: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCSequence: java.lang.Object copy()
org.cocos2d.actions.interval.CCSequence: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.SchedulerTest$TestNode
org.cocos2d.tests.SchedulerTest$TestNode: java.lang.String string_
org.cocos2d.tests.SchedulerTest$TestNode: SchedulerTest$TestNode(java.lang.String,int)
org.cocos2d.tests.SchedulerTest$TestNode: void update(float)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.Box2dTest$Box2DTestLayer$1
org.cocos2d.tests.Box2dTest$Box2DTestLayer$1: org.cocos2d.tests.Box2dTest$Box2DTestLayer this$1
org.cocos2d.tests.Box2dTest$Box2DTestLayer$1: Box2dTest$Box2DTestLayer$1(org.cocos2d.tests.Box2dTest$Box2DTestLayer)
org.cocos2d.tests.Box2dTest$Box2DTestLayer$1: void update(float)
org.cocos2d.layers.CCLayer
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.TileMapTest
org.cocos2d.tests.TileMapTest: java.lang.String LOG_TAG
org.cocos2d.tests.TileMapTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.TileMapTest: int kTagTileMap
org.cocos2d.tests.TileMapTest: int sceneIdx
org.cocos2d.tests.TileMapTest: java.lang.Class[] transitions
org.cocos2d.tests.TileMapTest: void <clinit>()
org.cocos2d.tests.TileMapTest: TileMapTest()
org.cocos2d.tests.TileMapTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.TileMapTest: void onStart()
org.cocos2d.tests.TileMapTest: void onPause()
org.cocos2d.tests.TileMapTest: void onResume()
org.cocos2d.tests.TileMapTest: void onDestroy()
org.cocos2d.tests.TileMapTest: org.cocos2d.layers.CCLayer nextAction()
org.cocos2d.tests.TileMapTest: org.cocos2d.layers.CCLayer backAction()
org.cocos2d.tests.TileMapTest: org.cocos2d.layers.CCLayer restartAction()
org.cocos2d.nodes.CCRibbon
org.cocos2d.nodes.CCRibbon: java.util.ArrayList segments_
org.cocos2d.nodes.CCRibbon: java.util.ArrayList deletedSegments_
org.cocos2d.nodes.CCRibbon: org.cocos2d.types.CGPoint lastPoint1_
org.cocos2d.nodes.CCRibbon: org.cocos2d.types.CGPoint lastPoint2_
org.cocos2d.nodes.CCRibbon: org.cocos2d.types.CGPoint lastLocation_
org.cocos2d.nodes.CCRibbon: int vertCount_
org.cocos2d.nodes.CCRibbon: float texVPos_
org.cocos2d.nodes.CCRibbon: float curTime_
org.cocos2d.nodes.CCRibbon: float fadeTime_
org.cocos2d.nodes.CCRibbon: float delta_
org.cocos2d.nodes.CCRibbon: float lastWidth_
org.cocos2d.nodes.CCRibbon: float lastSign_
org.cocos2d.nodes.CCRibbon: boolean pastFirstPoint_
org.cocos2d.nodes.CCRibbon: org.cocos2d.opengl.CCTexture2D texture_
org.cocos2d.nodes.CCRibbon: float textureLength_
org.cocos2d.nodes.CCRibbon: org.cocos2d.types.ccColor4B color_
org.cocos2d.nodes.CCRibbon: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.nodes.CCRibbon: org.cocos2d.nodes.CCRibbon node(float,java.lang.String,float,org.cocos2d.types.ccColor4B,float)
org.cocos2d.nodes.CCRibbon: CCRibbon(float,java.lang.String,float,org.cocos2d.types.ccColor4B,float)
org.cocos2d.nodes.CCRibbon: org.cocos2d.types.CGPoint rotatePoint(org.cocos2d.types.CGPoint,float)
org.cocos2d.nodes.CCRibbon: void addPoint(org.cocos2d.types.CGPoint,float)
org.cocos2d.nodes.CCRibbon: void update(float)
org.cocos2d.nodes.CCRibbon: float sideOfLine(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCRibbon: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCRibbon: org.cocos2d.types.ccBlendFunc blendFunc()
org.cocos2d.nodes.CCRibbon: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.nodes.CCRibbon: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCRibbon: org.cocos2d.opengl.CCTexture2D texture()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCTileMapAtlas
org.cocos2d.nodes.CCTileMapAtlas: org.cocos2d.opengl.TGA$ImageTGA tgaInfo
org.cocos2d.nodes.CCTileMapAtlas: java.util.HashMap posToAtlasIndex
org.cocos2d.nodes.CCTileMapAtlas: int itemsToRender
org.cocos2d.nodes.CCTileMapAtlas: boolean $assertionsDisabled
org.cocos2d.nodes.CCTileMapAtlas: void <clinit>()
org.cocos2d.nodes.CCTileMapAtlas: org.cocos2d.opengl.TGA$ImageTGA tgaInfo()
org.cocos2d.nodes.CCTileMapAtlas: org.cocos2d.nodes.CCTileMapAtlas tilemap(java.lang.String,java.lang.String,int,int)
org.cocos2d.nodes.CCTileMapAtlas: CCTileMapAtlas(java.lang.String,java.lang.String,int,int)
org.cocos2d.nodes.CCTileMapAtlas: void calculateItemsToRender()
org.cocos2d.nodes.CCTileMapAtlas: void loadTGAfile(java.lang.String)
org.cocos2d.nodes.CCTileMapAtlas: org.cocos2d.types.ccColor3B tile(org.cocos2d.types.ccGridSize)
org.cocos2d.nodes.CCTileMapAtlas: void setTile(org.cocos2d.types.ccColor3B,org.cocos2d.types.ccGridSize)
org.cocos2d.nodes.CCTileMapAtlas: void updateAtlas(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccColor3B,int)
org.cocos2d.nodes.CCTileMapAtlas: void updateAtlasValues()
org.cocos2d.nodes.CCTileMapAtlas: void releaseMap()
org.cocos2d.nodes.CCTileMapAtlas: void finalize()
org.cocos2d.nodes.CCTileMapAtlas: org.cocos2d.types.ccBlendFunc getBlendFunc()
org.cocos2d.nodes.CCTileMapAtlas: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.opengl.CCTextureAtlas textureAtlas_
org.cocos2d.nodes.CCAtlasNode: int itemsPerRow
org.cocos2d.nodes.CCAtlasNode: int itemsPerColumn
org.cocos2d.nodes.CCAtlasNode: float texStepX
org.cocos2d.nodes.CCAtlasNode: float texStepY
org.cocos2d.nodes.CCAtlasNode: int itemWidth
org.cocos2d.nodes.CCAtlasNode: int itemHeight
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.nodes.CCAtlasNode: int opacity_
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccColor3B color_
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccColor3B colorUnmodified_
org.cocos2d.nodes.CCAtlasNode: boolean opacityModifyRGB_
org.cocos2d.nodes.CCAtlasNode: CCAtlasNode(java.lang.String,int,int,int)
org.cocos2d.nodes.CCAtlasNode: void calculateMaxItems()
org.cocos2d.nodes.CCAtlasNode: void calculateTexCoordsSteps()
org.cocos2d.nodes.CCAtlasNode: void updateAtlasValues()
org.cocos2d.nodes.CCAtlasNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCAtlasNode: void setOpacity(int)
org.cocos2d.nodes.CCAtlasNode: int getOpacity()
org.cocos2d.nodes.CCAtlasNode: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.nodes.CCAtlasNode: void updateBlendFunc()
org.cocos2d.nodes.CCAtlasNode: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.nodes.CCAtlasNode: void setOpacityModifyRGB(boolean)
org.cocos2d.nodes.CCAtlasNode: boolean doesOpacityModifyRGB()
org.cocos2d.nodes.CCAtlasNode: void updateOpacityModifyRGB()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.particlesystem.CCQuadParticleSystem
org.cocos2d.particlesystem.CCQuadParticleSystem: org.cocos2d.utils.FastFloatBuffer texCoords
org.cocos2d.particlesystem.CCQuadParticleSystem: org.cocos2d.utils.FastFloatBuffer vertices
org.cocos2d.particlesystem.CCQuadParticleSystem: org.cocos2d.utils.FastFloatBuffer colors
org.cocos2d.particlesystem.CCQuadParticleSystem: java.nio.ShortBuffer indices
org.cocos2d.particlesystem.CCQuadParticleSystem: int[] quadsIDs
org.cocos2d.particlesystem.CCQuadParticleSystem: int QuadSize
org.cocos2d.particlesystem.CCQuadParticleSystem: boolean $assertionsDisabled
org.cocos2d.particlesystem.CCQuadParticleSystem: void <clinit>()
org.cocos2d.particlesystem.CCQuadParticleSystem: CCQuadParticleSystem(int)
org.cocos2d.particlesystem.CCQuadParticleSystem: void finalize()
org.cocos2d.particlesystem.CCQuadParticleSystem: void initTexCoordsWithRect(org.cocos2d.types.CGRect)
org.cocos2d.particlesystem.CCQuadParticleSystem: void setTexture(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect)
org.cocos2d.particlesystem.CCQuadParticleSystem: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.particlesystem.CCQuadParticleSystem: void setDisplayFrame(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.particlesystem.CCQuadParticleSystem: void initIndices()
org.cocos2d.particlesystem.CCQuadParticleSystem: void updateQuad(org.cocos2d.particlesystem.CCParticleSystem$CCParticle,org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCQuadParticleSystem: void postStep()
org.cocos2d.particlesystem.CCQuadParticleSystem: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.particlesystem.CCQuadParticleSystem: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.particlesystem.CCQuadParticleSystem: org.cocos2d.types.ccBlendFunc getBlendFunc()
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleDurationInfinity
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleStartSizeEqualToEndSize
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleStartRadiusEqualToEndRadius
org.cocos2d.particlesystem.CCParticleSystem: int kParticleStartSizeEqualToEndSize
org.cocos2d.particlesystem.CCParticleSystem: int kParticleDurationInfinity
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleModeGravity
org.cocos2d.particlesystem.CCParticleSystem: int kCCParticleModeRadius
org.cocos2d.particlesystem.CCParticleSystem: int kCCPositionTypeFree
org.cocos2d.particlesystem.CCParticleSystem: int kCCPositionTypeGrouped
org.cocos2d.particlesystem.CCParticleSystem: int id
org.cocos2d.particlesystem.CCParticleSystem: boolean active
org.cocos2d.particlesystem.CCParticleSystem: float duration
org.cocos2d.particlesystem.CCParticleSystem: float elapsed
org.cocos2d.particlesystem.CCParticleSystem: float startSize
org.cocos2d.particlesystem.CCParticleSystem: float startSizeVar
org.cocos2d.particlesystem.CCParticleSystem: float endSize
org.cocos2d.particlesystem.CCParticleSystem: float endSizeVar
org.cocos2d.particlesystem.CCParticleSystem: float startSpin
org.cocos2d.particlesystem.CCParticleSystem: float startSpinVar
org.cocos2d.particlesystem.CCParticleSystem: float endSpin
org.cocos2d.particlesystem.CCParticleSystem: float endSpinVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint centerOfGravity
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint source
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint posVar
org.cocos2d.particlesystem.CCParticleSystem: float angle
org.cocos2d.particlesystem.CCParticleSystem: float angleVar
org.cocos2d.particlesystem.CCParticleSystem: float speed
org.cocos2d.particlesystem.CCParticleSystem: float speedVar
org.cocos2d.particlesystem.CCParticleSystem: float tangentialAccel
org.cocos2d.particlesystem.CCParticleSystem: float tangentialAccelVar
org.cocos2d.particlesystem.CCParticleSystem: float radialAccel
org.cocos2d.particlesystem.CCParticleSystem: float radialAccelVar
org.cocos2d.particlesystem.CCParticleSystem: float size
org.cocos2d.particlesystem.CCParticleSystem: float sizeVar
org.cocos2d.particlesystem.CCParticleSystem: float life
org.cocos2d.particlesystem.CCParticleSystem: float lifeVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F startColor
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F startColorVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F endColor
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F endColorVar
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccBlendFunc blendFunc
org.cocos2d.particlesystem.CCParticleSystem: int positionType
org.cocos2d.particlesystem.CCParticleSystem: boolean autoRemoveOnFinish_
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem$CCParticle[] particles
org.cocos2d.particlesystem.CCParticleSystem: int totalParticles
org.cocos2d.particlesystem.CCParticleSystem: int particleCount
org.cocos2d.particlesystem.CCParticleSystem: boolean blendAdditive
org.cocos2d.particlesystem.CCParticleSystem: boolean colorModulate
org.cocos2d.particlesystem.CCParticleSystem: float emissionRate
org.cocos2d.particlesystem.CCParticleSystem: float emitCounter
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.opengl.CCTexture2D texture
org.cocos2d.particlesystem.CCParticleSystem: int emitterMode
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem$ModeA modeA
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem$ModeB modeB
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccPointSprite[] vertices
org.cocos2d.particlesystem.CCParticleSystem: int verticesID
org.cocos2d.particlesystem.CCParticleSystem: int colorsID
org.cocos2d.particlesystem.CCParticleSystem: int particleIdx
org.cocos2d.particlesystem.CCParticleSystem: int kPositionTypeFree
org.cocos2d.particlesystem.CCParticleSystem: int kPositionTypeGrouped
org.cocos2d.particlesystem.CCParticleSystem: int positionType_
org.cocos2d.particlesystem.CCParticleSystem: boolean $assertionsDisabled
org.cocos2d.particlesystem.CCParticleSystem: void <clinit>()
org.cocos2d.particlesystem.CCParticleSystem: void setStartSize(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartSizeVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSize(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSizeVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartSpin(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartSpinVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSpin(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEndSpinVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setCenterOfGravity(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getCenterOfGravity()
org.cocos2d.particlesystem.CCParticleSystem: void setPosVar(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: void setAngle(float)
org.cocos2d.particlesystem.CCParticleSystem: void setAngleVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setLifeVar(float)
org.cocos2d.particlesystem.CCParticleSystem: void setStartColor(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F getStartColor()
org.cocos2d.particlesystem.CCParticleSystem: void setStartColorVar(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.ccColor4F getStartColorVar()
org.cocos2d.particlesystem.CCParticleSystem: void setEndColor(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: void setEndColorVar(org.cocos2d.types.ccColor4F)
org.cocos2d.particlesystem.CCParticleSystem: int getTotalParticles()
org.cocos2d.particlesystem.CCParticleSystem: void setEmissionRate(float)
org.cocos2d.particlesystem.CCParticleSystem: void setEmitterMode(int)
org.cocos2d.particlesystem.CCParticleSystem: void setAutoRemoveOnFinish(boolean)
org.cocos2d.particlesystem.CCParticleSystem: boolean isFull()
org.cocos2d.particlesystem.CCParticleSystem: void setTangentialAccel(float)
org.cocos2d.particlesystem.CCParticleSystem: float getTangentialAccel()
org.cocos2d.particlesystem.CCParticleSystem: void setTangentialAccelVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float getTangentialAccelVar()
org.cocos2d.particlesystem.CCParticleSystem: void setRadialAccel(float)
org.cocos2d.particlesystem.CCParticleSystem: float getRadialAccel()
org.cocos2d.particlesystem.CCParticleSystem: void setRadialAccelVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float getRadialAccelVar()
org.cocos2d.particlesystem.CCParticleSystem: void setGravity(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getGravity()
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint gravity()
org.cocos2d.particlesystem.CCParticleSystem: void setSpeed(float)
org.cocos2d.particlesystem.CCParticleSystem: float getSpeed()
org.cocos2d.particlesystem.CCParticleSystem: void setSpeedVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float getSpeedVar()
org.cocos2d.particlesystem.CCParticleSystem: void setStartRadius(float)
org.cocos2d.particlesystem.CCParticleSystem: float startRadius()
org.cocos2d.particlesystem.CCParticleSystem: void setStartRadiusVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float startRadiusVar()
org.cocos2d.particlesystem.CCParticleSystem: void setEndRadius(float)
org.cocos2d.particlesystem.CCParticleSystem: float endRadius()
org.cocos2d.particlesystem.CCParticleSystem: void setEndRadiusVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float endRadiusVar()
org.cocos2d.particlesystem.CCParticleSystem: boolean getActive()
org.cocos2d.particlesystem.CCParticleSystem: int getParticleCount()
org.cocos2d.particlesystem.CCParticleSystem: void setRotatePerSecond(float)
org.cocos2d.particlesystem.CCParticleSystem: float rotatePerSecond()
org.cocos2d.particlesystem.CCParticleSystem: void setRotatePerSecondVar(float)
org.cocos2d.particlesystem.CCParticleSystem: float rotatePerSecondVar()
org.cocos2d.particlesystem.CCParticleSystem: float getDuration()
org.cocos2d.particlesystem.CCParticleSystem: void setDuration(float)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getSource()
org.cocos2d.particlesystem.CCParticleSystem: void setSource(org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.types.CGPoint getPosVar()
org.cocos2d.particlesystem.CCParticleSystem: float getLife()
org.cocos2d.particlesystem.CCParticleSystem: void setLife(float)
org.cocos2d.particlesystem.CCParticleSystem: int getPositionType()
org.cocos2d.particlesystem.CCParticleSystem: void setPositionType(int)
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.particlesystem.CCParticleSystem: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.particlesystem.CCParticleSystem: CCParticleSystem(int)
org.cocos2d.particlesystem.CCParticleSystem: void initParticle(org.cocos2d.particlesystem.CCParticleSystem$CCParticle)
org.cocos2d.particlesystem.CCParticleSystem: void stopSystem()
org.cocos2d.particlesystem.CCParticleSystem: void resetSystem()
org.cocos2d.particlesystem.CCParticleSystem: org.cocos2d.particlesystem.CCParticleSystem particleWithFile(java.lang.String)
org.cocos2d.particlesystem.CCParticleSystem: CCParticleSystem(java.lang.String)
org.cocos2d.particlesystem.CCParticleSystem: CCParticleSystem(java.util.HashMap)
org.cocos2d.particlesystem.CCParticleSystem: boolean addParticle()
org.cocos2d.particlesystem.CCParticleSystem: void update(float)
org.cocos2d.particlesystem.CCParticleSystem: void updateQuad(org.cocos2d.particlesystem.CCParticleSystem$CCParticle,org.cocos2d.types.CGPoint)
org.cocos2d.particlesystem.CCParticleSystem: void postStep()
org.cocos2d.particlesystem.CCParticleSystem: void setBlendAdditive(boolean)
org.cocos2d.particlesystem.CCParticleSystem: boolean getBlendAdditive()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.opengl.CCBitmapFontAtlas$tKerningHashElement
org.cocos2d.opengl.CCBitmapFontAtlas$tKerningHashElement: int key
org.cocos2d.opengl.CCBitmapFontAtlas$tKerningHashElement: int amount
org.cocos2d.opengl.CCBitmapFontAtlas$tKerningHashElement: CCBitmapFontAtlas$tKerningHashElement()
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: javax.microedition.khronos.opengles.GL10 gl
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: GLDebugWrapper$MyGLImplementation(javax.microedition.khronos.opengles.GL10)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glActiveTexture(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glAlphaFunc(int,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glAlphaFuncx(int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glBindTexture(int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glBlendFunc(int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glClear(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glClearColor(float,float,float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glClearColorx(int,int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glClearDepthf(float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glClearDepthx(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glClearStencil(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glClientActiveTexture(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glColor4f(float,float,float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glColor4x(int,int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glColorMask(boolean,boolean,boolean,boolean)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glColorPointer(int,int,int,java.nio.Buffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glCopyTexImage2D(int,int,int,int,int,int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glCullFace(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glDeleteTextures(int,int[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glDeleteTextures(int,java.nio.IntBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glDepthFunc(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glDepthMask(boolean)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glDepthRangef(float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glDepthRangex(int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glDisable(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glDisableClientState(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glDrawArrays(int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glDrawElements(int,int,int,java.nio.Buffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glEnable(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glEnableClientState(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFinish()
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFlush()
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFogf(int,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFogfv(int,java.nio.FloatBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFogfv(int,float[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFogx(int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFogxv(int,int[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFogxv(int,java.nio.IntBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFrontFace(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFrustumf(float,float,float,float,float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glFrustumx(int,int,int,int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glGenTextures(int,java.nio.IntBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glGenTextures(int,int[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: int glGetError()
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glGetIntegerv(int,int[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glGetIntegerv(int,java.nio.IntBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String glGetString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glHint(int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightModelf(int,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightModelfv(int,java.nio.FloatBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightModelfv(int,float[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightModelx(int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightModelxv(int,java.nio.IntBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightModelxv(int,int[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightf(int,int,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightfv(int,int,java.nio.FloatBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightfv(int,int,float[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightx(int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightxv(int,int,int[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLightxv(int,int,java.nio.IntBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLineWidth(float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLineWidthx(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLoadIdentity()
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLoadMatrixf(float[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLoadMatrixf(java.nio.FloatBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLoadMatrixx(int[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLoadMatrixx(java.nio.IntBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glLogicOp(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMaterialf(int,int,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMaterialfv(int,int,float[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMaterialfv(int,int,java.nio.FloatBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMaterialx(int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMaterialxv(int,int,int[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMaterialxv(int,int,java.nio.IntBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMatrixMode(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMultMatrixf(java.nio.FloatBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMultMatrixf(float[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMultMatrixx(int[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMultMatrixx(java.nio.IntBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMultiTexCoord4f(int,float,float,float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glMultiTexCoord4x(int,int,int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glNormal3f(float,float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glNormal3x(int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glNormalPointer(int,int,java.nio.Buffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glOrthof(float,float,float,float,float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glOrthox(int,int,int,int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glPixelStorei(int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glPointSize(float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glPointSizex(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glPolygonOffset(float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glPolygonOffsetx(int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glPopMatrix()
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glPushMatrix()
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glRotatef(float,float,float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glRotatex(int,int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glSampleCoverage(float,boolean)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glSampleCoveragex(int,boolean)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glScalef(float,float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glScalex(int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glScissor(int,int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glShadeModel(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glStencilFunc(int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glStencilMask(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glStencilOp(int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexCoordPointer(int,int,int,java.nio.Buffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexEnvf(int,int,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexEnvfv(int,int,float[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexEnvfv(int,int,java.nio.FloatBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexEnvx(int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexEnvxv(int,int,int[],int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexEnvxv(int,int,java.nio.IntBuffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexParameterf(int,int,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexParameterx(int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTranslatef(float,float,float)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glTranslatex(int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glVertexPointer(int,int,int,java.nio.Buffer)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: void glViewport(int,int,int,int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTexCoordPointerTypeString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getShadeModelString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getBlendFuncSFactorString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getBlendFuncDFactorString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getVertexPointerTypeString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTexParameterTargetString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTexParameterNameString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTexParameterParamString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTexEnvTargetString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTextEnvNameString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTexEnvParam(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getHintTargetString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getHintModeString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getMatrixModeString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getCullFaceModeString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getClientStateArrayString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getDrawArraysModeString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getColorPointerTypeString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getBooleanString(boolean)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getClearMaskString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTextEnvTargetString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getEnableDisableCapString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTexImage2DTargetString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTexImage2DInternalFormatString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getTexImage2DFormatString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getBindTextureTargetString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.String getLogicOpOpcodeString(int)
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation: java.lang.StringBuilder appendWithPrefix(java.lang.StringBuilder,java.lang.String)
org.cocos2d.tests.ParticleTest$ParticleDemo
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.ParticleTest$ParticleDemo: int kTagLabelAtlas
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.particlesystem.CCParticleSystem emitter
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.nodes.CCSprite background
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.utils.javolution.TextBuilder particleCountString
org.cocos2d.tests.ParticleTest$ParticleDemo: ParticleTest$ParticleDemo()
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.ParticleTest$ParticleDemo: org.cocos2d.utils.javolution.TextBuilder getParticleCountString(int)
org.cocos2d.tests.ParticleTest$ParticleDemo: void update(float)
org.cocos2d.tests.ParticleTest$ParticleDemo: void toggleCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void setEmitterPosition()
org.cocos2d.tests.ParticleTest$ParticleDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.ParticleTest$ParticleDemo: java.lang.String title()
org.cocos2d.tests.ParticleTest$ParticleDemo: java.lang.String subtitle()
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccColor3B color_
org.cocos2d.layers.CCColorLayer: int opacity_
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.layers.CCColorLayer: org.cocos2d.utils.FastFloatBuffer squareVertices_
org.cocos2d.layers.CCColorLayer: org.cocos2d.utils.FastFloatBuffer squareColors_
org.cocos2d.layers.CCColorLayer: org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B)
org.cocos2d.layers.CCColorLayer: org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: CCColorLayer(org.cocos2d.types.ccColor4B)
org.cocos2d.layers.CCColorLayer: CCColorLayer(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: void init(org.cocos2d.types.ccColor4B,float,float)
org.cocos2d.layers.CCColorLayer: void updateColor()
org.cocos2d.layers.CCColorLayer: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.layers.CCColorLayer: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.layers.CCColorLayer: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.layers.CCColorLayer: void setOpacity(int)
org.cocos2d.layers.CCColorLayer: int getOpacity()
org.cocos2d.layers.CCColorLayer: float getWidth()
org.cocos2d.layers.CCColorLayer: float getHeight()
org.cocos2d.layers.CCColorLayer: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.layers.CCColorLayer: void changeWidthAndHeight(float,float)
org.cocos2d.layers.CCColorLayer: void changeWidth(float)
org.cocos2d.layers.CCColorLayer: void changeHeight(float)
org.cocos2d.layers.CCColorLayer: boolean doesOpacityModifyRGB()
org.cocos2d.layers.CCColorLayer: void setOpacityModifyRGB(boolean)
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCReverseTime
org.cocos2d.actions.interval.CCReverseTime: org.cocos2d.actions.base.CCFiniteTimeAction other
org.cocos2d.actions.interval.CCReverseTime: org.cocos2d.actions.interval.CCReverseTime action(org.cocos2d.actions.base.CCFiniteTimeAction)
org.cocos2d.actions.interval.CCReverseTime: CCReverseTime(org.cocos2d.actions.base.CCFiniteTimeAction)
org.cocos2d.actions.interval.CCReverseTime: org.cocos2d.actions.interval.CCReverseTime copy()
org.cocos2d.actions.interval.CCReverseTime: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCReverseTime: void stop()
org.cocos2d.actions.interval.CCReverseTime: void update(float)
org.cocos2d.actions.interval.CCReverseTime: org.cocos2d.actions.interval.CCReverseTime reverse()
org.cocos2d.actions.interval.CCReverseTime: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCReverseTime: java.lang.Object copy()
org.cocos2d.actions.interval.CCReverseTime: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.menus.CCMenuItemFont
org.cocos2d.menus.CCMenuItemFont: int _fontSize
org.cocos2d.menus.CCMenuItemFont: java.lang.String _fontName
org.cocos2d.menus.CCMenuItemFont: void <clinit>()
org.cocos2d.menus.CCMenuItemFont: void setFontSize(int)
org.cocos2d.menus.CCMenuItemFont: int fontSize()
org.cocos2d.menus.CCMenuItemFont: void setFontName(java.lang.String)
org.cocos2d.menus.CCMenuItemFont: java.lang.String fontName()
org.cocos2d.menus.CCMenuItemFont: org.cocos2d.menus.CCMenuItemFont item(java.lang.String)
org.cocos2d.menus.CCMenuItemFont: org.cocos2d.menus.CCMenuItemFont item(java.lang.String,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemFont: CCMenuItemFont(org.cocos2d.nodes.CCLabel,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemFont: org.cocos2d.menus.CCMenuItemLabel item(java.lang.String,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.protocols.CCLabelProtocol label_
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B colorBackup
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B disabledColor_
org.cocos2d.menus.CCMenuItemLabel: float originalScale_
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.menus.CCMenuItemLabel item(org.cocos2d.protocols.CCLabelProtocol,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.menus.CCMenuItemLabel item(java.lang.String,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: CCMenuItemLabel(org.cocos2d.protocols.CCLabelProtocol,org.cocos2d.nodes.CCNode,java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: void setOpacity(int)
org.cocos2d.menus.CCMenuItemLabel: int getOpacity()
org.cocos2d.menus.CCMenuItemLabel: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.types.ccColor3B getDisabledColor()
org.cocos2d.menus.CCMenuItemLabel: void setDisabledColor(org.cocos2d.types.ccColor3B)
org.cocos2d.menus.CCMenuItemLabel: org.cocos2d.protocols.CCLabelProtocol getLabel()
org.cocos2d.menus.CCMenuItemLabel: void setLabel(org.cocos2d.protocols.CCLabelProtocol)
org.cocos2d.menus.CCMenuItemLabel: void setString(java.lang.String)
org.cocos2d.menus.CCMenuItemLabel: void activate()
org.cocos2d.menus.CCMenuItemLabel: void selected()
org.cocos2d.menus.CCMenuItemLabel: void unselected()
org.cocos2d.menus.CCMenuItemLabel: void setIsEnabled(boolean)
org.cocos2d.menus.CCMenuItemLabel: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.menus.CCMenuItemLabel: boolean doesOpacityModifyRGB()
org.cocos2d.menus.CCMenuItemLabel: void setOpacityModifyRGB(boolean)
org.cocos2d.menus.CCMenuItem: int kItemSize
org.cocos2d.menus.CCMenuItem: int _fontSize
org.cocos2d.menus.CCMenuItem: java.lang.String fontName
org.cocos2d.menus.CCMenuItem: int kCurrentItem
org.cocos2d.menus.CCMenuItem: int kZoomActionTag
org.cocos2d.menus.CCMenuItem: boolean isEnabled_
org.cocos2d.menus.CCMenuItem: boolean isSelected_
org.cocos2d.menus.CCMenuItem: java.lang.Object targetCallback
org.cocos2d.menus.CCMenuItem: java.lang.String selector
org.cocos2d.menus.CCMenuItem: java.lang.reflect.Method invocation
org.cocos2d.menus.CCMenuItem: void <clinit>()
org.cocos2d.menus.CCMenuItem: org.cocos2d.menus.CCMenuItem item(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: CCMenuItem(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: void activate()
org.cocos2d.menus.CCMenuItem: void selected()
org.cocos2d.menus.CCMenuItem: void unselected()
org.cocos2d.menus.CCMenuItem: void setIsEnabled(boolean)
org.cocos2d.menus.CCMenuItem: boolean isEnabled()
org.cocos2d.menus.CCMenuItem: org.cocos2d.types.CGRect rect()
org.cocos2d.menus.CCMenuItem: void rect(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.ccPointSprite
org.cocos2d.types.ccPointSprite: float x
org.cocos2d.types.ccPointSprite: float y
org.cocos2d.types.ccPointSprite: org.cocos2d.types.ccColor4F colors
org.cocos2d.types.ccPointSprite: int spriteSize
org.cocos2d.types.ccPointSprite: ccPointSprite()
org.cocos2d.tests.AtlasTest$LabelAtlasTest$1
org.cocos2d.tests.AtlasTest$LabelAtlasTest$1: org.cocos2d.tests.AtlasTest$LabelAtlasTest this$1
org.cocos2d.tests.AtlasTest$LabelAtlasTest$1: AtlasTest$LabelAtlasTest$1(org.cocos2d.tests.AtlasTest$LabelAtlasTest)
org.cocos2d.tests.AtlasTest$LabelAtlasTest$1: void update(float)
org.cocos2d.actions.tile.CCJumpTiles3D
org.cocos2d.actions.tile.CCJumpTiles3D: int jumps
org.cocos2d.actions.tile.CCJumpTiles3D: float amplitude
org.cocos2d.actions.tile.CCJumpTiles3D: float amplitudeRate
org.cocos2d.actions.tile.CCJumpTiles3D: org.cocos2d.actions.tile.CCJumpTiles3D action(int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCJumpTiles3D: CCJumpTiles3D(int,float,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCJumpTiles3D: org.cocos2d.actions.tile.CCJumpTiles3D copy()
org.cocos2d.actions.tile.CCJumpTiles3D: void update(float)
org.cocos2d.actions.tile.CCJumpTiles3D: java.lang.Object copy()
org.cocos2d.actions.tile.CCJumpTiles3D: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: CCTiledGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.nodes.CCLabel$StringReloader
org.cocos2d.nodes.CCLabel$StringReloader: java.lang.ref.WeakReference label
org.cocos2d.nodes.CCLabel$StringReloader: CCLabel$StringReloader(org.cocos2d.nodes.CCLabel)
org.cocos2d.nodes.CCLabel$StringReloader: void load(org.cocos2d.opengl.GLResourceHelper$Resource)
org.cocos2d.nodes.CCParallaxNode$CCPointObject
org.cocos2d.nodes.CCParallaxNode$CCPointObject: float ratioX_
org.cocos2d.nodes.CCParallaxNode$CCPointObject: float ratioY_
org.cocos2d.nodes.CCParallaxNode$CCPointObject: float offsetX_
org.cocos2d.nodes.CCParallaxNode$CCPointObject: float offsetY_
org.cocos2d.nodes.CCParallaxNode$CCPointObject: org.cocos2d.nodes.CCNode child_
org.cocos2d.nodes.CCParallaxNode$CCPointObject: CCParallaxNode$CCPointObject(float,float,float,float)
org.cocos2d.nodes.CCParallaxNode$CCPointObject: org.cocos2d.nodes.CCNode getChild()
org.cocos2d.nodes.CCParallaxNode$CCPointObject: void setChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCParallaxNode$CCPointObject: float getRatioX()
org.cocos2d.nodes.CCParallaxNode$CCPointObject: float getRatioY()
org.cocos2d.nodes.CCParallaxNode$CCPointObject: float getOffsetX()
org.cocos2d.nodes.CCParallaxNode$CCPointObject: float getOffsetY()
org.cocos2d.actions.interval.CCRotateBy
org.cocos2d.actions.interval.CCRotateBy: float angle
org.cocos2d.actions.interval.CCRotateBy: float startAngle
org.cocos2d.actions.interval.CCRotateBy: org.cocos2d.actions.interval.CCRotateBy action(float,float)
org.cocos2d.actions.interval.CCRotateBy: CCRotateBy(float,float)
org.cocos2d.actions.interval.CCRotateBy: org.cocos2d.actions.interval.CCRotateBy copy()
org.cocos2d.actions.interval.CCRotateBy: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCRotateBy: void update(float)
org.cocos2d.actions.interval.CCRotateBy: org.cocos2d.actions.interval.CCRotateBy reverse()
org.cocos2d.actions.interval.CCRotateBy: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCRotateBy: java.lang.Object copy()
org.cocos2d.actions.interval.CCRotateBy: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.types.CGRect
org.cocos2d.types.CGRect: org.cocos2d.types.CGPoint origin
org.cocos2d.types.CGRect: org.cocos2d.types.CGSize size
org.cocos2d.types.CGRect: org.cocos2d.types.CGRect ZERO_RECT
org.cocos2d.types.CGRect: org.cocos2d.types.CGRect sRect
org.cocos2d.types.CGRect: org.cocos2d.types.CGRect rRect
org.cocos2d.types.CGRect: int[] $SWITCH_TABLE$org$cocos2d$types$CGRect$Edge
org.cocos2d.types.CGRect: void <clinit>()
org.cocos2d.types.CGRect: CGRect()
org.cocos2d.types.CGRect: CGRect(org.cocos2d.types.CGPoint,org.cocos2d.types.CGSize)
org.cocos2d.types.CGRect: org.cocos2d.types.CGRect getZero()
org.cocos2d.types.CGRect: org.cocos2d.types.CGRect zero()
org.cocos2d.types.CGRect: org.cocos2d.types.CGRect make(org.cocos2d.types.CGPoint,org.cocos2d.types.CGSize)
org.cocos2d.types.CGRect: org.cocos2d.types.CGRect make(float,float,float,float)
org.cocos2d.types.CGRect: org.cocos2d.types.CGRect make(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: CGRect(float,float,float,float)
org.cocos2d.types.CGRect: void set(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: void set(float,float,float,float)
org.cocos2d.types.CGRect: boolean contains(float,float)
org.cocos2d.types.CGRect: java.lang.String toString()
org.cocos2d.types.CGRect: boolean equalToRect(org.cocos2d.types.CGRect,org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: boolean containsPoint(org.cocos2d.types.CGRect,org.cocos2d.types.CGPoint)
org.cocos2d.types.CGRect: boolean containsRect(org.cocos2d.types.CGRect,org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: boolean intersects(org.cocos2d.types.CGRect,org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: org.cocos2d.types.CGRect applyAffineTransform(org.cocos2d.types.CGRect,org.cocos2d.types.CGAffineTransform)
org.cocos2d.types.CGRect: float maxX(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: float maxY(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: float midX(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: float midY(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: float minX(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: float minY(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: float width(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: float height(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: boolean isEmptyRect(org.cocos2d.types.CGRect)
org.cocos2d.types.CGRect: void divideRect(org.cocos2d.types.CGRect,org.cocos2d.types.CGRect[],org.cocos2d.types.CGRect[],float,org.cocos2d.types.CGRect$Edge)
org.cocos2d.types.CGRect: int[] $SWITCH_TABLE$org$cocos2d$types$CGRect$Edge()
org.cocos2d.layers.CCTMXMapInfo
org.cocos2d.layers.CCTMXMapInfo: java.lang.String LOG_TAG
org.cocos2d.layers.CCTMXMapInfo: int TMXLayerAttribNone
org.cocos2d.layers.CCTMXMapInfo: int TMXLayerAttribBase64
org.cocos2d.layers.CCTMXMapInfo: int TMXLayerAttribGzip
org.cocos2d.layers.CCTMXMapInfo: int TMXPropertyNone
org.cocos2d.layers.CCTMXMapInfo: int TMXPropertyMap
org.cocos2d.layers.CCTMXMapInfo: int TMXPropertyLayer
org.cocos2d.layers.CCTMXMapInfo: int TMXPropertyObjectGroup
org.cocos2d.layers.CCTMXMapInfo: int TMXPropertyObject
org.cocos2d.layers.CCTMXMapInfo: int TMXPropertyTile
org.cocos2d.layers.CCTMXMapInfo: java.lang.StringBuilder currentString
org.cocos2d.layers.CCTMXMapInfo: boolean storingCharacters
org.cocos2d.layers.CCTMXMapInfo: int layerAttribs
org.cocos2d.layers.CCTMXMapInfo: int parentElement
org.cocos2d.layers.CCTMXMapInfo: int parentGID
org.cocos2d.layers.CCTMXMapInfo: java.lang.String filename
org.cocos2d.layers.CCTMXMapInfo: int orientation
org.cocos2d.layers.CCTMXMapInfo: org.cocos2d.types.CGSize mapSize
org.cocos2d.layers.CCTMXMapInfo: org.cocos2d.types.CGSize tileSize
org.cocos2d.layers.CCTMXMapInfo: java.util.ArrayList layers
org.cocos2d.layers.CCTMXMapInfo: java.util.ArrayList tilesets
org.cocos2d.layers.CCTMXMapInfo: java.util.ArrayList objectGroups
org.cocos2d.layers.CCTMXMapInfo: java.util.HashMap properties
org.cocos2d.layers.CCTMXMapInfo: java.util.HashMap tileProperties
org.cocos2d.layers.CCTMXMapInfo: void <clinit>()
org.cocos2d.layers.CCTMXMapInfo: org.cocos2d.layers.CCTMXMapInfo formatWithTMXFile(java.lang.String)
org.cocos2d.layers.CCTMXMapInfo: CCTMXMapInfo(java.lang.String)
org.cocos2d.layers.CCTMXMapInfo: void parseXMLFile(java.lang.String)
org.cocos2d.layers.CCTMXMapInfo: void access$0(org.cocos2d.layers.CCTMXMapInfo,java.lang.String)
org.cocos2d.Cocos2D
org.cocos2d.Cocos2D: java.util.Comparator sDisplayNameComparator
org.cocos2d.Cocos2D: void <clinit>()
org.cocos2d.Cocos2D: Cocos2D()
org.cocos2d.Cocos2D: void onCreate(android.os.Bundle)
org.cocos2d.Cocos2D: java.util.List getData(java.lang.String)
org.cocos2d.Cocos2D: android.content.Intent activityIntent(java.lang.String,java.lang.String)
org.cocos2d.Cocos2D: android.content.Intent browserIntent(java.lang.String)
org.cocos2d.Cocos2D: void addItem(java.util.List,java.lang.String,android.content.Intent)
org.cocos2d.Cocos2D: void onListItemClick(android.widget.ListView,android.view.View,int,long)
org.cocos2d.actions.interval.CCScaleTo
org.cocos2d.actions.interval.CCScaleTo: float scaleX
org.cocos2d.actions.interval.CCScaleTo: float scaleY
org.cocos2d.actions.interval.CCScaleTo: float startScaleX
org.cocos2d.actions.interval.CCScaleTo: float startScaleY
org.cocos2d.actions.interval.CCScaleTo: float endScaleX
org.cocos2d.actions.interval.CCScaleTo: float endScaleY
org.cocos2d.actions.interval.CCScaleTo: float deltaX
org.cocos2d.actions.interval.CCScaleTo: float deltaY
org.cocos2d.actions.interval.CCScaleTo: org.cocos2d.actions.interval.CCScaleTo action(float,float)
org.cocos2d.actions.interval.CCScaleTo: org.cocos2d.actions.interval.CCScaleTo action(float,float,float)
org.cocos2d.actions.interval.CCScaleTo: CCScaleTo(float,float)
org.cocos2d.actions.interval.CCScaleTo: CCScaleTo(float,float,float)
org.cocos2d.actions.interval.CCScaleTo: org.cocos2d.actions.interval.CCScaleTo copy()
org.cocos2d.actions.interval.CCScaleTo: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCScaleTo: void update(float)
org.cocos2d.actions.interval.CCScaleTo: java.lang.Object copy()
org.cocos2d.actions.interval.CCScaleTo: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCFlipX3D
org.cocos2d.actions.grid.CCFlipX3D: boolean $assertionsDisabled
org.cocos2d.actions.grid.CCFlipX3D: void <clinit>()
org.cocos2d.actions.grid.CCFlipX3D: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.grid.CCFlipX3D: CCFlipX3D(float)
org.cocos2d.actions.grid.CCFlipX3D: CCFlipX3D(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCFlipX3D: org.cocos2d.actions.grid.CCFlipX3D copy()
org.cocos2d.actions.grid.CCFlipX3D: void update(float)
org.cocos2d.actions.grid.CCFlipX3D: java.lang.Object copy()
org.cocos2d.actions.grid.CCFlipX3D: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: CCGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.opengl.GLResourceHelper
org.cocos2d.opengl.GLResourceHelper: org.cocos2d.opengl.GLResourceHelper _sharedResourceHelper
org.cocos2d.opengl.GLResourceHelper: java.util.concurrent.ConcurrentLinkedQueue taskQueue
org.cocos2d.opengl.GLResourceHelper: java.util.Map reloadMap
org.cocos2d.opengl.GLResourceHelper: boolean reloadTaskIsInQueue
org.cocos2d.opengl.GLResourceHelper: boolean inUpdate
org.cocos2d.opengl.GLResourceHelper: void <clinit>()
org.cocos2d.opengl.GLResourceHelper: org.cocos2d.opengl.GLResourceHelper sharedHelper()
org.cocos2d.opengl.GLResourceHelper: GLResourceHelper()
org.cocos2d.opengl.GLResourceHelper: void addLoader(org.cocos2d.opengl.GLResourceHelper$Resource,org.cocos2d.opengl.GLResourceHelper$GLResourceLoader,boolean)
org.cocos2d.opengl.GLResourceHelper: void reloadResources()
org.cocos2d.opengl.GLResourceHelper: void perform(org.cocos2d.opengl.GLResourceHelper$GLResorceTask)
org.cocos2d.opengl.GLResourceHelper: void update(javax.microedition.khronos.opengles.GL10)
org.cocos2d.opengl.GLResourceHelper: void setInUpdate(boolean)
org.cocos2d.opengl.GLResourceHelper: java.util.Map access$0(org.cocos2d.opengl.GLResourceHelper)
org.cocos2d.opengl.GLResourceHelper: void access$1(org.cocos2d.opengl.GLResourceHelper,boolean)
org.cocos2d.tests.RotateWorldTest
org.cocos2d.tests.RotateWorldTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.RotateWorldTest: RotateWorldTest()
org.cocos2d.tests.RotateWorldTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.RotateWorldTest: void onStart()
org.cocos2d.tests.RotateWorldTest: void onPause()
org.cocos2d.tests.RotateWorldTest: void onResume()
org.cocos2d.tests.RotateWorldTest: void onDestroy()
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: int[] mConfigSpec
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: org.cocos2d.opengl.GLSurfaceView this$0
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: GLSurfaceView$BaseConfigChooser(org.cocos2d.opengl.GLSurfaceView,int[])
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser: int[] filterConfigSpec(int[])
org.cocos2d.tests.ActionsTest$ActionDemo
org.cocos2d.tests.ActionsTest$ActionDemo: org.cocos2d.nodes.CCSprite grossini
org.cocos2d.tests.ActionsTest$ActionDemo: org.cocos2d.nodes.CCSprite tamara
org.cocos2d.tests.ActionsTest$ActionDemo: org.cocos2d.nodes.CCSprite kathia
org.cocos2d.tests.ActionsTest$ActionDemo: ActionsTest$ActionDemo()
org.cocos2d.tests.ActionsTest$ActionDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.ActionsTest$ActionDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.ActionsTest$ActionDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.ActionsTest$ActionDemo: void alignSpritesLeft(int)
org.cocos2d.tests.ActionsTest$ActionDemo: void centerSprites(int)
org.cocos2d.tests.ActionsTest$ActionDemo: java.lang.String title()
org.cocos2d.tests.ActionsTest$ActionDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.tile.CCSplitRows
org.cocos2d.actions.tile.CCSplitRows: int rows
org.cocos2d.actions.tile.CCSplitRows: org.cocos2d.types.CGSize winSize
org.cocos2d.actions.tile.CCSplitRows: org.cocos2d.actions.tile.CCSplitRows action(int,float)
org.cocos2d.actions.tile.CCSplitRows: CCSplitRows(int,float)
org.cocos2d.actions.tile.CCSplitRows: org.cocos2d.actions.tile.CCSplitRows copy()
org.cocos2d.actions.tile.CCSplitRows: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.tile.CCSplitRows: void update(float)
org.cocos2d.actions.tile.CCSplitRows: java.lang.Object copy()
org.cocos2d.actions.tile.CCSplitRows: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: CCTiledGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.layers.CCTMXObjectGroup
org.cocos2d.layers.CCTMXObjectGroup: java.lang.String groupName
org.cocos2d.layers.CCTMXObjectGroup: org.cocos2d.types.CGPoint positionOffset
org.cocos2d.layers.CCTMXObjectGroup: java.util.ArrayList objects
org.cocos2d.layers.CCTMXObjectGroup: java.util.HashMap properties
org.cocos2d.layers.CCTMXObjectGroup: java.lang.Object propertyNamed(java.lang.String)
org.cocos2d.layers.CCTMXObjectGroup: java.util.HashMap objectNamed(java.lang.String)
org.cocos2d.layers.CCTMXObjectGroup: CCTMXObjectGroup()
org.cocos2d.actions.tile.CCShuffleTiles
org.cocos2d.actions.tile.CCShuffleTiles: java.util.Random rand
org.cocos2d.actions.tile.CCShuffleTiles: int seed
org.cocos2d.actions.tile.CCShuffleTiles: int tilesCount
org.cocos2d.actions.tile.CCShuffleTiles: int[] tilesOrder
org.cocos2d.actions.tile.CCShuffleTiles: org.cocos2d.actions.tile.Tile[] tiles
org.cocos2d.actions.tile.CCShuffleTiles: org.cocos2d.actions.tile.CCShuffleTiles action(int,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCShuffleTiles: CCShuffleTiles(int,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCShuffleTiles: org.cocos2d.actions.tile.CCShuffleTiles copy()
org.cocos2d.actions.tile.CCShuffleTiles: void shuffle(int[],int)
org.cocos2d.actions.tile.CCShuffleTiles: org.cocos2d.types.ccGridSize getDelta(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCShuffleTiles: void placeTile(org.cocos2d.types.ccGridSize,org.cocos2d.actions.tile.Tile)
org.cocos2d.actions.tile.CCShuffleTiles: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.tile.CCShuffleTiles: void update(float)
org.cocos2d.actions.tile.CCShuffleTiles: java.lang.Object copy()
org.cocos2d.actions.tile.CCShuffleTiles: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: CCTiledGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFollow
org.cocos2d.actions.base.CCFollow: org.cocos2d.nodes.CCNode followedNode_
org.cocos2d.actions.base.CCFollow: boolean boundarySet
org.cocos2d.actions.base.CCFollow: boolean boundaryFullyCovered
org.cocos2d.actions.base.CCFollow: org.cocos2d.types.CGPoint halfScreenSize
org.cocos2d.actions.base.CCFollow: org.cocos2d.types.CGPoint fullScreenSize
org.cocos2d.actions.base.CCFollow: float leftBoundary
org.cocos2d.actions.base.CCFollow: float rightBoundary
org.cocos2d.actions.base.CCFollow: float topBoundary
org.cocos2d.actions.base.CCFollow: float bottomBoundary
org.cocos2d.actions.base.CCFollow: void setBoundarySet(boolean)
org.cocos2d.actions.base.CCFollow: boolean getBoundarySet()
org.cocos2d.actions.base.CCFollow: org.cocos2d.actions.base.CCFollow action(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCFollow: org.cocos2d.actions.base.CCFollow action(org.cocos2d.nodes.CCNode,org.cocos2d.types.CGRect)
org.cocos2d.actions.base.CCFollow: CCFollow(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCFollow: CCFollow(org.cocos2d.nodes.CCNode,org.cocos2d.types.CGRect)
org.cocos2d.actions.base.CCFollow: org.cocos2d.actions.base.CCFollow copy()
org.cocos2d.actions.base.CCFollow: boolean isDone()
org.cocos2d.actions.base.CCFollow: void stop()
org.cocos2d.actions.base.CCFollow: float CLAMP(float,float,float)
org.cocos2d.actions.base.CCFollow: void step(float)
org.cocos2d.actions.base.CCFollow: void update(float)
org.cocos2d.actions.base.CCFollow: java.lang.Object copy()
org.cocos2d.actions.base.CCFollow: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCWaves
org.cocos2d.actions.grid.CCWaves: int waves
org.cocos2d.actions.grid.CCWaves: float amplitude
org.cocos2d.actions.grid.CCWaves: float amplitudeRate
org.cocos2d.actions.grid.CCWaves: boolean vertical
org.cocos2d.actions.grid.CCWaves: boolean horizontal
org.cocos2d.actions.grid.CCWaves: org.cocos2d.actions.grid.CCWaves action(int,float,boolean,boolean,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCWaves: CCWaves(int,float,boolean,boolean,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCWaves: void update(float)
org.cocos2d.actions.grid.CCWaves: org.cocos2d.actions.grid.CCWaves copy()
org.cocos2d.actions.grid.CCWaves: java.lang.Object copy()
org.cocos2d.actions.grid.CCWaves: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: CCGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGrid3DAction: void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D)
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGrid3DAction copy()
org.cocos2d.actions.grid.CCGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.opengl.TGA$TGAError
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError TGA_OK
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError TGA_ERROR_FILE_OPEN
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError TGA_ERROR_READING_FILE
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError TGA_ERROR_INDEXED_COLOR
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError TGA_ERROR_MEMORY
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError TGA_ERROR_COMPRESSED_FILE
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError[] ENUM$VALUES
org.cocos2d.opengl.TGA$TGAError: void <clinit>()
org.cocos2d.opengl.TGA$TGAError: TGA$TGAError(java.lang.String,int)
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError[] values()
org.cocos2d.opengl.TGA$TGAError: org.cocos2d.opengl.TGA$TGAError valueOf(java.lang.String)
org.cocos2d.opengl.CCGLSurfaceView
org.cocos2d.opengl.CCGLSurfaceView: int VIEWID
org.cocos2d.opengl.CCGLSurfaceView: org.cocos2d.events.CCTouchDispatcher mDispatcher
org.cocos2d.opengl.CCGLSurfaceView: org.cocos2d.types.CGSize frame
org.cocos2d.opengl.CCGLSurfaceView: CCGLSurfaceView(android.content.Context)
org.cocos2d.opengl.CCGLSurfaceView: void onLayout(boolean,int,int,int,int)
org.cocos2d.opengl.CCGLSurfaceView: boolean onTouchEvent(android.view.MotionEvent)
org.cocos2d.opengl.GLSurfaceView: boolean LOG_THREADS
org.cocos2d.opengl.GLSurfaceView: boolean LOG_SURFACE
org.cocos2d.opengl.GLSurfaceView: boolean LOG_RENDERER
org.cocos2d.opengl.GLSurfaceView: boolean DRAW_TWICE_AFTER_SIZE_CHANGED
org.cocos2d.opengl.GLSurfaceView: int RENDERMODE_WHEN_DIRTY
org.cocos2d.opengl.GLSurfaceView: int RENDERMODE_CONTINUOUSLY
org.cocos2d.opengl.GLSurfaceView: int DEBUG_CHECK_GL_ERROR
org.cocos2d.opengl.GLSurfaceView: int DEBUG_LOG_GL_CALLS
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$GLThreadManager sGLThreadManager
org.cocos2d.opengl.GLSurfaceView: boolean mSizeChanged
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$GLThread mGLThread
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLContextFactory mEGLContextFactory
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$GLWrapper mGLWrapper
org.cocos2d.opengl.GLSurfaceView: int mDebugFlags
org.cocos2d.opengl.GLSurfaceView: int mEGLContextClientVersion
org.cocos2d.opengl.GLSurfaceView: void <clinit>()
org.cocos2d.opengl.GLSurfaceView: GLSurfaceView(android.content.Context)
org.cocos2d.opengl.GLSurfaceView: GLSurfaceView(android.content.Context,android.util.AttributeSet)
org.cocos2d.opengl.GLSurfaceView: void init()
org.cocos2d.opengl.GLSurfaceView: void setGLWrapper(org.cocos2d.opengl.GLSurfaceView$GLWrapper)
org.cocos2d.opengl.GLSurfaceView: void setDebugFlags(int)
org.cocos2d.opengl.GLSurfaceView: int getDebugFlags()
org.cocos2d.opengl.GLSurfaceView: void setRenderer(org.cocos2d.opengl.GLSurfaceView$Renderer)
org.cocos2d.opengl.GLSurfaceView: void setEGLContextFactory(org.cocos2d.opengl.GLSurfaceView$EGLContextFactory)
org.cocos2d.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(org.cocos2d.opengl.GLSurfaceView$EGLWindowSurfaceFactory)
org.cocos2d.opengl.GLSurfaceView: void setEGLConfigChooser(org.cocos2d.opengl.GLSurfaceView$EGLConfigChooser)
org.cocos2d.opengl.GLSurfaceView: void setEGLConfigChooser(boolean)
org.cocos2d.opengl.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)
org.cocos2d.opengl.GLSurfaceView: void setEGLContextClientVersion(int)
org.cocos2d.opengl.GLSurfaceView: void setRenderMode(int)
org.cocos2d.opengl.GLSurfaceView: int getRenderMode()
org.cocos2d.opengl.GLSurfaceView: void requestRender()
org.cocos2d.opengl.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)
org.cocos2d.opengl.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)
org.cocos2d.opengl.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
org.cocos2d.opengl.GLSurfaceView: void onPause()
org.cocos2d.opengl.GLSurfaceView: void onResume()
org.cocos2d.opengl.GLSurfaceView: void setSafeMode(boolean)
org.cocos2d.opengl.GLSurfaceView: void queueEvent(java.lang.Runnable)
org.cocos2d.opengl.GLSurfaceView: void onWindowFocusChanged(boolean)
org.cocos2d.opengl.GLSurfaceView: void onDetachedFromWindow()
org.cocos2d.opengl.GLSurfaceView: void checkRenderThreadState()
org.cocos2d.opengl.GLSurfaceView: int access$0(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLConfigChooser access$1(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLContextFactory access$2(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$EGLWindowSurfaceFactory access$3(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$GLWrapper access$4(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: int access$5(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: org.cocos2d.opengl.GLSurfaceView$GLThreadManager access$6()
org.cocos2d.opengl.GLSurfaceView: boolean access$7(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView: void access$8(org.cocos2d.opengl.GLSurfaceView,boolean)
org.cocos2d.actions.interval.CCTintBy
org.cocos2d.actions.interval.CCTintBy: org.cocos2d.types.ccColor3B delta
org.cocos2d.actions.interval.CCTintBy: org.cocos2d.types.ccColor3B from
org.cocos2d.actions.interval.CCTintBy: org.cocos2d.actions.interval.CCTintBy action(float,org.cocos2d.types.ccColor3B)
org.cocos2d.actions.interval.CCTintBy: CCTintBy(float,org.cocos2d.types.ccColor3B)
org.cocos2d.actions.interval.CCTintBy: org.cocos2d.actions.interval.CCTintBy copy()
org.cocos2d.actions.interval.CCTintBy: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCTintBy: void update(float)
org.cocos2d.actions.interval.CCTintBy: org.cocos2d.actions.interval.CCTintBy reverse()
org.cocos2d.actions.interval.CCTintBy: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCTintBy: java.lang.Object copy()
org.cocos2d.actions.interval.CCTintBy: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.menus.CCMenuItemToggle
org.cocos2d.menus.CCMenuItemToggle: int selectedIndex_
org.cocos2d.menus.CCMenuItemToggle: java.util.ArrayList subItems_
org.cocos2d.menus.CCMenuItemToggle: byte opacity_
org.cocos2d.menus.CCMenuItemToggle: org.cocos2d.types.ccColor3B color_
org.cocos2d.menus.CCMenuItemToggle: java.util.ArrayList getSubItemsRef()
org.cocos2d.menus.CCMenuItemToggle: org.cocos2d.menus.CCMenuItemToggle item(org.cocos2d.nodes.CCNode,java.lang.String,org.cocos2d.menus.CCMenuItem[])
org.cocos2d.menus.CCMenuItemToggle: CCMenuItemToggle(org.cocos2d.nodes.CCNode,java.lang.String,org.cocos2d.menus.CCMenuItem[])
org.cocos2d.menus.CCMenuItemToggle: void setSelectedIndex(int)
org.cocos2d.menus.CCMenuItemToggle: int selectedIndex()
org.cocos2d.menus.CCMenuItemToggle: void selected()
org.cocos2d.menus.CCMenuItemToggle: void unselected()
org.cocos2d.menus.CCMenuItemToggle: void activate()
org.cocos2d.menus.CCMenuItemToggle: void setIsEnabled(boolean)
org.cocos2d.menus.CCMenuItemToggle: org.cocos2d.menus.CCMenuItem selectedItem()
org.cocos2d.menus.CCMenuItemToggle: void setOpacity(byte)
org.cocos2d.menus.CCMenuItemToggle: byte getOpacity()
org.cocos2d.menus.CCMenuItemToggle: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.menus.CCMenuItem: int kItemSize
org.cocos2d.menus.CCMenuItem: int _fontSize
org.cocos2d.menus.CCMenuItem: java.lang.String fontName
org.cocos2d.menus.CCMenuItem: int kCurrentItem
org.cocos2d.menus.CCMenuItem: int kZoomActionTag
org.cocos2d.menus.CCMenuItem: boolean isEnabled_
org.cocos2d.menus.CCMenuItem: boolean isSelected_
org.cocos2d.menus.CCMenuItem: java.lang.Object targetCallback
org.cocos2d.menus.CCMenuItem: java.lang.String selector
org.cocos2d.menus.CCMenuItem: java.lang.reflect.Method invocation
org.cocos2d.menus.CCMenuItem: void <clinit>()
org.cocos2d.menus.CCMenuItem: org.cocos2d.menus.CCMenuItem item(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: CCMenuItem(java.lang.Object,java.lang.String)
org.cocos2d.menus.CCMenuItem: void activate()
org.cocos2d.menus.CCMenuItem: void selected()
org.cocos2d.menus.CCMenuItem: void unselected()
org.cocos2d.menus.CCMenuItem: void setIsEnabled(boolean)
org.cocos2d.menus.CCMenuItem: boolean isEnabled()
org.cocos2d.menus.CCMenuItem: org.cocos2d.types.CGRect rect()
org.cocos2d.menus.CCMenuItem: void rect(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.CocosNodeTest$CameraZoomTest$1
org.cocos2d.tests.CocosNodeTest$CameraZoomTest$1: org.cocos2d.tests.CocosNodeTest$CameraZoomTest this$1
org.cocos2d.tests.CocosNodeTest$CameraZoomTest$1: CocosNodeTest$CameraZoomTest$1(org.cocos2d.tests.CocosNodeTest$CameraZoomTest)
org.cocos2d.tests.CocosNodeTest$CameraZoomTest$1: void update(float)
org.cocos2d.nodes.CCDirector
org.cocos2d.nodes.CCDirector: java.lang.String LOG_TAG
org.cocos2d.nodes.CCDirector: int kCCPixelFormatRGB565
org.cocos2d.nodes.CCDirector: int kCCPixelFormatRGBA8888
org.cocos2d.nodes.CCDirector: int kCCPixelFormatDefault
org.cocos2d.nodes.CCDirector: int kCCDepthBufferNone
org.cocos2d.nodes.CCDirector: int kCCDepthBuffer16
org.cocos2d.nodes.CCDirector: int kCCDepthBuffer24
org.cocos2d.nodes.CCDirector: int kCCDirectorProjection2D
org.cocos2d.nodes.CCDirector: int kCCDirectorProjection3D
org.cocos2d.nodes.CCDirector: int kCCDirectorProjectionCustom
org.cocos2d.nodes.CCDirector: int kCCDirectorProjectionDefault
org.cocos2d.nodes.CCDirector: int projection_
org.cocos2d.nodes.CCDirector: int kCCDirectorTypeNSTimer
org.cocos2d.nodes.CCDirector: int kCCDirectorTypeMainLoop
org.cocos2d.nodes.CCDirector: int kCCDirectorTypeThreadMainLoop
org.cocos2d.nodes.CCDirector: int kCCDirectorTypeDisplayLink
org.cocos2d.nodes.CCDirector: int kCCDirectorTypeDefault
org.cocos2d.nodes.CCDirector: int kCCDeviceOrientationPortrait
org.cocos2d.nodes.CCDirector: int kCCDeviceOrientationLandscapeLeft
org.cocos2d.nodes.CCDirector: android.app.Activity theApp
org.cocos2d.nodes.CCDirector: double kDefaultFPS
org.cocos2d.nodes.CCDirector: boolean FAST_FPS_DISPLAY
org.cocos2d.nodes.CCDirector: int depthBufferFormat_
org.cocos2d.nodes.CCDirector: int pixelFormat_
org.cocos2d.nodes.CCDirector: int deviceOrientation_
org.cocos2d.nodes.CCDirector: int frames_
org.cocos2d.nodes.CCDirector: float accumDt_
org.cocos2d.nodes.CCDirector: float frameRate_
org.cocos2d.nodes.CCDirector: org.cocos2d.nodes.CCLabelAtlas FPSLabel_
org.cocos2d.nodes.CCDirector: boolean isPaused
org.cocos2d.nodes.CCDirector: org.cocos2d.layers.CCScene runningCCScene_
org.cocos2d.nodes.CCDirector: org.cocos2d.layers.CCScene nextCCScene_
org.cocos2d.nodes.CCDirector: boolean sendCleanupToCCScene_
org.cocos2d.nodes.CCDirector: java.util.ArrayList CCScenesStack_
org.cocos2d.nodes.CCDirector: long lastUpdate_
org.cocos2d.nodes.CCDirector: float dt
org.cocos2d.nodes.CCDirector: boolean nextDeltaTimeZero_
org.cocos2d.nodes.CCDirector: org.cocos2d.opengl.GLSurfaceView openGLView_
org.cocos2d.nodes.CCDirector: org.cocos2d.types.CGSize screenSize_
org.cocos2d.nodes.CCDirector: org.cocos2d.types.CGSize surfaceSize_
org.cocos2d.nodes.CCDirector: float contentScaleFactor_
org.cocos2d.nodes.CCDirector: boolean isContentScaleSupported_
org.cocos2d.nodes.CCDirector: float accumDtForProfiler_
org.cocos2d.nodes.CCDirector: double animationInterval_
org.cocos2d.nodes.CCDirector: double oldAnimationInterval_
org.cocos2d.nodes.CCDirector: boolean displayFPS
org.cocos2d.nodes.CCDirector: org.cocos2d.nodes.CCDirector _sharedDirector
org.cocos2d.nodes.CCDirector: double sleepInterval
org.cocos2d.nodes.CCDirector: org.cocos2d.utils.javolution.TextBuilder fpsBuilder
org.cocos2d.nodes.CCDirector: boolean mTranslucentBackground
org.cocos2d.nodes.CCDirector: javax.microedition.khronos.opengles.GL10 gl
org.cocos2d.nodes.CCDirector: boolean $assertionsDisabled
org.cocos2d.nodes.CCDirector: void <clinit>()
org.cocos2d.nodes.CCDirector: int getProjection()
org.cocos2d.nodes.CCDirector: void setProjection(int)
org.cocos2d.nodes.CCDirector: android.app.Activity getActivity()
org.cocos2d.nodes.CCDirector: void setDepthBufferFormat(int)
org.cocos2d.nodes.CCDirector: int getPixelFormat()
org.cocos2d.nodes.CCDirector: float getZEye()
org.cocos2d.nodes.CCDirector: void setPixelFormat(int)
org.cocos2d.nodes.CCDirector: int getDeviceOrientation()
org.cocos2d.nodes.CCDirector: void setDeviceOrientation(int)
org.cocos2d.nodes.CCDirector: void applyOrientation(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCDirector: boolean getIsPaused()
org.cocos2d.nodes.CCDirector: boolean getSendCleanupToScene()
org.cocos2d.nodes.CCDirector: boolean getNextDeltaTimeZero()
org.cocos2d.nodes.CCDirector: void setNextDeltaTimeZero(boolean)
org.cocos2d.nodes.CCDirector: org.cocos2d.opengl.GLSurfaceView getOpenGLView()
org.cocos2d.nodes.CCDirector: void setContentScaleFactor(javax.microedition.khronos.opengles.GL10,float)
org.cocos2d.nodes.CCDirector: float getContentScaleFactor()
org.cocos2d.nodes.CCDirector: org.cocos2d.layers.CCScene getRunningScene()
org.cocos2d.nodes.CCDirector: double getAnimationInterval()
org.cocos2d.nodes.CCDirector: void setAnimationInterval(double)
org.cocos2d.nodes.CCDirector: void setDisplayFPS(boolean)
org.cocos2d.nodes.CCDirector: org.cocos2d.nodes.CCDirector sharedDirector()
org.cocos2d.nodes.CCDirector: CCDirector()
org.cocos2d.nodes.CCDirector: void setGLDefaultValues(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCDirector: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)
org.cocos2d.nodes.CCDirector: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)
org.cocos2d.nodes.CCDirector: void onDrawFrame(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCDirector: void waitForFPS()
org.cocos2d.nodes.CCDirector: void drawCCScene(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCDirector: void calculateDeltaTime()
org.cocos2d.nodes.CCDirector: org.cocos2d.types.CGSize winSize()
org.cocos2d.nodes.CCDirector: org.cocos2d.types.CGSize winSizeRef()
org.cocos2d.nodes.CCDirector: org.cocos2d.types.CGSize displaySize()
org.cocos2d.nodes.CCDirector: boolean getLandscape()
org.cocos2d.nodes.CCDirector: void setLandscape(boolean)
org.cocos2d.nodes.CCDirector: boolean isOpenGLAttached()
org.cocos2d.nodes.CCDirector: boolean detach()
org.cocos2d.nodes.CCDirector: boolean attachInWindow(android.view.View)
org.cocos2d.nodes.CCDirector: boolean attachInView(android.view.View)
org.cocos2d.nodes.CCDirector: boolean attachInView(android.view.View,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCDirector: boolean attachInView(android.view.View,float)
org.cocos2d.nodes.CCDirector: org.cocos2d.types.CGRect getAppFrameRect(float)
org.cocos2d.nodes.CCDirector: void setScreenSize(float,float)
org.cocos2d.nodes.CCDirector: boolean initOpenGLViewWithView(android.view.View,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCDirector: void showProfilers()
org.cocos2d.nodes.CCDirector: org.cocos2d.types.CGPoint convertToGL(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCDirector: void convertToGL(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCDirector: void convertToGL(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCDirector: org.cocos2d.types.CGPoint convertToUI(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCDirector: void runWithScene(org.cocos2d.layers.CCScene)
org.cocos2d.nodes.CCDirector: void replaceScene(org.cocos2d.layers.CCScene)
org.cocos2d.nodes.CCDirector: void pushScene(org.cocos2d.layers.CCScene)
org.cocos2d.nodes.CCDirector: void popScene()
org.cocos2d.nodes.CCDirector: void purgeCachedData()
org.cocos2d.nodes.CCDirector: void end()
org.cocos2d.nodes.CCDirector: void setNextScene()
org.cocos2d.nodes.CCDirector: void onPause()
org.cocos2d.nodes.CCDirector: void onResume()
org.cocos2d.nodes.CCDirector: void pause()
org.cocos2d.nodes.CCDirector: void resume()
org.cocos2d.nodes.CCDirector: void setAlphaBlending(javax.microedition.khronos.opengles.GL10,boolean)
org.cocos2d.nodes.CCDirector: void setDepthTest(javax.microedition.khronos.opengles.GL10,boolean)
org.cocos2d.nodes.CCDirector: void setCCTexture2D(javax.microedition.khronos.opengles.GL10,boolean)
org.cocos2d.nodes.CCDirector: void updateContentScaleFactor()
org.cocos2d.nodes.CCDirector: int[] getConfigSpec()
org.cocos2d.nodes.CCDirector: void showFPS(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCDirector: boolean onKeyDown(android.view.KeyEvent)
org.cocos2d.nodes.CCDirector: boolean onKeyUp(android.view.KeyEvent)
org.cocos2d.nodes.CCDirector: void setIsEnableKeyEvent(boolean)
org.cocos2d.nodes.CCDirector: boolean isEnableKeyEvent()
org.cocos2d.particlesystem.CCQuadParticleSystem$1
org.cocos2d.particlesystem.CCQuadParticleSystem$1: org.cocos2d.particlesystem.CCQuadParticleSystem this$0
org.cocos2d.particlesystem.CCQuadParticleSystem$1: CCQuadParticleSystem$1(org.cocos2d.particlesystem.CCQuadParticleSystem)
org.cocos2d.particlesystem.CCQuadParticleSystem$1: void load(org.cocos2d.opengl.GLResourceHelper$Resource)
org.cocos2d.opengl.GLSurfaceView$DefaultContextFactory
org.cocos2d.opengl.GLSurfaceView$DefaultContextFactory: int EGL_CONTEXT_CLIENT_VERSION
org.cocos2d.opengl.GLSurfaceView$DefaultContextFactory: org.cocos2d.opengl.GLSurfaceView this$0
org.cocos2d.opengl.GLSurfaceView$DefaultContextFactory: GLSurfaceView$DefaultContextFactory(org.cocos2d.opengl.GLSurfaceView)
org.cocos2d.opengl.GLSurfaceView$DefaultContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)
org.cocos2d.opengl.GLSurfaceView$DefaultContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)
org.cocos2d.opengl.GLSurfaceView$DefaultContextFactory: GLSurfaceView$DefaultContextFactory(org.cocos2d.opengl.GLSurfaceView,org.cocos2d.opengl.GLSurfaceView$DefaultContextFactory)
org.cocos2d.particlesystem.CCQuadParticleSystem$2
org.cocos2d.particlesystem.CCQuadParticleSystem$2: org.cocos2d.particlesystem.CCQuadParticleSystem this$0
org.cocos2d.particlesystem.CCQuadParticleSystem$2: CCQuadParticleSystem$2(org.cocos2d.particlesystem.CCQuadParticleSystem)
org.cocos2d.particlesystem.CCQuadParticleSystem$2: void perform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.events.CCKeyHandler
org.cocos2d.events.CCKeyHandler: org.cocos2d.protocols.CCKeyDelegateProtocol delegate_
org.cocos2d.events.CCKeyHandler: boolean enabledSelectors_
org.cocos2d.events.CCKeyHandler: int priority_
org.cocos2d.events.CCKeyHandler: boolean $assertionsDisabled
org.cocos2d.events.CCKeyHandler: void <clinit>()
org.cocos2d.events.CCKeyHandler: org.cocos2d.protocols.CCKeyDelegateProtocol getDelegate()
org.cocos2d.events.CCKeyHandler: void setSelectorFlag(boolean)
org.cocos2d.events.CCKeyHandler: boolean getSelectorFlag()
org.cocos2d.events.CCKeyHandler: int getPriority()
org.cocos2d.events.CCKeyHandler: void setPriority(int)
org.cocos2d.events.CCKeyHandler: org.cocos2d.events.CCKeyHandler makeHandler(org.cocos2d.protocols.CCKeyDelegateProtocol,int)
org.cocos2d.events.CCKeyHandler: CCKeyHandler(org.cocos2d.protocols.CCKeyDelegateProtocol,int)
org.cocos2d.events.CCKeyHandler: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.events.CCKeyHandler: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.types.util.PoolHolder$3
org.cocos2d.types.util.PoolHolder$3: org.cocos2d.types.util.PoolHolder this$0
org.cocos2d.types.util.PoolHolder$3: PoolHolder$3(org.cocos2d.types.util.PoolHolder)
org.cocos2d.types.util.PoolHolder$3: org.cocos2d.types.ccQuad2 allocate()
org.cocos2d.types.util.PoolHolder$3: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.util.ArrayList objs
org.cocos2d.utils.pool.OneClassPool: OneClassPool()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object get()
org.cocos2d.utils.pool.OneClassPool: void free(java.lang.Object)
org.cocos2d.utils.pool.OneClassPool: int size()
org.cocos2d.utils.pool.OneClassPool: void clear()
org.cocos2d.nodes.CCAtlasNode
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.opengl.CCTextureAtlas textureAtlas_
org.cocos2d.nodes.CCAtlasNode: int itemsPerRow
org.cocos2d.nodes.CCAtlasNode: int itemsPerColumn
org.cocos2d.nodes.CCAtlasNode: float texStepX
org.cocos2d.nodes.CCAtlasNode: float texStepY
org.cocos2d.nodes.CCAtlasNode: int itemWidth
org.cocos2d.nodes.CCAtlasNode: int itemHeight
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.nodes.CCAtlasNode: int opacity_
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccColor3B color_
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccColor3B colorUnmodified_
org.cocos2d.nodes.CCAtlasNode: boolean opacityModifyRGB_
org.cocos2d.nodes.CCAtlasNode: CCAtlasNode(java.lang.String,int,int,int)
org.cocos2d.nodes.CCAtlasNode: void calculateMaxItems()
org.cocos2d.nodes.CCAtlasNode: void calculateTexCoordsSteps()
org.cocos2d.nodes.CCAtlasNode: void updateAtlasValues()
org.cocos2d.nodes.CCAtlasNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCAtlasNode: void setOpacity(int)
org.cocos2d.nodes.CCAtlasNode: int getOpacity()
org.cocos2d.nodes.CCAtlasNode: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.nodes.CCAtlasNode: void updateBlendFunc()
org.cocos2d.nodes.CCAtlasNode: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.nodes.CCAtlasNode: void setOpacityModifyRGB(boolean)
org.cocos2d.nodes.CCAtlasNode: boolean doesOpacityModifyRGB()
org.cocos2d.nodes.CCAtlasNode: void updateOpacityModifyRGB()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.util.PoolHolder$2
org.cocos2d.types.util.PoolHolder$2: org.cocos2d.types.util.PoolHolder this$0
org.cocos2d.types.util.PoolHolder$2: PoolHolder$2(org.cocos2d.types.util.PoolHolder)
org.cocos2d.types.util.PoolHolder$2: org.cocos2d.types.CGPoint allocate()
org.cocos2d.types.util.PoolHolder$2: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.util.ArrayList objs
org.cocos2d.utils.pool.OneClassPool: OneClassPool()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object get()
org.cocos2d.utils.pool.OneClassPool: void free(java.lang.Object)
org.cocos2d.utils.pool.OneClassPool: int size()
org.cocos2d.utils.pool.OneClassPool: void clear()
org.cocos2d.nodes.CCSprite
org.cocos2d.nodes.CCSprite: int CCSpriteIndexNotInitialized
org.cocos2d.nodes.CCSprite: int CC_HONOR_PARENT_TRANSFORM_TRANSLATE
org.cocos2d.nodes.CCSprite: int CC_HONOR_PARENT_TRANSFORM_ROTATE
org.cocos2d.nodes.CCSprite: int CC_HONOR_PARENT_TRANSFORM_SCALE
org.cocos2d.nodes.CCSprite: int CC_HONOR_PARENT_TRANSFORM_ALL
org.cocos2d.nodes.CCSprite: java.util.HashMap animations_
org.cocos2d.nodes.CCSprite: boolean flipY_
org.cocos2d.nodes.CCSprite: boolean flipX_
org.cocos2d.nodes.CCSprite: int opacity_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccColor3B color_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccColor3B colorUnmodified_
org.cocos2d.nodes.CCSprite: boolean opacityModifyRGB_
org.cocos2d.nodes.CCSprite: org.cocos2d.opengl.CCTexture2D texture_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGRect rect_
org.cocos2d.nodes.CCSprite: java.lang.Boolean rectRotated_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGPoint offsetPosition_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGPoint unflippedOffsetPositionFromCenter_
org.cocos2d.nodes.CCSprite: org.cocos2d.opengl.CCTextureAtlas textureAtlas_
org.cocos2d.nodes.CCSprite: int atlasIndex
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSpriteSheet spriteSheet_
org.cocos2d.nodes.CCSprite: int honorParentTransform_
org.cocos2d.nodes.CCSprite: boolean dirty_
org.cocos2d.nodes.CCSprite: boolean recursiveDirty_
org.cocos2d.nodes.CCSprite: boolean hasChildren_
org.cocos2d.nodes.CCSprite: org.cocos2d.utils.FastFloatBuffer texCoords
org.cocos2d.nodes.CCSprite: org.cocos2d.utils.FastFloatBuffer vertexes
org.cocos2d.nodes.CCSprite: org.cocos2d.utils.FastFloatBuffer colors
org.cocos2d.nodes.CCSprite: boolean usesSpriteSheet_
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccColor4B tmpColor4B
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccColor4B[] tmpColors
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGAffineTransform tmpMatrix
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGAffineTransform tmpNewMatrix
org.cocos2d.nodes.CCSprite: float[] tmpV
org.cocos2d.nodes.CCSprite: boolean $assertionsDisabled
org.cocos2d.nodes.CCSprite: void <clinit>()
org.cocos2d.nodes.CCSprite: int getOpacity()
org.cocos2d.nodes.CCSprite: void setOpacity(int)
org.cocos2d.nodes.CCSprite: void setOpacityModifyRGB(boolean)
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.nodes.CCSprite: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.nodes.CCSprite: float[] getTexCoordsArray()
org.cocos2d.nodes.CCSprite: float[] getVertexArray()
org.cocos2d.nodes.CCSprite: org.cocos2d.utils.FastFloatBuffer getTexCoords()
org.cocos2d.nodes.CCSprite: org.cocos2d.utils.FastFloatBuffer getVertices()
org.cocos2d.nodes.CCSprite: org.cocos2d.types.CGRect getTextureRect()
org.cocos2d.nodes.CCSprite: java.lang.Boolean getTextureRectRotated()
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(java.lang.String,boolean)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(java.lang.String)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(java.lang.String,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(android.graphics.Bitmap)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(android.graphics.Bitmap,java.lang.String)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite sprite(org.cocos2d.nodes.CCSpriteSheet,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: CCSprite(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSprite: CCSprite(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: void init(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: CCSprite(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCSprite: void init(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCSprite: CCSprite(java.lang.String,boolean)
org.cocos2d.nodes.CCSprite: CCSprite(java.lang.String)
org.cocos2d.nodes.CCSprite: CCSprite()
org.cocos2d.nodes.CCSprite: CCSprite(java.lang.String,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: CCSprite(android.graphics.Bitmap)
org.cocos2d.nodes.CCSprite: CCSprite(android.graphics.Bitmap,java.lang.String)
org.cocos2d.nodes.CCSprite: CCSprite(org.cocos2d.nodes.CCSpriteSheet,org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: void setTextureRect(float,float,float,float,java.lang.Boolean)
org.cocos2d.nodes.CCSprite: void setTextureRect(org.cocos2d.types.CGRect,java.lang.Boolean)
org.cocos2d.nodes.CCSprite: void setTextureRect(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: void useSelfRender()
org.cocos2d.nodes.CCSprite: void useSpriteSheetRender(org.cocos2d.nodes.CCSpriteSheet)
org.cocos2d.nodes.CCSprite: void init()
org.cocos2d.nodes.CCSprite: void setDisplayFrame(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCSprite: void setDisplayFrame(java.lang.String,int)
org.cocos2d.nodes.CCSprite: void setVisible(boolean)
org.cocos2d.nodes.CCSprite: void addAnimation(org.cocos2d.nodes.CCAnimation)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCAnimation animationByName(java.lang.String)
org.cocos2d.nodes.CCSprite: void updateColor()
org.cocos2d.nodes.CCSprite: void setFlipX(boolean)
org.cocos2d.nodes.CCSprite: boolean getFlipX()
org.cocos2d.nodes.CCSprite: void setFlipY(boolean)
org.cocos2d.nodes.CCSprite: boolean getFlipY()
org.cocos2d.nodes.CCSprite: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCSprite: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.nodes.CCSprite: boolean isFrameDisplayed(org.cocos2d.nodes.CCSpriteFrame)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSpriteFrame displayedFrame()
org.cocos2d.nodes.CCSprite: void SET_DIRTY_RECURSIVELY()
org.cocos2d.nodes.CCSprite: void updateBlendFunc()
org.cocos2d.nodes.CCSprite: void initAnimationDictionary()
org.cocos2d.nodes.CCSprite: void setTextureRect(org.cocos2d.types.CGRect,org.cocos2d.types.CGSize,java.lang.Boolean)
org.cocos2d.nodes.CCSprite: void setTextureRect(float,float,float,float,float,float,boolean)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCSprite$TransformValues getTransformValues()
org.cocos2d.nodes.CCSprite: boolean doesOpacityModifyRGB()
org.cocos2d.nodes.CCSprite: void setDirtyRecursively(boolean)
org.cocos2d.nodes.CCSprite: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCSprite: void setPosition(float,float)
org.cocos2d.nodes.CCSprite: void setRotation(float)
org.cocos2d.nodes.CCSprite: void setScaleX(float)
org.cocos2d.nodes.CCSprite: void setScaleY(float)
org.cocos2d.nodes.CCSprite: void setScale(float)
org.cocos2d.nodes.CCSprite: void setVertexZ(float)
org.cocos2d.nodes.CCSprite: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCSprite: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCSprite: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCSprite: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCSprite: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCSprite: void removeAllChildren(boolean)
org.cocos2d.nodes.CCSprite: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCSprite: void updateTextureCoords(org.cocos2d.types.CGRect)
org.cocos2d.nodes.CCSprite: void updateTransform()
org.cocos2d.nodes.CCSprite: org.cocos2d.types.ccBlendFunc getBlendFunc()
org.cocos2d.nodes.CCSprite: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.types.util.PoolHolder$5
org.cocos2d.types.util.PoolHolder$5: org.cocos2d.types.util.PoolHolder this$0
org.cocos2d.types.util.PoolHolder$5: PoolHolder$5(org.cocos2d.types.util.PoolHolder)
org.cocos2d.types.util.PoolHolder$5: org.cocos2d.types.CGRect allocate()
org.cocos2d.types.util.PoolHolder$5: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.util.ArrayList objs
org.cocos2d.utils.pool.OneClassPool: OneClassPool()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object get()
org.cocos2d.utils.pool.OneClassPool: void free(java.lang.Object)
org.cocos2d.utils.pool.OneClassPool: int size()
org.cocos2d.utils.pool.OneClassPool: void clear()
org.cocos2d.nodes.CCTextureCache$2
org.cocos2d.nodes.CCTextureCache$2: java.lang.String val$path
org.cocos2d.nodes.CCTextureCache$2: CCTextureCache$2(java.lang.String)
org.cocos2d.nodes.CCTextureCache$2: void load(org.cocos2d.opengl.GLResourceHelper$Resource)
org.cocos2d.types.util.PoolHolder$4
org.cocos2d.types.util.PoolHolder$4: org.cocos2d.types.util.PoolHolder this$0
org.cocos2d.types.util.PoolHolder$4: PoolHolder$4(org.cocos2d.types.util.PoolHolder)
org.cocos2d.types.util.PoolHolder$4: org.cocos2d.types.ccQuad3 allocate()
org.cocos2d.types.util.PoolHolder$4: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.util.ArrayList objs
org.cocos2d.utils.pool.OneClassPool: OneClassPool()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object get()
org.cocos2d.utils.pool.OneClassPool: void free(java.lang.Object)
org.cocos2d.utils.pool.OneClassPool: int size()
org.cocos2d.utils.pool.OneClassPool: void clear()
org.cocos2d.actions.instant.CCCallFuncND
org.cocos2d.actions.instant.CCCallFuncND: java.lang.Object data
org.cocos2d.actions.instant.CCCallFuncND: org.cocos2d.actions.instant.CCCallFuncND action(java.lang.Object,java.lang.String,java.lang.Object)
org.cocos2d.actions.instant.CCCallFuncND: CCCallFuncND(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class[])
org.cocos2d.actions.instant.CCCallFuncND: void execute()
org.cocos2d.actions.instant.CCCallFuncN: org.cocos2d.actions.instant.CCCallFuncN action(java.lang.Object,java.lang.String)
org.cocos2d.actions.instant.CCCallFuncN: CCCallFuncN(java.lang.Object,java.lang.String,java.lang.Class[])
org.cocos2d.actions.instant.CCCallFuncN: void execute()
org.cocos2d.actions.instant.CCCallFuncN: org.cocos2d.actions.instant.CCCallFunc action(java.lang.Object,java.lang.String)
org.cocos2d.actions.instant.CCCallFunc: java.lang.Object targetCallback
org.cocos2d.actions.instant.CCCallFunc: java.lang.String selector
org.cocos2d.actions.instant.CCCallFunc: java.lang.Class[] partypes
org.cocos2d.actions.instant.CCCallFunc: java.lang.reflect.Method invocation
org.cocos2d.actions.instant.CCCallFunc: org.cocos2d.actions.instant.CCCallFunc action(java.lang.Object,java.lang.String)
org.cocos2d.actions.instant.CCCallFunc: CCCallFunc(java.lang.Object,java.lang.String,java.lang.Class[])
org.cocos2d.actions.instant.CCCallFunc: org.cocos2d.actions.instant.CCCallFunc copy()
org.cocos2d.actions.instant.CCCallFunc: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.instant.CCCallFunc: void execute()
org.cocos2d.actions.instant.CCCallFunc: java.lang.Object copy()
org.cocos2d.actions.instant.CCCallFunc: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: CCInstantAction()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: boolean isDone()
org.cocos2d.actions.instant.CCInstantAction: void step(float)
org.cocos2d.actions.instant.CCInstantAction: void update(float)
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.instant.CCInstantAction: java.lang.Object copy()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.nodes.CCTextureCache$3
org.cocos2d.nodes.CCTextureCache$3: java.lang.String val$path
org.cocos2d.nodes.CCTextureCache$3: CCTextureCache$3(java.lang.String)
org.cocos2d.nodes.CCTextureCache$3: void load(org.cocos2d.opengl.GLResourceHelper$Resource)
org.cocos2d.types.util.PoolHolder$6
org.cocos2d.types.util.PoolHolder$6: org.cocos2d.types.util.PoolHolder this$0
org.cocos2d.types.util.PoolHolder$6: PoolHolder$6(org.cocos2d.types.util.PoolHolder)
org.cocos2d.types.util.PoolHolder$6: org.cocos2d.types.CGAffineTransform allocate()
org.cocos2d.types.util.PoolHolder$6: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.util.ArrayList objs
org.cocos2d.utils.pool.OneClassPool: OneClassPool()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object allocate()
org.cocos2d.utils.pool.OneClassPool: java.lang.Object get()
org.cocos2d.utils.pool.OneClassPool: void free(java.lang.Object)
org.cocos2d.utils.pool.OneClassPool: int size()
org.cocos2d.utils.pool.OneClassPool: void clear()
org.cocos2d.utils.pool.ConcOneClassPool
org.cocos2d.utils.pool.ConcOneClassPool: org.cocos2d.utils.collections.ConcNodeCachingStack objs
org.cocos2d.utils.pool.ConcOneClassPool: ConcOneClassPool()
org.cocos2d.utils.pool.ConcOneClassPool: java.lang.Object allocate()
org.cocos2d.utils.pool.ConcOneClassPool: java.lang.Object get()
org.cocos2d.utils.pool.ConcOneClassPool: void free(java.lang.Object)
org.cocos2d.types.util.PoolHolder
org.cocos2d.types.util.PoolHolder: java.lang.ThreadLocal instance
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.ObjectPool objectPool
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.OneClassPool pointPool
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.OneClassPool ccQuad2Pool
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.OneClassPool ccQuad3Pool
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.OneClassPool rectPool
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.OneClassPool affineTransformPool
org.cocos2d.types.util.PoolHolder: void <clinit>()
org.cocos2d.types.util.PoolHolder: org.cocos2d.types.util.PoolHolder getInstance()
org.cocos2d.types.util.PoolHolder: PoolHolder()
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.ObjectPool getObjectPool()
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.OneClassPool getCGPointPool()
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.OneClassPool getccQuad2Pool()
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.OneClassPool getccQuad3Pool()
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.OneClassPool getCGRectPool()
org.cocos2d.types.util.PoolHolder: org.cocos2d.utils.pool.OneClassPool getCGAffineTransformPool()
org.cocos2d.types.util.PoolHolder: PoolHolder(org.cocos2d.types.util.PoolHolder)
org.cocos2d.grid.CCGrabber
org.cocos2d.grid.CCGrabber: int[] fbo
org.cocos2d.grid.CCGrabber: int[] oldFBO
org.cocos2d.grid.CCGrabber: CCGrabber()
org.cocos2d.grid.CCGrabber: void grab(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.grid.CCGrabber: void beforeRender(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.grid.CCGrabber: void afterRender(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.grid.CCGrabber: void finalize()
org.cocos2d.opengl.CCPVRTexture
org.cocos2d.opengl.CCPVRTexture: int PVR_TEXTURE_FLAG_TYPE_MASK
org.cocos2d.opengl.CCPVRTexture: char[] gPVRTexIdentifier
org.cocos2d.opengl.CCPVRTexture: int kPVRTextureFlagTypePVRTC_2
org.cocos2d.opengl.CCPVRTexture: int kPVRTextureFlagTypePVRTC_4
org.cocos2d.opengl.CCPVRTexture: java.util.ArrayList _imageData
org.cocos2d.opengl.CCPVRTexture: int[] _name
org.cocos2d.opengl.CCPVRTexture: int _width
org.cocos2d.opengl.CCPVRTexture: int _height
org.cocos2d.opengl.CCPVRTexture: int _internalFormat
org.cocos2d.opengl.CCPVRTexture: boolean _hasAlpha
org.cocos2d.opengl.CCPVRTexture: boolean _retainName
org.cocos2d.opengl.CCPVRTexture: void <clinit>()
org.cocos2d.opengl.CCPVRTexture: int getWidth()
org.cocos2d.opengl.CCPVRTexture: void setWidth(int)
org.cocos2d.opengl.CCPVRTexture: int getHeight()
org.cocos2d.opengl.CCPVRTexture: void setHeight(int)
org.cocos2d.opengl.CCPVRTexture: int getInternalFormat()
org.cocos2d.opengl.CCPVRTexture: void setInternalFormat(int)
org.cocos2d.opengl.CCPVRTexture: boolean hasAlpha()
org.cocos2d.opengl.CCPVRTexture: void setHasAlpha(boolean)
org.cocos2d.opengl.CCPVRTexture: boolean getRetainName()
org.cocos2d.opengl.CCPVRTexture: void setRatainName(boolean)
org.cocos2d.opengl.CCPVRTexture: boolean unpackPVRData(java.nio.ByteBuffer)
org.cocos2d.opengl.CCPVRTexture: boolean createGLTexture()
org.cocos2d.opengl.CCPVRTexture: CCPVRTexture(java.lang.String)
org.cocos2d.opengl.CCPVRTexture: org.cocos2d.opengl.CCPVRTexture pvrTexture(java.lang.String)
org.cocos2d.opengl.CCPVRTexture: org.cocos2d.opengl.CCPVRTexture pvrTexture(java.net.URL)
org.cocos2d.opengl.CCPVRTexture: void finalize()
org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry
org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry: java.lang.Object key
org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry: java.lang.Object value
org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry: org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry next
org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry: org.cocos2d.utils.collections.ConcurrentArrayHashMap this$0
org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry: ConcurrentArrayHashMap$Entry(org.cocos2d.utils.collections.ConcurrentArrayHashMap)
org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry: java.lang.Object getValue()
org.cocos2d.tests.CocosNodeTest$CameraZoomTest
org.cocos2d.tests.CocosNodeTest$CameraZoomTest: float z
org.cocos2d.tests.CocosNodeTest$CameraZoomTest: void <clinit>()
org.cocos2d.tests.CocosNodeTest$CameraZoomTest: void onEnter()
org.cocos2d.tests.CocosNodeTest$CameraZoomTest: void onExit()
org.cocos2d.tests.CocosNodeTest$CameraZoomTest: CocosNodeTest$CameraZoomTest()
org.cocos2d.tests.CocosNodeTest$CameraZoomTest: void updateEye(float)
org.cocos2d.tests.CocosNodeTest$CameraZoomTest: java.lang.String title()
org.cocos2d.tests.CocosNodeTest$TestDemo: CocosNodeTest$TestDemo()
org.cocos2d.tests.CocosNodeTest$TestDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.CocosNodeTest$TestDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.CocosNodeTest$TestDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.CocosNodeTest$TestDemo: java.lang.String title()
org.cocos2d.tests.CocosNodeTest$TestDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.config.ccMacros
org.cocos2d.config.ccMacros: float FLT_EPSILON
org.cocos2d.config.ccMacros: int INT_MIN
org.cocos2d.config.ccMacros: int CC_MAX_PARTICLE_SIZE
org.cocos2d.config.ccMacros: float M_PI_2
org.cocos2d.config.ccMacros: ccMacros()
org.cocos2d.config.ccMacros: void CCLOG(java.lang.String,java.lang.String)
org.cocos2d.config.ccMacros: void CCLOGINFO(java.lang.String,java.lang.String)
org.cocos2d.config.ccMacros: void CCLOGERROR(java.lang.String,java.lang.String)
org.cocos2d.config.ccMacros: float CCRANDOM_MINUS1_1()
org.cocos2d.config.ccMacros: float CCRANDOM_0_1()
org.cocos2d.config.ccMacros: float CC_DEGREES_TO_RADIANS(float)
org.cocos2d.config.ccMacros: float CC_RADIANS_TO_DEGREES(float)
org.cocos2d.config.ccMacros: void CC_ENABLE_DEFAULT_GL_STATES(javax.microedition.khronos.opengles.GL10)
org.cocos2d.config.ccMacros: void CC_DISABLE_DEFAULT_GL_STATES(javax.microedition.khronos.opengles.GL10)
org.cocos2d.config.ccMacros: void CC_DIRECTOR_INIT(android.app.Activity)
org.cocos2d.config.ccMacros: void CC_DIRECTOR_END()
org.cocos2d.sound.SoundEngine
org.cocos2d.sound.SoundEngine: org.cocos2d.utils.collections.IntMap effectsMap
org.cocos2d.sound.SoundEngine: org.cocos2d.utils.collections.IntMap streamsMap
org.cocos2d.sound.SoundEngine: org.cocos2d.utils.collections.IntMap soundsMap
org.cocos2d.sound.SoundEngine: android.media.SoundPool sp
org.cocos2d.sound.SoundEngine: int lastSndId
org.cocos2d.sound.SoundEngine: java.lang.Float prevEffectsVolume
org.cocos2d.sound.SoundEngine: java.lang.Float prevSoundsVolume
org.cocos2d.sound.SoundEngine: java.lang.Float effectsVolume
org.cocos2d.sound.SoundEngine: java.lang.Float soundsVolume
org.cocos2d.sound.SoundEngine: boolean mute
org.cocos2d.sound.SoundEngine: org.cocos2d.sound.SoundEngine _sharedEngine
org.cocos2d.sound.SoundEngine: void <clinit>()
org.cocos2d.sound.SoundEngine: SoundEngine()
org.cocos2d.sound.SoundEngine: org.cocos2d.sound.SoundEngine sharedEngine()
org.cocos2d.sound.SoundEngine: void purgeSharedEngine()
org.cocos2d.sound.SoundEngine: void setEffectsVolume(java.lang.Float)
org.cocos2d.sound.SoundEngine: java.lang.Float getEffectsVolume()
org.cocos2d.sound.SoundEngine: void setSoundVolume(java.lang.Float)
org.cocos2d.sound.SoundEngine: java.lang.Float getSoundsVolume()
org.cocos2d.sound.SoundEngine: void mute()
org.cocos2d.sound.SoundEngine: void unmute()
org.cocos2d.sound.SoundEngine: boolean isMute()
org.cocos2d.sound.SoundEngine: void preloadEffect(android.content.Context,int)
org.cocos2d.sound.SoundEngine: void playEffect(android.content.Context,int)
org.cocos2d.sound.SoundEngine: void stopEffect(android.content.Context,int)
org.cocos2d.sound.SoundEngine: void preloadSound(android.content.Context,int)
org.cocos2d.sound.SoundEngine: void playSound(android.content.Context,int,boolean)
org.cocos2d.sound.SoundEngine: void pauseSound()
org.cocos2d.sound.SoundEngine: void resumeSound()
org.cocos2d.sound.SoundEngine: void realesSound(int)
org.cocos2d.sound.SoundEngine: void realesAllSounds()
org.cocos2d.sound.SoundEngine: void realesAllEffects()
org.cocos2d.actions.tile.CCShatteredTiles3D
org.cocos2d.actions.tile.CCShatteredTiles3D: int randrange
org.cocos2d.actions.tile.CCShatteredTiles3D: boolean once
org.cocos2d.actions.tile.CCShatteredTiles3D: boolean shatterZ
org.cocos2d.actions.tile.CCShatteredTiles3D: org.cocos2d.actions.tile.CCShatteredTiles3D action(int,boolean,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCShatteredTiles3D: CCShatteredTiles3D(int,boolean,org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCShatteredTiles3D: org.cocos2d.actions.tile.CCShatteredTiles3D copy()
org.cocos2d.actions.tile.CCShatteredTiles3D: void update(float)
org.cocos2d.actions.tile.CCShatteredTiles3D: java.lang.Object copy()
org.cocos2d.actions.tile.CCShatteredTiles3D: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction action(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: CCTiledGrid3DAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.CCTiledGrid3DAction: void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3)
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.tile.CCTiledGrid3DAction copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: java.lang.Object copy()
org.cocos2d.actions.tile.CCTiledGrid3DAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize gridSize
org.cocos2d.actions.grid.CCGridAction: void setGridSize(org.cocos2d.types.ccGridSize)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.types.ccGridSize getGridSize()
org.cocos2d.actions.grid.CCGridAction: CCGridAction(org.cocos2d.types.ccGridSize,float)
org.cocos2d.actions.grid.CCGridAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.grid.CCGridBase grid()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.grid.CCGridAction copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.grid.CCGridAction: java.lang.Object copy()
org.cocos2d.actions.grid.CCGridAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser: org.cocos2d.layers.CCTMXMapInfo this$0
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser: boolean $assertionsDisabled
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser: void <clinit>()
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser: CCTMXMapInfo$CCTMXXMLParser(org.cocos2d.layers.CCTMXMapInfo)
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser: void startDocument()
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser: void endElement(java.lang.String,java.lang.String,java.lang.String)
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser: void characters(char[],int,int)
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser: void error(org.xml.sax.SAXParseException)
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser: void fatalError(org.xml.sax.SAXParseException)
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater tailUpdater
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater headUpdater
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node head
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node tail
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node freeNode
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: java.util.concurrent.atomic.AtomicReferenceFieldUpdater freeNodeUpdater
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: void <clinit>()
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: ConcNodeCachingLinkedQueue()
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: boolean casTail(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node,org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node)
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: boolean casHead(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node,org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node)
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: boolean casNewNode(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node,org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node)
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node newNode()
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: void freeNode(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node)
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: void push(java.lang.Object)
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue: java.lang.Object poll()
org.cocos2d.tests.EffectsTest$TextLayer$1
org.cocos2d.tests.EffectsTest$TextLayer$1: org.cocos2d.tests.EffectsTest$TextLayer this$1
org.cocos2d.tests.EffectsTest$TextLayer$1: EffectsTest$TextLayer$1(org.cocos2d.tests.EffectsTest$TextLayer)
org.cocos2d.tests.EffectsTest$TextLayer$1: void update(float)
org.cocos2d.types.ccV3F_C4B_T2F
org.cocos2d.types.ccV3F_C4B_T2F: org.cocos2d.types.ccVertex3F vertices
org.cocos2d.types.ccV3F_C4B_T2F: org.cocos2d.types.ccColor4B colors
org.cocos2d.types.ccV3F_C4B_T2F: org.cocos2d.types.ccTex2F texCoords
org.cocos2d.types.ccV3F_C4B_T2F: ccV3F_C4B_T2F()
org.cocos2d.tests.TransitionsTest
org.cocos2d.tests.TransitionsTest: java.lang.String LOG_TAG
org.cocos2d.tests.TransitionsTest: org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView
org.cocos2d.tests.TransitionsTest: float TRANSITION_DURATION
org.cocos2d.tests.TransitionsTest: int sceneIdx
org.cocos2d.tests.TransitionsTest: java.lang.Class[] transitions
org.cocos2d.tests.TransitionsTest: void <clinit>()
org.cocos2d.tests.TransitionsTest: TransitionsTest()
org.cocos2d.tests.TransitionsTest: void onCreate(android.os.Bundle)
org.cocos2d.tests.TransitionsTest: void onStart()
org.cocos2d.tests.TransitionsTest: void onPause()
org.cocos2d.tests.TransitionsTest: void onResume()
org.cocos2d.tests.TransitionsTest: void onDestroy()
org.cocos2d.tests.TransitionsTest: java.lang.Class nextTransition()
org.cocos2d.tests.TransitionsTest: java.lang.Class backTransition()
org.cocos2d.tests.TransitionsTest: java.lang.Class restartTransition()
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorNoneBit
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorBeganBit
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorMovedBit
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorEndedBit
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorCancelledBit
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorAllBits
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: int flag
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag[] ENUM$VALUES
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: void <clinit>()
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: CCTouchDispatcher$ccTouchSelectorFlag(java.lang.String,int,int)
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: int getFlag()
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag[] values()
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag: org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag valueOf(java.lang.String)
org.cocos2d.layers.CCTMXLayerInfo
org.cocos2d.layers.CCTMXLayerInfo: java.lang.String name
org.cocos2d.layers.CCTMXLayerInfo: org.cocos2d.types.CGSize layerSize
org.cocos2d.layers.CCTMXLayerInfo: java.nio.IntBuffer tiles
org.cocos2d.layers.CCTMXLayerInfo: boolean visible
org.cocos2d.layers.CCTMXLayerInfo: int opacity
org.cocos2d.layers.CCTMXLayerInfo: boolean ownTiles
org.cocos2d.layers.CCTMXLayerInfo: int minGID
org.cocos2d.layers.CCTMXLayerInfo: int maxGID
org.cocos2d.layers.CCTMXLayerInfo: java.util.HashMap properties
org.cocos2d.layers.CCTMXLayerInfo: org.cocos2d.types.CGPoint offset
org.cocos2d.layers.CCTMXLayerInfo: CCTMXLayerInfo()
org.cocos2d.actions.tile.Tile
org.cocos2d.actions.tile.Tile: org.cocos2d.types.CGPoint position
org.cocos2d.actions.tile.Tile: org.cocos2d.types.CGPoint startPosition
org.cocos2d.actions.tile.Tile: org.cocos2d.types.ccGridSize delta
org.cocos2d.actions.tile.Tile: org.cocos2d.actions.tile.Tile make(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.Tile: org.cocos2d.actions.tile.Tile make()
org.cocos2d.actions.tile.Tile: Tile(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.ccGridSize)
org.cocos2d.actions.tile.Tile: Tile()
org.cocos2d.opengl.GLDebugWrapper
org.cocos2d.opengl.GLDebugWrapper: java.lang.String LOG_TAG
org.cocos2d.opengl.GLDebugWrapper: void <clinit>()
org.cocos2d.opengl.GLDebugWrapper: GLDebugWrapper()
org.cocos2d.opengl.GLDebugWrapper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL)
org.cocos2d.opengl.GLDebugWrapper: java.lang.String access$0()
org.cocos2d.nodes.CCTextureCache$1
org.cocos2d.nodes.CCTextureCache$1: org.cocos2d.nodes.CCTextureCache this$0
org.cocos2d.nodes.CCTextureCache$1: android.graphics.Bitmap val$copy
org.cocos2d.nodes.CCTextureCache$1: CCTextureCache$1(org.cocos2d.nodes.CCTextureCache,android.graphics.Bitmap)
org.cocos2d.nodes.CCTextureCache$1: void load(org.cocos2d.opengl.GLResourceHelper$Resource)
org.cocos2d.actions.CCScheduler
org.cocos2d.actions.CCScheduler: java.util.ArrayList updatesNeg
org.cocos2d.actions.CCScheduler: java.util.ArrayList updates0
org.cocos2d.actions.CCScheduler: java.util.ArrayList updatesPos
org.cocos2d.actions.CCScheduler: org.cocos2d.utils.collections.ConcurrentArrayHashMap hashForSelectors
org.cocos2d.actions.CCScheduler: java.util.concurrent.ConcurrentHashMap hashForUpdates
org.cocos2d.actions.CCScheduler: org.cocos2d.actions.CCScheduler$tListEntry currentEntry
org.cocos2d.actions.CCScheduler: org.cocos2d.actions.CCScheduler$tHashSelectorEntry currentTarget
org.cocos2d.actions.CCScheduler: boolean currentTargetSalvaged
org.cocos2d.actions.CCScheduler: java.lang.String updateSelector
org.cocos2d.actions.CCScheduler: float timeScale_
org.cocos2d.actions.CCScheduler: org.cocos2d.actions.CCScheduler _sharedScheduler
org.cocos2d.actions.CCScheduler: boolean $assertionsDisabled
org.cocos2d.actions.CCScheduler: void <clinit>()
org.cocos2d.actions.CCScheduler: float getTimeScale()
org.cocos2d.actions.CCScheduler: void setTimeScale(float)
org.cocos2d.actions.CCScheduler: org.cocos2d.actions.CCScheduler sharedScheduler()
org.cocos2d.actions.CCScheduler: void purgeSharedScheduler()
org.cocos2d.actions.CCScheduler: CCScheduler()
org.cocos2d.actions.CCScheduler: void tick(float)
org.cocos2d.actions.CCScheduler: void schedule(java.lang.String,java.lang.Object,float,boolean)
org.cocos2d.actions.CCScheduler: void schedule(org.cocos2d.actions.UpdateCallback,java.lang.Object,float,boolean)
org.cocos2d.actions.CCScheduler: void unschedule(java.lang.String,java.lang.Object)
org.cocos2d.actions.CCScheduler: void unschedule(org.cocos2d.actions.UpdateCallback,java.lang.Object)
org.cocos2d.actions.CCScheduler: void unscheduleUpdate(java.lang.Object)
org.cocos2d.actions.CCScheduler: void unscheduleAllSelectors(java.lang.Object)
org.cocos2d.actions.CCScheduler: void unscheduleAllSelectors()
org.cocos2d.actions.CCScheduler: void resume(java.lang.Object)
org.cocos2d.actions.CCScheduler: void pause(java.lang.Object)
org.cocos2d.actions.CCScheduler: void scheduleUpdate(java.lang.Object,int,boolean)
org.cocos2d.actions.CCScheduler: void scheduleUpdate(org.cocos2d.actions.UpdateCallback,int,boolean)
org.cocos2d.actions.CCScheduler: void scheduleTimer(org.cocos2d.actions.CCTimer)
org.cocos2d.actions.CCScheduler: void unscheduleTimer(org.cocos2d.actions.CCTimer)
org.cocos2d.actions.CCScheduler: void unscheduleAllTimers()
org.cocos2d.actions.CCScheduler: void finalize()
org.cocos2d.actions.CCScheduler: void append(java.util.ArrayList,java.lang.Object,boolean)
org.cocos2d.actions.CCScheduler: void priority(java.util.ArrayList,java.lang.Object,int,boolean)
org.cocos2d.actions.CCScheduler$tListEntry
org.cocos2d.actions.CCScheduler$tListEntry: java.lang.reflect.Method impMethod
org.cocos2d.actions.CCScheduler$tListEntry: org.cocos2d.actions.UpdateCallback callback
org.cocos2d.actions.CCScheduler$tListEntry: java.lang.Object target
org.cocos2d.actions.CCScheduler$tListEntry: int priority
org.cocos2d.actions.CCScheduler$tListEntry: boolean paused
org.cocos2d.actions.CCScheduler$tListEntry: CCScheduler$tListEntry()
org.cocos2d.actions.CCScheduler$tListEntry: CCScheduler$tListEntry(org.cocos2d.actions.CCScheduler$tListEntry)
org.cocos2d.actions.base.CCFiniteTimeAction
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.nodes.CCLabelAtlas
org.cocos2d.nodes.CCLabelAtlas: org.cocos2d.utils.javolution.TextBuilder string_
org.cocos2d.nodes.CCLabelAtlas: char mapStartChar
org.cocos2d.nodes.CCLabelAtlas: org.cocos2d.nodes.CCLabelAtlas label(java.lang.CharSequence,java.lang.String,int,int,char)
org.cocos2d.nodes.CCLabelAtlas: CCLabelAtlas(java.lang.CharSequence,java.lang.String,int,int,char)
org.cocos2d.nodes.CCLabelAtlas: void updateAtlasValues()
org.cocos2d.nodes.CCLabelAtlas: void setString(java.lang.CharSequence)
org.cocos2d.nodes.CCLabelAtlas: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCLabelAtlas: float getWidth()
org.cocos2d.nodes.CCLabelAtlas: float getHeight()
org.cocos2d.nodes.CCLabelAtlas: org.cocos2d.types.ccBlendFunc getBlendFunc()
org.cocos2d.nodes.CCLabelAtlas: void setBlendFunc(org.cocos2d.types.ccBlendFunc)
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.opengl.CCTextureAtlas textureAtlas_
org.cocos2d.nodes.CCAtlasNode: int itemsPerRow
org.cocos2d.nodes.CCAtlasNode: int itemsPerColumn
org.cocos2d.nodes.CCAtlasNode: float texStepX
org.cocos2d.nodes.CCAtlasNode: float texStepY
org.cocos2d.nodes.CCAtlasNode: int itemWidth
org.cocos2d.nodes.CCAtlasNode: int itemHeight
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccBlendFunc blendFunc_
org.cocos2d.nodes.CCAtlasNode: int opacity_
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccColor3B color_
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccColor3B colorUnmodified_
org.cocos2d.nodes.CCAtlasNode: boolean opacityModifyRGB_
org.cocos2d.nodes.CCAtlasNode: CCAtlasNode(java.lang.String,int,int,int)
org.cocos2d.nodes.CCAtlasNode: void calculateMaxItems()
org.cocos2d.nodes.CCAtlasNode: void calculateTexCoordsSteps()
org.cocos2d.nodes.CCAtlasNode: void updateAtlasValues()
org.cocos2d.nodes.CCAtlasNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCAtlasNode: void setOpacity(int)
org.cocos2d.nodes.CCAtlasNode: int getOpacity()
org.cocos2d.nodes.CCAtlasNode: void setColor(org.cocos2d.types.ccColor3B)
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.types.ccColor3B getColor()
org.cocos2d.nodes.CCAtlasNode: void updateBlendFunc()
org.cocos2d.nodes.CCAtlasNode: void setTexture(org.cocos2d.opengl.CCTexture2D)
org.cocos2d.nodes.CCAtlasNode: org.cocos2d.opengl.CCTexture2D getTexture()
org.cocos2d.nodes.CCAtlasNode: void setOpacityModifyRGB(boolean)
org.cocos2d.nodes.CCAtlasNode: boolean doesOpacityModifyRGB()
org.cocos2d.nodes.CCAtlasNode: void updateOpacityModifyRGB()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$2
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$2: org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom this$1
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$2: SchedulerTest$SchedulerUpdateAndCustom$2(org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom)
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$2: void update(float)
org.cocos2d.actions.grid.CCAccelAmplitude
org.cocos2d.actions.grid.CCAccelAmplitude: float rate
org.cocos2d.actions.grid.CCAccelAmplitude: org.cocos2d.actions.interval.CCIntervalAction other
org.cocos2d.actions.grid.CCAccelAmplitude: org.cocos2d.actions.grid.CCAccelAmplitude action(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.grid.CCAccelAmplitude: CCAccelAmplitude(org.cocos2d.actions.interval.CCIntervalAction,float)
org.cocos2d.actions.grid.CCAccelAmplitude: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.grid.CCAccelAmplitude: void update(float)
org.cocos2d.actions.grid.CCAccelAmplitude: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$1
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$1: org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom this$1
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$1: SchedulerTest$SchedulerUpdateAndCustom$1(org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom)
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$1: void update(float)
org.cocos2d.actions.grid.CCReuseGrid
org.cocos2d.actions.grid.CCReuseGrid: int t
org.cocos2d.actions.grid.CCReuseGrid: org.cocos2d.actions.grid.CCReuseGrid action(int)
org.cocos2d.actions.grid.CCReuseGrid: CCReuseGrid(int)
org.cocos2d.actions.grid.CCReuseGrid: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.instant.CCInstantAction: CCInstantAction()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.instant.CCInstantAction copy()
org.cocos2d.actions.instant.CCInstantAction: boolean isDone()
org.cocos2d.actions.instant.CCInstantAction: void step(float)
org.cocos2d.actions.instant.CCInstantAction: void update(float)
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.instant.CCInstantAction: java.lang.Object copy()
org.cocos2d.actions.instant.CCInstantAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.nodes.CCRibbon$CCRibbonSegment
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: int COUNT
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: float[] verts
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: float[] coords
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: float[] colors
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: float[] creationTime
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: boolean finished
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: int end
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: int begin
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: org.cocos2d.utils.FastFloatBuffer mVertices
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: org.cocos2d.utils.FastFloatBuffer mCoordinates
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: org.cocos2d.utils.FastFloatBuffer mColors
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: CCRibbon$CCRibbonSegment()
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: void reset()
org.cocos2d.nodes.CCRibbon$CCRibbonSegment: void draw(javax.microedition.khronos.opengles.GL10,float,float,org.cocos2d.types.ccColor4B)
org.cocos2d.actions.interval.CCAnimate
org.cocos2d.actions.interval.CCAnimate: org.cocos2d.nodes.CCAnimation animation
org.cocos2d.actions.interval.CCAnimate: org.cocos2d.nodes.CCSpriteFrame origFrame
org.cocos2d.actions.interval.CCAnimate: boolean restoreOriginalFrame
org.cocos2d.actions.interval.CCAnimate: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCAnimate: void <clinit>()
org.cocos2d.actions.interval.CCAnimate: org.cocos2d.nodes.CCAnimation getAnimation()
org.cocos2d.actions.interval.CCAnimate: void setAnimation(org.cocos2d.nodes.CCAnimation)
org.cocos2d.actions.interval.CCAnimate: org.cocos2d.actions.interval.CCAnimate action(float,org.cocos2d.nodes.CCAnimation,boolean)
org.cocos2d.actions.interval.CCAnimate: org.cocos2d.actions.interval.CCAnimate action(org.cocos2d.nodes.CCAnimation)
org.cocos2d.actions.interval.CCAnimate: org.cocos2d.actions.interval.CCAnimate action(org.cocos2d.nodes.CCAnimation,boolean)
org.cocos2d.actions.interval.CCAnimate: CCAnimate(org.cocos2d.nodes.CCAnimation,boolean)
org.cocos2d.actions.interval.CCAnimate: CCAnimate(float,org.cocos2d.nodes.CCAnimation,boolean)
org.cocos2d.actions.interval.CCAnimate: org.cocos2d.actions.interval.CCAnimate copy()
org.cocos2d.actions.interval.CCAnimate: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCAnimate: void stop()
org.cocos2d.actions.interval.CCAnimate: void update(float)
org.cocos2d.actions.interval.CCAnimate: org.cocos2d.actions.interval.CCAnimate reverse()
org.cocos2d.actions.interval.CCAnimate: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCAnimate: java.lang.Object copy()
org.cocos2d.actions.interval.CCAnimate: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: float elapsed
org.cocos2d.actions.interval.CCIntervalAction: boolean firstTick
org.cocos2d.actions.interval.CCIntervalAction: boolean $assertionsDisabled
org.cocos2d.actions.interval.CCIntervalAction: void <clinit>()
org.cocos2d.actions.interval.CCIntervalAction: float getElapsed()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: CCIntervalAction(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction copy()
org.cocos2d.actions.interval.CCIntervalAction: boolean isDone()
org.cocos2d.actions.interval.CCIntervalAction: void step(float)
org.cocos2d.actions.interval.CCIntervalAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.interval.CCIntervalAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: void setAmplitudeRate(float)
org.cocos2d.actions.interval.CCIntervalAction: float getAmplitudeRate()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.interval.CCIntervalAction: java.lang.Object copy()
org.cocos2d.actions.interval.CCIntervalAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.String LOG_TAG
org.cocos2d.actions.base.CCFiniteTimeAction: float duration
org.cocos2d.actions.base.CCFiniteTimeAction: void <clinit>()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction action(float)
org.cocos2d.actions.base.CCFiniteTimeAction: CCFiniteTimeAction(float)
org.cocos2d.actions.base.CCFiniteTimeAction: float getDuration()
org.cocos2d.actions.base.CCFiniteTimeAction: void setDuration(float)
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCFiniteTimeAction reverse()
org.cocos2d.actions.base.CCFiniteTimeAction: void step(float)
org.cocos2d.actions.base.CCFiniteTimeAction: void update(float)
org.cocos2d.actions.base.CCFiniteTimeAction: java.lang.Object copy()
org.cocos2d.actions.base.CCFiniteTimeAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: int kCCActionTagInvalid
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode target
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode originalTarget
org.cocos2d.actions.base.CCAction: int tag
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getOriginalTarget()
org.cocos2d.actions.base.CCAction: void setOriginalTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: org.cocos2d.nodes.CCNode getTarget()
org.cocos2d.actions.base.CCAction: void setTarget(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: int getTag()
org.cocos2d.actions.base.CCAction: void setTag(int)
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction action()
org.cocos2d.actions.base.CCAction: CCAction()
org.cocos2d.actions.base.CCAction: org.cocos2d.actions.base.CCAction copy()
org.cocos2d.actions.base.CCAction: void start(org.cocos2d.nodes.CCNode)
org.cocos2d.actions.base.CCAction: void stop()
org.cocos2d.actions.base.CCAction: boolean isDone()
org.cocos2d.actions.base.CCAction: void step(float)
org.cocos2d.actions.base.CCAction: void update(float)
org.cocos2d.actions.base.CCAction: java.lang.Object copy()
org.cocos2d.tests.AtlasTest$LabelAtlasTest
org.cocos2d.tests.AtlasTest$LabelAtlasTest: float time
org.cocos2d.tests.AtlasTest$LabelAtlasTest: AtlasTest$LabelAtlasTest()
org.cocos2d.tests.AtlasTest$LabelAtlasTest: void step(float)
org.cocos2d.tests.AtlasTest$LabelAtlasTest: java.lang.String title()
org.cocos2d.tests.AtlasTest$LabelAtlasTest: java.lang.String subtitle()
org.cocos2d.tests.AtlasTest$AtlasDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.AtlasTest$AtlasDemo: AtlasTest$AtlasDemo()
org.cocos2d.tests.AtlasTest$AtlasDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String title()
org.cocos2d.tests.AtlasTest$AtlasDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeA
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeA: org.cocos2d.types.CGPoint dir
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeA: float radialAccel
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeA: float tangentialAccel
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeA: CCParticleSystem$CCParticle$ParticleModeA()
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeB
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeB: float angle
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeB: float degreesPerSecond
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeB: float radius
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeB: float deltaRadius
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeB: CCParticleSystem$CCParticle$ParticleModeB()
org.cocos2d.tests.TileMapTest$TMXIsoVertexZ
org.cocos2d.tests.TileMapTest$TMXIsoVertexZ: org.cocos2d.nodes.CCSprite tamara
org.cocos2d.tests.TileMapTest$TMXIsoVertexZ: TileMapTest$TMXIsoVertexZ()
org.cocos2d.tests.TileMapTest$TMXIsoVertexZ: void repositionSprite(float)
org.cocos2d.tests.TileMapTest$TMXIsoVertexZ: void onEnter()
org.cocos2d.tests.TileMapTest$TMXIsoVertexZ: void onExit()
org.cocos2d.tests.TileMapTest$TMXIsoVertexZ: java.lang.String title()
org.cocos2d.tests.TileMapTest$TMXIsoVertexZ: java.lang.String subtitle()
org.cocos2d.tests.TileMapTest$TileDemo: org.cocos2d.opengl.CCTextureAtlas atlas
org.cocos2d.tests.TileMapTest$TileDemo: TileMapTest$TileDemo()
org.cocos2d.tests.TileMapTest$TileDemo: void registerWithTouchDispatcher()
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.tests.TileMapTest$TileDemo: void restartCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void nextCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: void backCallback(java.lang.Object)
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String title()
org.cocos2d.tests.TileMapTest$TileDemo: java.lang.String subtitle()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled_
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled_
org.cocos2d.layers.CCLayer: int accelerometerUpdateRate
org.cocos2d.layers.CCLayer: android.hardware.SensorManager sensorManager
org.cocos2d.layers.CCLayer: android.hardware.Sensor accelerometer
org.cocos2d.layers.CCLayer: boolean isKeyEnabled_
org.cocos2d.layers.CCLayer: boolean $assertionsDisabled
org.cocos2d.layers.CCLayer: void <clinit>()
org.cocos2d.layers.CCLayer: boolean isTouchEnabled()
org.cocos2d.layers.CCLayer: void setIsTouchEnabled(boolean)
org.cocos2d.layers.CCLayer: boolean isAccelerometerEnabled()
org.cocos2d.layers.CCLayer: void setIsAccelerometerEnabled(boolean)
org.cocos2d.layers.CCLayer: void enableAccelerometerWithRate(int)
org.cocos2d.layers.CCLayer: boolean isKeyEnabled()
org.cocos2d.layers.CCLayer: void setIsKeyEnabled(boolean)
org.cocos2d.layers.CCLayer: org.cocos2d.layers.CCLayer node()
org.cocos2d.layers.CCLayer: CCLayer()
org.cocos2d.layers.CCLayer: void registerWithTouchDispatcher()
org.cocos2d.layers.CCLayer: void registerWithAccelerometer()
org.cocos2d.layers.CCLayer: void unregisterWithAccelerometer()
org.cocos2d.layers.CCLayer: void onEnter()
org.cocos2d.layers.CCLayer: void onExit()
org.cocos2d.layers.CCLayer: boolean ccTouchesBegan(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesMoved(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesEnded(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: boolean ccTouchesCancelled(android.view.MotionEvent)
org.cocos2d.layers.CCLayer: void ccAccelerometerChanged(float,float,float)
org.cocos2d.layers.CCLayer: void onAccuracyChanged(android.hardware.Sensor,int)
org.cocos2d.layers.CCLayer: void onSensorChanged(android.hardware.SensorEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyDown(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: boolean ccKeyUp(int,android.view.KeyEvent)
org.cocos2d.layers.CCLayer: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: java.lang.String LOG_TAG
org.cocos2d.nodes.CCNode: int kCCNodeTagInvalid
org.cocos2d.nodes.CCNode: float rotation_
org.cocos2d.nodes.CCNode: float scaleX_
org.cocos2d.nodes.CCNode: float scaleY_
org.cocos2d.nodes.CCNode: float skewX_
org.cocos2d.nodes.CCNode: float skewY_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPointInPixels_
org.cocos2d.nodes.CCNode: boolean isRelativeAnchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint anchorPoint_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize contentSize_
org.cocos2d.nodes.CCNode: float[] transformGL_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform transform_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform inverse_
org.cocos2d.nodes.CCNode: boolean isTransformDirty_
org.cocos2d.nodes.CCNode: boolean isInverseDirty_
org.cocos2d.nodes.CCNode: boolean isTransformGLDirty_
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint position_
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera camera_
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase grid_
org.cocos2d.nodes.CCNode: boolean visible_
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode parent_
org.cocos2d.nodes.CCNode: int tag_
org.cocos2d.nodes.CCNode: float vertexZ_
org.cocos2d.nodes.CCNode: int zOrder_
org.cocos2d.nodes.CCNode: java.util.List children_
org.cocos2d.nodes.CCNode: java.lang.Object userData
org.cocos2d.nodes.CCNode: boolean isRunning_
org.cocos2d.nodes.CCNode: java.util.Comparator zOrderComparator
org.cocos2d.nodes.CCNode: boolean $assertionsDisabled
org.cocos2d.nodes.CCNode: void <clinit>()
org.cocos2d.nodes.CCNode: float getRotation()
org.cocos2d.nodes.CCNode: void setRotation(float)
org.cocos2d.nodes.CCNode: float getScaleX()
org.cocos2d.nodes.CCNode: void setScaleX(float)
org.cocos2d.nodes.CCNode: float getScaleY()
org.cocos2d.nodes.CCNode: void setScaleY(float)
org.cocos2d.nodes.CCNode: void setScale(float)
org.cocos2d.nodes.CCNode: float getScale()
org.cocos2d.nodes.CCNode: void setSkewX(float)
org.cocos2d.nodes.CCNode: float getSkewX()
org.cocos2d.nodes.CCNode: void setSkewY(float)
org.cocos2d.nodes.CCNode: float getSkewY()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointInPixels()
org.cocos2d.nodes.CCNode: void setRelativeAnchorPoint(boolean)
org.cocos2d.nodes.CCNode: boolean getRelativeAnchorPoint()
org.cocos2d.nodes.CCNode: void setContentSize(org.cocos2d.types.CGSize)
org.cocos2d.nodes.CCNode: void setContentSize(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSize()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGSize getContentSizeRef()
org.cocos2d.nodes.CCNode: void setAnchorPoint(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setAnchorPoint(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPoint()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getAnchorPointRef()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGRect getBoundingBox()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPosition()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint getPositionRef()
org.cocos2d.nodes.CCNode: void setPosition(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void setPosition(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.opengl.CCCamera getCamera()
org.cocos2d.nodes.CCNode: org.cocos2d.grid.CCGridBase getGrid()
org.cocos2d.nodes.CCNode: void setGrid(org.cocos2d.grid.CCGridBase)
org.cocos2d.nodes.CCNode: boolean getVisible()
org.cocos2d.nodes.CCNode: void setVisible(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getParent()
org.cocos2d.nodes.CCNode: void setParent(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: int getTag()
org.cocos2d.nodes.CCNode: void setTag(int)
org.cocos2d.nodes.CCNode: float getVertexZ()
org.cocos2d.nodes.CCNode: void setVertexZ(float)
org.cocos2d.nodes.CCNode: int getZOrder()
org.cocos2d.nodes.CCNode: void _setZOrder(int)
org.cocos2d.nodes.CCNode: java.util.List getChildren()
org.cocos2d.nodes.CCNode: java.lang.Object getUserData()
org.cocos2d.nodes.CCNode: void setUserData(java.lang.Object)
org.cocos2d.nodes.CCNode: boolean isRunning()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode node()
org.cocos2d.nodes.CCNode: CCNode()
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode)
org.cocos2d.nodes.CCNode: void removeFromParentAndCleanup(boolean)
org.cocos2d.nodes.CCNode: void removeSelf()
org.cocos2d.nodes.CCNode: void removeChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void removeChildByTag(int,boolean)
org.cocos2d.nodes.CCNode: void removeAllChildren(boolean)
org.cocos2d.nodes.CCNode: org.cocos2d.nodes.CCNode getChildByTag(int)
org.cocos2d.nodes.CCNode: void detachChild(org.cocos2d.nodes.CCNode,boolean)
org.cocos2d.nodes.CCNode: void reorderChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void draw(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void visit(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transform(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: void transformAncestors(javax.microedition.khronos.opengles.GL10)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAllActions()
org.cocos2d.nodes.CCNode: void stopAction(org.cocos2d.actions.base.CCAction)
org.cocos2d.nodes.CCNode: void stopAction(int)
org.cocos2d.nodes.CCNode: org.cocos2d.actions.base.CCAction getAction(int)
org.cocos2d.nodes.CCNode: int numberOfRunningActions()
org.cocos2d.nodes.CCNode: void scheduleUpdate()
org.cocos2d.nodes.CCNode: void scheduleUpdate(int)
org.cocos2d.nodes.CCNode: void unscheduleUpdate()
org.cocos2d.nodes.CCNode: void schedule(java.lang.String)
org.cocos2d.nodes.CCNode: void schedule(java.lang.String,float)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void schedule(org.cocos2d.actions.UpdateCallback,float)
org.cocos2d.nodes.CCNode: void unschedule(java.lang.String)
org.cocos2d.nodes.CCNode: void unschedule(org.cocos2d.actions.UpdateCallback)
org.cocos2d.nodes.CCNode: void unscheduleAllSelectors()
org.cocos2d.nodes.CCNode: void resumeSchedulerAndActions()
org.cocos2d.nodes.CCNode: void pauseSchedulerAndActions()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToParentTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform parentToNodeTransform()
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform nodeToWorldTransform()
org.cocos2d.nodes.CCNode: void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGAffineTransform worldToNodeTransform()
org.cocos2d.nodes.CCNode: void worldToNodeTransform(org.cocos2d.types.CGAffineTransform)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpace(float,float)
org.cocos2d.nodes.CCNode: void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent)
org.cocos2d.nodes.CCNode: org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint)
org.cocos2d.nodes.CCNode: void childrenAlloc()
org.cocos2d.nodes.CCNode: void insertChild(org.cocos2d.nodes.CCNode,int)
org.cocos2d.nodes.CCNode: void cleanup()
org.cocos2d.nodes.CCNode: java.lang.String toString()
org.cocos2d.nodes.CCNode: void onEnter()
org.cocos2d.nodes.CCNode: void onEnterTransitionDidFinish()
org.cocos2d.nodes.CCNode: void onExit()
org.cocos2d.nodes.CCNode: float RENDER_IN_SUBPIXEL(float)
org.cocos2d.nodes.CCNode: int access$0(org.cocos2d.nodes.CCNode)
com.ozateck.okamirun.Shonen
com.ozateck.okamirun.Shonen: void jumpDone(java.lang.Object)
com.ozateck.okamirun.Hituji
com.ozateck.okamirun.Hituji: void dieDone(java.lang.Object)
com.ozateck.okamirun.Okami
com.ozateck.okamirun.Okami: void eatDone(java.lang.Object)
com.ozateck.okamirun.Plane
com.ozateck.okamirun.Plane: void moveDone(java.lang.Object)
com.ozateck.okamirun.Obstacle: void moveDone(java.lang.Object)
com.ozateck.okamirun.Daruma
com.ozateck.okamirun.Daruma: void moveDone(java.lang.Object)
com.ozateck.okamirun.Obstacle: void moveDone(java.lang.Object)
com.ozateck.okamirun.Obstacle
com.ozateck.okamirun.Obstacle: void moveDone(java.lang.Object)
com.ozateck.okamirun.Saku
com.ozateck.okamirun.Saku: void moveDone(java.lang.Object)
com.ozateck.okamirun.Obstacle: void moveDone(java.lang.Object)
com.ozateck.okamirun.GamePlayLayer
com.ozateck.okamirun.GamePlayLayer: void gameLogic(float)
com.ozateck.okamirun.GamePlayLayer: void obstacleLogic(float)
org.cocos2d.tests.EffectsTest
org.cocos2d.tests.ParallaxTest
org.cocos2d.tests.EaseActionsTest
org.cocos2d.tests.EffectsAdvancedTest
org.cocos2d.tests.Box2dTest
org.cocos2d.tests.FontTest
org.cocos2d.tests.SchedulerTest
org.cocos2d.tests.AtlasTest
org.cocos2d.tests.MenuTest
org.cocos2d.tests.DrawPrimitivesTest
org.cocos2d.tests.SceneTest
org.cocos2d.tests.ClickAndMoveTest
org.cocos2d.tests.ParticleTest
org.cocos2d.tests.ActionManagerTest
org.cocos2d.tests.CocosNodeTest
org.cocos2d.tests.ActionsTest
org.cocos2d.tests.SpritesTest
org.cocos2d.tests.MotionStreakTest
com.ozateck.okamirun.MainActivity
org.cocos2d.tests.TileMapTest
org.cocos2d.tests.RotateWorldTest
org.cocos2d.tests.TransitionsTest
org.cocos2d.Cocos2D
