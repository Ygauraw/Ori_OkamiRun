com.badlogic.gdx.math.CatmullRomSpline -> com.badlogic.gdx.math.CatmullRomSpline:
    long serialVersionUID -> serialVersionUID
    java.util.List controlPoints -> controlPoints
    void add(com.badlogic.gdx.math.Vector3) -> add
    java.util.List getControlPoints() -> getControlPoints
    java.util.List getPath(int) -> getPath
    java.util.List getTangents(int) -> getTangents
    java.util.List getTangentNormals2D(int) -> getTangentNormals2D
    java.util.List getTangentNormals(int,com.badlogic.gdx.math.Vector3) -> getTangentNormals
    java.util.List getTangentNormals(int,java.util.List) -> getTangentNormals
com.badlogic.gdx.math.EarCutTriangulator -> com.badlogic.gdx.math.EarCutTriangulator:
    int concaveCount -> concaveCount
    java.util.List triangulate(java.util.List) -> triangulate
    boolean polygonClockwise(java.util.List) -> polygonClockwise
    int[] classifyPoints(java.util.List) -> classifyPoints
    boolean convex(float,float,float,float,float,float) -> convex
    float area(float,float,float,float,float,float) -> area
    boolean triangleContainsPoint(java.util.List,int[],float,float,float,float,float,float) -> triangleContainsPoint
    boolean ear(java.util.List,int[],float,float,float,float,float,float) -> ear
    void cutEar(java.util.List,java.util.List,int) -> cutEar
    void updatePolygon(java.util.List,int) -> updatePolygon
com.badlogic.gdx.math.Frustum -> com.badlogic.gdx.math.Frustum:
    long serialVersionUID -> serialVersionUID
    java.util.List planes -> planes
    float near -> near
    float far -> far
    float fov -> fov
    float aspect -> aspect
    float near_width -> near_width
    float near_height -> near_height
    float far_width -> far_width
    float far_height -> far_height
    float tang -> tang
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector3 X -> X
    com.badlogic.gdx.math.Vector3 Y -> Y
    com.badlogic.gdx.math.Vector3 Z -> Z
    com.badlogic.gdx.math.Vector3 near_tl -> near_tl
    com.badlogic.gdx.math.Vector3 near_tr -> near_tr
    com.badlogic.gdx.math.Vector3 near_bl -> near_bl
    com.badlogic.gdx.math.Vector3 near_br -> near_br
    com.badlogic.gdx.math.Vector3 far_tl -> far_tl
    com.badlogic.gdx.math.Vector3 far_tr -> far_tr
    com.badlogic.gdx.math.Vector3 far_bl -> far_bl
    com.badlogic.gdx.math.Vector3 far_br -> far_br
    com.badlogic.gdx.math.Vector3 near_center -> near_center
    com.badlogic.gdx.math.Vector3 far_center -> far_center
    com.badlogic.gdx.math.collision.Ray ray -> ray
    java.util.List getPlanes() -> getPlanes
    void addPlane(com.badlogic.gdx.math.Plane) -> addPlane
    void setCameraParameters(float,float,float,float) -> setCameraParameters
    void setCameraOrientation(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setCameraOrientation
    java.lang.String toString() -> toString
    boolean pointInFrustum(com.badlogic.gdx.math.Vector3) -> pointInFrustum
    boolean sphereInFrustum(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustum
    boolean sphereInFrustumWithoutNearFar(com.badlogic.gdx.math.Vector3,float) -> sphereInFrustumWithoutNearFar
    boolean boundsInFrustum(com.badlogic.gdx.math.collision.BoundingBox) -> boundsInFrustum
    com.badlogic.gdx.math.collision.Ray calculatePickRay(float,float,float,float,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> calculatePickRay
com.badlogic.gdx.math.Intersector -> com.badlogic.gdx.math.Intersector:
    com.badlogic.gdx.math.Vector3 v0 -> v0
    com.badlogic.gdx.math.Vector3 v1 -> v1
    com.badlogic.gdx.math.Vector3 v2 -> v2
    com.badlogic.gdx.math.Plane p -> p
    com.badlogic.gdx.math.Vector3 i -> i
    com.badlogic.gdx.math.Vector3 dir -> dir
    com.badlogic.gdx.math.Vector3 start -> start
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 best -> best
    com.badlogic.gdx.math.Vector3 tmp1 -> tmp1
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3 -> tmp3
    float getLowestPositiveRoot(float,float,float) -> getLowestPositiveRoot
    boolean isPointInTriangle(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> isPointInTriangle
    boolean intersectSegmentPlane(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectSegmentPlane
    boolean isPointInPolygon(java.util.List,com.badlogic.gdx.math.Vector2) -> isPointInPolygon
    float distanceLinePoint(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> distanceLinePoint
    boolean intersectSegmentCircle(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> intersectSegmentCircle
    float intersectSegmentCircleDisplace(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float,com.badlogic.gdx.math.Vector2) -> intersectSegmentCircleDisplace
    boolean intersectRayPlane(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Plane,com.badlogic.gdx.math.Vector3) -> intersectRayPlane
    boolean intersectRayTriangle(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> intersectRayTriangle
    boolean intersectRaySphere(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.Vector3,float,com.badlogic.gdx.math.Vector3) -> intersectRaySphere
    boolean intersectRayBoundsFast(com.badlogic.gdx.math.collision.Ray,com.badlogic.gdx.math.collision.BoundingBox) -> intersectRayBoundsFast
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,float[],short[],int,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRayTriangles(com.badlogic.gdx.math.collision.Ray,java.util.List,com.badlogic.gdx.math.Vector3) -> intersectRayTriangles
    boolean intersectRectangles(com.badlogic.gdx.math.Rectangle,com.badlogic.gdx.math.Rectangle) -> intersectRectangles
    boolean intersectLines(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectLines
    boolean intersectSegments(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> intersectSegments
    float det(float,float,float,float) -> det
    double detd(double,double,double,double) -> detd
com.badlogic.gdx.math.Matrix3 -> com.badlogic.gdx.math.Matrix3:
    float DEGREE_TO_RAD -> DEGREE_TO_RAD
    float[] vals -> vals
    com.badlogic.gdx.math.Matrix3 idt() -> idt
    com.badlogic.gdx.math.Matrix3 mul(com.badlogic.gdx.math.Matrix3) -> mul
    com.badlogic.gdx.math.Matrix3 setToRotation(float) -> setToRotation
    com.badlogic.gdx.math.Matrix3 setToTranslation(float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix3 setToScaling(float,float) -> setToScaling
    java.lang.String toString() -> toString
    float det() -> det
    com.badlogic.gdx.math.Matrix3 inv() -> inv
    void main(java.lang.String[]) -> main
    com.badlogic.gdx.math.Matrix3 set(com.badlogic.gdx.math.Matrix3) -> set
    float[] getValues() -> getValues
com.badlogic.gdx.math.Matrix4 -> com.badlogic.gdx.math.Matrix4:
    long serialVersionUID -> serialVersionUID
    int M00 -> M00
    int M01 -> M01
    int M02 -> M02
    int M03 -> M03
    int M10 -> M10
    int M11 -> M11
    int M12 -> M12
    int M13 -> M13
    int M20 -> M20
    int M21 -> M21
    int M22 -> M22
    int M23 -> M23
    int M30 -> M30
    int M31 -> M31
    int M32 -> M32
    int M33 -> M33
    float[] tmp -> tmp
    float[] val -> val
    com.badlogic.gdx.math.Quaternion quat -> quat
    com.badlogic.gdx.math.Vector3 l_vez -> l_vez
    com.badlogic.gdx.math.Vector3 l_vex -> l_vex
    com.badlogic.gdx.math.Vector3 l_vey -> l_vey
    com.badlogic.gdx.math.Vector3 tmpVec -> tmpVec
    com.badlogic.gdx.math.Matrix4 tmpMat -> tmpMat
    com.badlogic.gdx.math.Vector3 right -> right
    com.badlogic.gdx.math.Vector3 tmpForward -> tmpForward
    com.badlogic.gdx.math.Vector3 tmpUp -> tmpUp
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix4) -> set
    com.badlogic.gdx.math.Matrix4 set(float[]) -> set
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Quaternion) -> set
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Matrix4 cpy() -> cpy
    com.badlogic.gdx.math.Matrix4 trn(com.badlogic.gdx.math.Vector3) -> trn
    com.badlogic.gdx.math.Matrix4 trn(float,float,float) -> trn
    float[] getValues() -> getValues
    com.badlogic.gdx.math.Matrix4 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Matrix4 tra() -> tra
    com.badlogic.gdx.math.Matrix4 idt() -> idt
    com.badlogic.gdx.math.Matrix4 inv() -> inv
    float det() -> det
    com.badlogic.gdx.math.Matrix4 setToProjection(float,float,float,float) -> setToProjection
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho2D(float,float,float,float,float,float) -> setToOrtho2D
    com.badlogic.gdx.math.Matrix4 setToOrtho(float,float,float,float,float,float) -> setToOrtho
    com.badlogic.gdx.math.Matrix4 setToTranslation(com.badlogic.gdx.math.Vector3) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslation(float,float,float) -> setToTranslation
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToTranslationAndScaling(float,float,float,float,float,float) -> setToTranslationAndScaling
    com.badlogic.gdx.math.Matrix4 setToRotation(com.badlogic.gdx.math.Vector3,float) -> setToRotation
    com.badlogic.gdx.math.Matrix4 setFromEulerAngles(float,float,float) -> setFromEulerAngles
    com.badlogic.gdx.math.Matrix4 setToScaling(com.badlogic.gdx.math.Vector3) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToScaling(float,float,float) -> setToScaling
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToLookAt(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToLookAt
    com.badlogic.gdx.math.Matrix4 setToWorld(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> setToWorld
    java.lang.String toString() -> toString
    void lerp(com.badlogic.gdx.math.Matrix4,float) -> lerp
    com.badlogic.gdx.math.Matrix4 set(com.badlogic.gdx.math.Matrix3) -> set
com.badlogic.gdx.math.Plane -> com.badlogic.gdx.math.Plane:
    com.badlogic.gdx.math.Vector3 normal -> normal
    float d -> d
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(float,float,float,float) -> set
    float distance(com.badlogic.gdx.math.Vector3) -> distance
    com.badlogic.gdx.math.Plane$PlaneSide testPoint(com.badlogic.gdx.math.Vector3) -> testPoint
    boolean isFrontFacing(com.badlogic.gdx.math.Vector3) -> isFrontFacing
    com.badlogic.gdx.math.Vector3 getNormal() -> getNormal
    float getD() -> getD
    void set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    void set(com.badlogic.gdx.math.Plane) -> set
    java.lang.String toString() -> toString
com.badlogic.gdx.math.Plane$PlaneSide -> com.badlogic.gdx.math.Plane$PlaneSide:
    com.badlogic.gdx.math.Plane$PlaneSide OnPlane -> OnPlane
    com.badlogic.gdx.math.Plane$PlaneSide Back -> Back
    com.badlogic.gdx.math.Plane$PlaneSide Front -> Front
    com.badlogic.gdx.math.Plane$PlaneSide[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.math.Plane$PlaneSide[] values() -> values
    com.badlogic.gdx.math.Plane$PlaneSide valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.math.Quaternion -> com.badlogic.gdx.math.Quaternion:
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float z -> z
    float w -> w
    com.badlogic.gdx.math.Quaternion set(float,float,float,float) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Quaternion) -> set
    com.badlogic.gdx.math.Quaternion set(com.badlogic.gdx.math.Vector3,float) -> set
    com.badlogic.gdx.math.Quaternion cpy() -> cpy
    float len() -> len
    com.badlogic.gdx.math.Quaternion nor() -> nor
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Quaternion setEulerAngles(float,float,float) -> setEulerAngles
com.badlogic.gdx.math.Rectangle -> com.badlogic.gdx.math.Rectangle:
    float x -> x
    float y -> y
    float width -> width
    float height -> height
    float getX() -> getX
    void setX(float) -> setX
    float getY() -> getY
    void setY(float) -> setY
    float getWidth() -> getWidth
    void setWidth(float) -> setWidth
    float getHeight() -> getHeight
    void setHeight(float) -> setHeight
com.badlogic.gdx.math.Vector2 -> com.badlogic.gdx.math.Vector2:
    com.badlogic.gdx.math.Vector2 tmp -> tmp
    float x -> x
    float y -> y
    com.badlogic.gdx.math.Vector2 cpy() -> cpy
    float len() -> len
    float len2() -> len2
    com.badlogic.gdx.math.Vector2 set(com.badlogic.gdx.math.Vector2) -> set
    com.badlogic.gdx.math.Vector2 set(float,float) -> set
    com.badlogic.gdx.math.Vector2 sub(com.badlogic.gdx.math.Vector2) -> sub
    com.badlogic.gdx.math.Vector2 nor() -> nor
    com.badlogic.gdx.math.Vector2 add(com.badlogic.gdx.math.Vector2) -> add
    com.badlogic.gdx.math.Vector2 add(float,float) -> add
    float dot(com.badlogic.gdx.math.Vector2) -> dot
    com.badlogic.gdx.math.Vector2 mul(float) -> mul
    float dst(com.badlogic.gdx.math.Vector2) -> dst
    float dst(float,float) -> dst
    float dst2(com.badlogic.gdx.math.Vector2) -> dst2
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.Vector2 sub(float,float) -> sub
    com.badlogic.gdx.math.Vector2 tmp() -> tmp
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Matrix3) -> mul
com.badlogic.gdx.math.Vector3 -> com.badlogic.gdx.math.Vector3:
    long serialVersionUID -> serialVersionUID
    float x -> x
    float y -> y
    float z -> z
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.Vector3 tmp2 -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3 -> tmp3
    com.badlogic.gdx.math.Vector3 set(float,float,float) -> set
    com.badlogic.gdx.math.Vector3 set(com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.Vector3 set(float[]) -> set
    com.badlogic.gdx.math.Vector3 cpy() -> cpy
    com.badlogic.gdx.math.Vector3 tmp() -> tmp
    com.badlogic.gdx.math.Vector3 tmp2() -> tmp2
    com.badlogic.gdx.math.Vector3 tmp3() -> tmp3
    com.badlogic.gdx.math.Vector3 add(com.badlogic.gdx.math.Vector3) -> add
    com.badlogic.gdx.math.Vector3 add(float,float,float) -> add
    com.badlogic.gdx.math.Vector3 add(float) -> add
    com.badlogic.gdx.math.Vector3 sub(com.badlogic.gdx.math.Vector3) -> sub
    com.badlogic.gdx.math.Vector3 sub(float,float,float) -> sub
    com.badlogic.gdx.math.Vector3 sub(float) -> sub
    com.badlogic.gdx.math.Vector3 mul(float) -> mul
    com.badlogic.gdx.math.Vector3 div(float) -> div
    float len() -> len
    float len2() -> len2
    boolean idt(com.badlogic.gdx.math.Vector3) -> idt
    float dst(com.badlogic.gdx.math.Vector3) -> dst
    float dist2(com.badlogic.gdx.math.Vector3) -> dist2
    com.badlogic.gdx.math.Vector3 nor() -> nor
    float dot(com.badlogic.gdx.math.Vector3) -> dot
    com.badlogic.gdx.math.Vector3 crs(com.badlogic.gdx.math.Vector3) -> crs
    com.badlogic.gdx.math.Vector3 crs(float,float,float) -> crs
    com.badlogic.gdx.math.Vector3 mul(com.badlogic.gdx.math.Matrix4) -> mul
    com.badlogic.gdx.math.Vector3 prj(com.badlogic.gdx.math.Matrix4) -> prj
    com.badlogic.gdx.math.Vector3 rot(com.badlogic.gdx.math.Matrix4) -> rot
    boolean isUnit() -> isUnit
    boolean isZero() -> isZero
    com.badlogic.gdx.math.Vector3 lerp(com.badlogic.gdx.math.Vector3,float) -> lerp
    com.badlogic.gdx.math.Vector3 slerp(com.badlogic.gdx.math.Vector3,float) -> slerp
    java.lang.String toString() -> toString
    float dot(float,float,float) -> dot
    float dst2(com.badlogic.gdx.math.Vector3) -> dst2
    float dst2(float,float,float) -> dst2
    float dst(float,float,float) -> dst
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.badlogic.gdx.math.Vector3 scale(float,float,float) -> scale
com.badlogic.gdx.math.WindowedMean -> com.badlogic.gdx.math.WindowedMean:
    float[] values -> values
    int added_values -> added_values
    int last_value -> last_value
    float mean -> mean
    boolean dirty -> dirty
    boolean hasEnoughData() -> hasEnoughData
    void clear() -> clear
    void addValue(float) -> addValue
    float getMean() -> getMean
    float getOldest() -> getOldest
    float getLatest() -> getLatest
    float standardDeviation() -> standardDeviation
com.badlogic.gdx.math.collision.BoundingBox -> com.badlogic.gdx.math.collision.BoundingBox:
    long serialVersionUID -> serialVersionUID
    com.badlogic.gdx.math.Vector3[] crn -> crn
    com.badlogic.gdx.math.Vector3 min -> min
    com.badlogic.gdx.math.Vector3 max -> max
    com.badlogic.gdx.math.Vector3 cnt -> cnt
    com.badlogic.gdx.math.Vector3 dim -> dim
    boolean crn_dirty -> crn_dirty
    com.badlogic.gdx.math.Vector3 getCenter() -> getCenter
    void updateCorners() -> updateCorners
    com.badlogic.gdx.math.Vector3[] getCorners() -> getCorners
    com.badlogic.gdx.math.Vector3 getDimensions() -> getDimensions
    com.badlogic.gdx.math.Vector3 getMin() -> getMin
    com.badlogic.gdx.math.Vector3 getMax() -> getMax
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.collision.BoundingBox) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(com.badlogic.gdx.math.Vector3[]) -> set
    com.badlogic.gdx.math.collision.BoundingBox set(java.util.List) -> set
    com.badlogic.gdx.math.collision.BoundingBox inf() -> inf
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.Vector3) -> ext
    com.badlogic.gdx.math.collision.BoundingBox clr() -> clr
    boolean isValid() -> isValid
    com.badlogic.gdx.math.collision.BoundingBox ext(com.badlogic.gdx.math.collision.BoundingBox) -> ext
    com.badlogic.gdx.math.collision.BoundingBox mul(com.badlogic.gdx.math.Matrix4) -> mul
    boolean contains(com.badlogic.gdx.math.collision.BoundingBox) -> contains
    boolean contains(com.badlogic.gdx.math.Vector3) -> contains
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.BoundingBox ext(float,float,float) -> ext
    float min(float,float) -> min
    float max(float,float) -> max
com.badlogic.gdx.math.collision.Ray -> com.badlogic.gdx.math.collision.Ray:
    com.badlogic.gdx.math.Vector3 origin -> origin
    com.badlogic.gdx.math.Vector3 direction -> direction
    com.badlogic.gdx.math.Vector3 tmp -> tmp
    com.badlogic.gdx.math.collision.Ray cpy() -> cpy
    com.badlogic.gdx.math.Vector3 getEndPoint(float) -> getEndPoint
    com.badlogic.gdx.math.collision.Ray mul(com.badlogic.gdx.math.Matrix4) -> mul
    java.lang.String toString() -> toString
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.Vector3,com.badlogic.gdx.math.Vector3) -> set
    com.badlogic.gdx.math.collision.Ray set(float,float,float,float,float,float) -> set
    com.badlogic.gdx.math.collision.Ray set(com.badlogic.gdx.math.collision.Ray) -> set
com.badlogic.gdx.math.collision.Segment -> com.badlogic.gdx.math.collision.Segment:
    com.badlogic.gdx.math.Vector3 a -> a
    com.badlogic.gdx.math.Vector3 b -> b
com.badlogic.gdx.math.collision.Sphere -> com.badlogic.gdx.math.collision.Sphere:
    float radius -> radius
    com.badlogic.gdx.math.Vector3 center -> center
com.badlogic.gdx.physics.box2d.Body -> com.badlogic.gdx.physics.box2d.Body:
    long addr -> addr
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.World world -> world
    java.util.ArrayList fixtures -> fixtures
    java.util.ArrayList joints -> joints
    java.lang.Object userData -> userData
    com.badlogic.gdx.physics.box2d.Transform transform -> transform
    com.badlogic.gdx.math.Vector2 position -> position
    com.badlogic.gdx.math.Vector2 worldCenter -> worldCenter
    com.badlogic.gdx.math.Vector2 localCenter -> localCenter
    com.badlogic.gdx.math.Vector2 linearVelocity -> linearVelocity
    com.badlogic.gdx.physics.box2d.MassData massData -> massData
    com.badlogic.gdx.math.Vector2 localPoint -> localPoint
    com.badlogic.gdx.math.Vector2 worldVector -> worldVector
    com.badlogic.gdx.math.Vector2 localPoint2 -> localPoint2
    com.badlogic.gdx.math.Vector2 localVector -> localVector
    com.badlogic.gdx.math.Vector2 linVelWorld -> linVelWorld
    com.badlogic.gdx.math.Vector2 linVelLoc -> linVelLoc
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.FixtureDef) -> createFixture
    long jniCreateFixture(long,long,float,float,float,boolean,short,short,short) -> jniCreateFixture
    com.badlogic.gdx.physics.box2d.Fixture createFixture(com.badlogic.gdx.physics.box2d.Shape,float) -> createFixture
    long jniCreateFixture(long,long,float) -> jniCreateFixture
    void destroyFixture(com.badlogic.gdx.physics.box2d.Fixture) -> destroyFixture
    void jniDestroyFixture(long,long) -> jniDestroyFixture
    void setTransform(com.badlogic.gdx.math.Vector2,float) -> setTransform
    void jniSetTransform(long,float,float,float) -> jniSetTransform
    com.badlogic.gdx.physics.box2d.Transform getTransform() -> getTransform
    void jniGetTransform(long,float[]) -> jniGetTransform
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void jniGetPosition(long,float[]) -> jniGetPosition
    float getAngle() -> getAngle
    float jniGetAngle(long) -> jniGetAngle
    com.badlogic.gdx.math.Vector2 getWorldCenter() -> getWorldCenter
    void jniGetWorldCenter(long,float[]) -> jniGetWorldCenter
    com.badlogic.gdx.math.Vector2 getLocalCenter() -> getLocalCenter
    void jniGetLocalCenter(long,float[]) -> jniGetLocalCenter
    void setLinearVelocity(com.badlogic.gdx.math.Vector2) -> setLinearVelocity
    void jniSetLinearVelocity(long,float,float) -> jniSetLinearVelocity
    com.badlogic.gdx.math.Vector2 getLinearVelocity() -> getLinearVelocity
    void jniGetLinearVelocity(long,float[]) -> jniGetLinearVelocity
    void setAngularVelocity(float) -> setAngularVelocity
    void jniSetAngularVelocity(long,float) -> jniSetAngularVelocity
    float getAngularVelocity() -> getAngularVelocity
    float jniGetAngularVelocity(long) -> jniGetAngularVelocity
    void applyForce(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> applyForce
    void jniApplyForce(long,float,float,float,float) -> jniApplyForce
    void applyTorque(float) -> applyTorque
    void jniApplyTorque(long,float) -> jniApplyTorque
    void applyLinearImpulse(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> applyLinearImpulse
    void jniApplyLinearImpulse(long,float,float,float,float) -> jniApplyLinearImpulse
    void applyAngularImpulse(float) -> applyAngularImpulse
    void jniApplyAngularImpulse(long,float) -> jniApplyAngularImpulse
    float getMass() -> getMass
    float jniGetMass(long) -> jniGetMass
    float getInertia() -> getInertia
    float jniGetInertia(long) -> jniGetInertia
    com.badlogic.gdx.physics.box2d.MassData getMassData() -> getMassData
    void jniGetMassData(long,float[]) -> jniGetMassData
    void setMassData(com.badlogic.gdx.physics.box2d.MassData) -> setMassData
    void jniSetMassData(long,float,float,float,float) -> jniSetMassData
    void resetMassData() -> resetMassData
    void jniResetMassData(long) -> jniResetMassData
    com.badlogic.gdx.math.Vector2 getWorldPoint(com.badlogic.gdx.math.Vector2) -> getWorldPoint
    void jniGetWorldPoint(long,float,float,float[]) -> jniGetWorldPoint
    com.badlogic.gdx.math.Vector2 getWorldVector(com.badlogic.gdx.math.Vector2) -> getWorldVector
    void jniGetWorldVector(long,float,float,float[]) -> jniGetWorldVector
    com.badlogic.gdx.math.Vector2 getLocalPoint(com.badlogic.gdx.math.Vector2) -> getLocalPoint
    void jniGetLocalPoint(long,float,float,float[]) -> jniGetLocalPoint
    com.badlogic.gdx.math.Vector2 getLocalVector(com.badlogic.gdx.math.Vector2) -> getLocalVector
    void jniGetLocalVector(long,float,float,float[]) -> jniGetLocalVector
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromWorldPoint(com.badlogic.gdx.math.Vector2) -> getLinearVelocityFromWorldPoint
    void jniGetLinearVelocityFromWorldPoint(long,float,float,float[]) -> jniGetLinearVelocityFromWorldPoint
    com.badlogic.gdx.math.Vector2 getLinearVelocityFromLocalPoint(com.badlogic.gdx.math.Vector2) -> getLinearVelocityFromLocalPoint
    void jniGetLinearVelocityFromLocalPoint(long,float,float,float[]) -> jniGetLinearVelocityFromLocalPoint
    float getLinearDamping() -> getLinearDamping
    float jniGetLinearDamping(long) -> jniGetLinearDamping
    void setLinearDamping(float) -> setLinearDamping
    void jniSetLinearDamping(long,float) -> jniSetLinearDamping
    float getAngularDamping() -> getAngularDamping
    float jniGetAngularDamping(long) -> jniGetAngularDamping
    void setAngularDamping(float) -> setAngularDamping
    void jniSetAngularDamping(long,float) -> jniSetAngularDamping
    void setType(com.badlogic.gdx.physics.box2d.BodyDef$BodyType) -> setType
    void jniSetType(long,int) -> jniSetType
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType getType() -> getType
    int jniGetType(long) -> jniGetType
    void setBullet(boolean) -> setBullet
    void jniSetBullet(long,boolean) -> jniSetBullet
    boolean isBullet() -> isBullet
    boolean jniIsBullet(long) -> jniIsBullet
    void setSleepingAllowed(boolean) -> setSleepingAllowed
    void jniSetSleepingAllowed(long,boolean) -> jniSetSleepingAllowed
    boolean isSleepingAllowed() -> isSleepingAllowed
    boolean jniIsSleepingAllowed(long) -> jniIsSleepingAllowed
    void setAwake(boolean) -> setAwake
    void jniSetAwake(long,boolean) -> jniSetAwake
    boolean isAwake() -> isAwake
    boolean jniIsAwake(long) -> jniIsAwake
    void setActive(boolean) -> setActive
    void jniSetActive(long,boolean) -> jniSetActive
    boolean isActive() -> isActive
    boolean jniIsActive(long) -> jniIsActive
    void setFixedRotation(boolean) -> setFixedRotation
    void jniSetFixedRotation(long,boolean) -> jniSetFixedRotation
    boolean isFixedRotation() -> isFixedRotation
    boolean jniIsFixedRotation(long) -> jniIsFixedRotation
    java.util.ArrayList getFixtureList() -> getFixtureList
    java.util.ArrayList getJointList() -> getJointList
    com.badlogic.gdx.physics.box2d.World getWorld() -> getWorld
    java.lang.Object getUserData() -> getUserData
    void setUserData(java.lang.Object) -> setUserData
com.badlogic.gdx.physics.box2d.BodyDef -> com.badlogic.gdx.physics.box2d.BodyDef:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType type -> type
    com.badlogic.gdx.math.Vector2 position -> position
    float angle -> angle
    com.badlogic.gdx.math.Vector2 linearVelocity -> linearVelocity
    float angularVelocity -> angularVelocity
    float linearDamping -> linearDamping
    float angularDamping -> angularDamping
    boolean allowSleep -> allowSleep
    boolean awake -> awake
    boolean fixedRotation -> fixedRotation
    boolean bullet -> bullet
    boolean active -> active
    float inertiaScale -> inertiaScale
com.badlogic.gdx.physics.box2d.BodyDef$BodyType -> com.badlogic.gdx.physics.box2d.BodyDef$BodyType:
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType StaticBody -> StaticBody
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType KinematicBody -> KinematicBody
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType DynamicBody -> DynamicBody
    int value -> value
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] ENUM$VALUES -> ENUM$VALUES
    int getValue() -> getValue
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType[] values() -> values
    com.badlogic.gdx.physics.box2d.BodyDef$BodyType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.CircleShape -> com.badlogic.gdx.physics.box2d.CircleShape:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 position -> position
    long newCircleShape() -> newCircleShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void jniGetPosition(long,float[]) -> jniGetPosition
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
    void jniSetPosition(long,float,float) -> jniSetPosition
com.badlogic.gdx.physics.box2d.Contact -> com.badlogic.gdx.physics.box2d.Contact:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.World world -> world
    com.badlogic.gdx.physics.box2d.WorldManifold worldManifold -> worldManifold
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.WorldManifold GetWorldManifold() -> GetWorldManifold
    int jniGetWorldManifold(long,float[]) -> jniGetWorldManifold
    boolean isTouching() -> isTouching
    boolean jniIsTouching(long) -> jniIsTouching
    void setEnabled(boolean) -> setEnabled
    void jniSetEnabled(long,boolean) -> jniSetEnabled
    boolean isEnabled() -> isEnabled
    boolean jniIsEnabled(long) -> jniIsEnabled
    com.badlogic.gdx.physics.box2d.Fixture getFixtureA() -> getFixtureA
    long jniGetFixtureA(long) -> jniGetFixtureA
    com.badlogic.gdx.physics.box2d.Fixture getFixtureB() -> getFixtureB
    long jniGetFixtureB(long) -> jniGetFixtureB
com.badlogic.gdx.physics.box2d.ContactFilter -> com.badlogic.gdx.physics.box2d.a:
    boolean shouldCollide$41f686cf() -> a
com.badlogic.gdx.physics.box2d.ContactListener -> com.badlogic.gdx.physics.box2d.c:
com.badlogic.gdx.physics.box2d.DestructionListener -> com.badlogic.gdx.physics.box2d.d:
com.badlogic.gdx.physics.box2d.Filter -> com.badlogic.gdx.physics.box2d.Filter:
    short categoryBits -> categoryBits
    short maskBits -> maskBits
    short groupIndex -> groupIndex
com.badlogic.gdx.physics.box2d.Fixture -> com.badlogic.gdx.physics.box2d.Fixture:
    com.badlogic.gdx.physics.box2d.Body body -> body
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Shape shape -> shape
    java.lang.Object userData -> userData
    short[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.Filter filter -> filter
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    int jniGetType(long) -> jniGetType
    com.badlogic.gdx.physics.box2d.Shape getShape() -> getShape
    long jniGetShape(long) -> jniGetShape
    void setSensor(boolean) -> setSensor
    void jniSetSensor(long,boolean) -> jniSetSensor
    boolean isSensor() -> isSensor
    boolean jniIsSensor(long) -> jniIsSensor
    void setFilterData(com.badlogic.gdx.physics.box2d.Filter) -> setFilterData
    void jniSetFilterData(long,short,short,short) -> jniSetFilterData
    com.badlogic.gdx.physics.box2d.Filter getFilterData() -> getFilterData
    void jniGetFilterData(long,short[]) -> jniGetFilterData
    com.badlogic.gdx.physics.box2d.Body getBody() -> getBody
    boolean testPoint(com.badlogic.gdx.math.Vector2) -> testPoint
    boolean jniTestPoint(long,float,float) -> jniTestPoint
    void setDensity(float) -> setDensity
    void jniSetDensity(long,float) -> jniSetDensity
    float getDensity() -> getDensity
    float jniGetDensity(long) -> jniGetDensity
    float getFriction() -> getFriction
    float jniGetFriction(long) -> jniGetFriction
    void setFriction(float) -> setFriction
    void jniSetFriction(long,float) -> jniSetFriction
    float getRestitution() -> getRestitution
    float jniGetRestitution(long) -> jniGetRestitution
    void setRestitution(float) -> setRestitution
    void jniSetRestitution(long,float) -> jniSetRestitution
    void setUserData(java.lang.Object) -> setUserData
    java.lang.Object getUserData() -> getUserData
com.badlogic.gdx.physics.box2d.FixtureDef -> com.badlogic.gdx.physics.box2d.FixtureDef:
    com.badlogic.gdx.physics.box2d.Shape shape -> shape
    float friction -> friction
    float restitution -> restitution
    float density -> density
    boolean isSensor -> isSensor
    com.badlogic.gdx.physics.box2d.Filter filter -> filter
com.badlogic.gdx.physics.box2d.Joint -> com.badlogic.gdx.physics.box2d.Joint:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.World world -> world
    float[] tmp -> tmp
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeA -> jointEdgeA
    com.badlogic.gdx.physics.box2d.JointEdge jointEdgeB -> jointEdgeB
    com.badlogic.gdx.math.Vector2 anchorA -> anchorA
    com.badlogic.gdx.math.Vector2 anchorB -> anchorB
    com.badlogic.gdx.math.Vector2 reactionForce -> reactionForce
    com.badlogic.gdx.physics.box2d.JointDef$JointType getType() -> getType
    int jniGetType(long) -> jniGetType
    com.badlogic.gdx.physics.box2d.Body getBodyA() -> getBodyA
    long jniGetBodyA(long) -> jniGetBodyA
    com.badlogic.gdx.physics.box2d.Body getBodyB() -> getBodyB
    long jniGetBodyB(long) -> jniGetBodyB
    com.badlogic.gdx.math.Vector2 getAnchorA() -> getAnchorA
    void jniGetAnchorA(long,float[]) -> jniGetAnchorA
    com.badlogic.gdx.math.Vector2 getAnchorB() -> getAnchorB
    void jniGetAnchorB(long,float[]) -> jniGetAnchorB
    com.badlogic.gdx.math.Vector2 getReactionForce(float) -> getReactionForce
    void jniGetReactionForce(long,float,float[]) -> jniGetReactionForce
    float getReactionTorque(float) -> getReactionTorque
    float jniGetReactionTorque(long,float) -> jniGetReactionTorque
    boolean isActive() -> isActive
    boolean jniIsActive(long) -> jniIsActive
com.badlogic.gdx.physics.box2d.JointDef -> com.badlogic.gdx.physics.box2d.JointDef:
    com.badlogic.gdx.physics.box2d.JointDef$JointType type -> type
    com.badlogic.gdx.physics.box2d.Body bodyA -> bodyA
    com.badlogic.gdx.physics.box2d.Body bodyB -> bodyB
    boolean collideConnected -> collideConnected
com.badlogic.gdx.physics.box2d.JointDef$JointType -> com.badlogic.gdx.physics.box2d.JointDef$JointType:
    com.badlogic.gdx.physics.box2d.JointDef$JointType Unknown -> Unknown
    com.badlogic.gdx.physics.box2d.JointDef$JointType RevoluteJoint -> RevoluteJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType PrismaticJoint -> PrismaticJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType DistanceJoint -> DistanceJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType PulleyJoint -> PulleyJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType MouseJoint -> MouseJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType GearJoint -> GearJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType LineJoint -> LineJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType WeldJoint -> WeldJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType FrictionJoint -> FrictionJoint
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] valueTypes -> valueTypes
    int value -> value
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] ENUM$VALUES -> ENUM$VALUES
    int getValue() -> getValue
    com.badlogic.gdx.physics.box2d.JointDef$JointType[] values() -> values
    com.badlogic.gdx.physics.box2d.JointDef$JointType valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.JointEdge -> com.badlogic.gdx.physics.box2d.JointEdge:
    com.badlogic.gdx.physics.box2d.Body other -> other
    com.badlogic.gdx.physics.box2d.Joint joint -> joint
com.badlogic.gdx.physics.box2d.MassData -> com.badlogic.gdx.physics.box2d.MassData:
    float mass -> mass
    com.badlogic.gdx.math.Vector2 center -> center
    float I -> I
com.badlogic.gdx.physics.box2d.PolygonShape -> com.badlogic.gdx.physics.box2d.PolygonShape:
    float[] verts -> verts
    long newPolygonShape() -> newPolygonShape
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    void set(com.badlogic.gdx.math.Vector2[]) -> set
    void jniSet(long,float[]) -> jniSet
    void setAsBox(float,float) -> setAsBox
    void jniSetAsBox(long,float,float) -> jniSetAsBox
    void setAsBox(float,float,com.badlogic.gdx.math.Vector2,float) -> setAsBox
    void jniSetAsBox(long,float,float,float,float,float) -> jniSetAsBox
    void setAsEdge(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> setAsEdge
    void jniSetAsEdge(long,float,float,float,float) -> jniSetAsEdge
    int getVertexCount() -> getVertexCount
    int jniGetVertexCount(long) -> jniGetVertexCount
    void getVertex(int,com.badlogic.gdx.math.Vector2) -> getVertex
    void jniGetVertex(long,int,float[]) -> jniGetVertex
com.badlogic.gdx.physics.box2d.QueryCallback -> com.badlogic.gdx.physics.box2d.b:
    boolean reportFixture$2acb6fab() -> a
com.badlogic.gdx.physics.box2d.Shape -> com.badlogic.gdx.physics.box2d.Shape:
    long addr -> addr
    com.badlogic.gdx.physics.box2d.Shape$Type getType() -> getType
    float getRadius() -> getRadius
    float jniGetRadius(long) -> jniGetRadius
    void setRadius(float) -> setRadius
    void jniSetRadius(long,float) -> jniSetRadius
    void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    int jniGetType(long) -> jniGetType
com.badlogic.gdx.physics.box2d.Shape$Type -> com.badlogic.gdx.physics.box2d.Shape$Type:
    com.badlogic.gdx.physics.box2d.Shape$Type Circle -> Circle
    com.badlogic.gdx.physics.box2d.Shape$Type Polygon -> Polygon
    com.badlogic.gdx.physics.box2d.Shape$Type[] ENUM$VALUES -> ENUM$VALUES
    com.badlogic.gdx.physics.box2d.Shape$Type[] values() -> values
    com.badlogic.gdx.physics.box2d.Shape$Type valueOf(java.lang.String) -> valueOf
com.badlogic.gdx.physics.box2d.Transform -> com.badlogic.gdx.physics.box2d.Transform:
    int POS_X -> POS_X
    int POS_Y -> POS_Y
    int COL1_X -> COL1_X
    int COL1_Y -> COL1_Y
    int COL2_X -> COL2_X
    int COL2_Y -> COL2_Y
    float[] vals -> vals
    com.badlogic.gdx.math.Vector2 position -> position
    com.badlogic.gdx.math.Vector2 mul(com.badlogic.gdx.math.Vector2) -> mul
    com.badlogic.gdx.math.Vector2 getPosition() -> getPosition
    void setRotation(float) -> setRotation
    void setPosition(com.badlogic.gdx.math.Vector2) -> setPosition
com.badlogic.gdx.physics.box2d.World -> com.badlogic.gdx.physics.box2d.World:
    long addr -> addr
    com.badlogic.gdx.utils.LongHashMap bodies -> bodies
    com.badlogic.gdx.utils.LongHashMap fixtures -> fixtures
    com.badlogic.gdx.utils.LongHashMap joints -> joints
    com.badlogic.gdx.physics.box2d.ContactFilter contactFilter -> contactFilter
    com.badlogic.gdx.physics.box2d.ContactListener contactListener -> contactListener
    float[] tmpGravity -> tmpGravity
    com.badlogic.gdx.math.Vector2 gravity -> gravity
    com.badlogic.gdx.physics.box2d.QueryCallback queryCallback -> queryCallback
    long[] contactAddrs -> contactAddrs
    java.util.ArrayList contacts -> contacts
    java.util.ArrayList freeContacts -> freeContacts
    com.badlogic.gdx.physics.box2d.Contact contact -> contact
    long newWorld(float,float,boolean) -> newWorld
    void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener) -> setDestructionListener
    void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter) -> setContactFilter
    void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener) -> setContactListener
    com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef) -> createBody
    long jniCreateBody(long,int,float,float,float,float,float,float,float,float,boolean,boolean,boolean,boolean,boolean,float) -> jniCreateBody
    void destroyBody(com.badlogic.gdx.physics.box2d.Body) -> destroyBody
    void jniDestroyBody(long,long) -> jniDestroyBody
    com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createJoint
    long createProperJoint(com.badlogic.gdx.physics.box2d.JointDef) -> createProperJoint
    long jniCreateDistanceJoint(long,long,long,boolean,float,float,float,float,float,float,float) -> jniCreateDistanceJoint
    long jniCreateFrictionJoint(long,long,long,boolean,float,float,float,float,float,float) -> jniCreateFrictionJoint
    long jniCreateGearJoint(long,long,long,boolean,long,long,float) -> jniCreateGearJoint
    long jniCreateLineJoint(long,long,long,boolean,float,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreateLineJoint
    long jniCreateMouseJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateMouseJoint
    long jniCreatePrismaticJoint(long,long,long,boolean,float,float,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreatePrismaticJoint
    long jniCreatePulleyJoint(long,long,long,boolean,float,float,float,float,float,float,float,float,float,float,float,float,float) -> jniCreatePulleyJoint
    long jniCreateRevoluteJoint(long,long,long,boolean,float,float,float,float,float,boolean,float,float,boolean,float,float) -> jniCreateRevoluteJoint
    long jniCreateWeldJoint(long,long,long,boolean,float,float,float,float,float) -> jniCreateWeldJoint
    void destroyJoint(com.badlogic.gdx.physics.box2d.Joint) -> destroyJoint
    void jniDestroyJoint(long,long) -> jniDestroyJoint
    void step(float,int,int) -> step
    void jniStep(long,float,int,int) -> jniStep
    void clearForces() -> clearForces
    void jniClearForces(long) -> jniClearForces
    void setWarmStarting(boolean) -> setWarmStarting
    void jniSetWarmStarting(long,boolean) -> jniSetWarmStarting
    void setContinuousPhysics(boolean) -> setContinuousPhysics
    void jniSetContiousPhysics(long,boolean) -> jniSetContiousPhysics
    int getProxyCount() -> getProxyCount
    int jniGetProxyCount(long) -> jniGetProxyCount
    int getBodyCount() -> getBodyCount
    int jniGetBodyCount(long) -> jniGetBodyCount
    int getJointCount() -> getJointCount
    int jniGetJointcount(long) -> jniGetJointcount
    int getContactCount() -> getContactCount
    int jniGetContactCount(long) -> jniGetContactCount
    void setGravity(com.badlogic.gdx.math.Vector2) -> setGravity
    void jniSetGravity(long,float,float) -> jniSetGravity
    com.badlogic.gdx.math.Vector2 getGravity() -> getGravity
    void jniGetGravity(long,float[]) -> jniGetGravity
    boolean isLocked() -> isLocked
    boolean jniIsLocked(long) -> jniIsLocked
    void setAutoClearForces(boolean) -> setAutoClearForces
    void jniSetAutoClearForces(long,boolean) -> jniSetAutoClearForces
    boolean getAutoClearForces() -> getAutoClearForces
    boolean jniGetAutoClearForces(long) -> jniGetAutoClearForces
    void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float) -> QueryAABB
    void jniQueryAABB(long,float,float,float,float) -> jniQueryAABB
    java.util.List getContactList() -> getContactList
    java.util.Iterator getBodies() -> getBodies
    java.util.Iterator getJoints() -> getJoints
    void jniGetContactList(long,long[]) -> jniGetContactList
    void dispose() -> dispose
    void jniDispose(long) -> jniDispose
    boolean contactFilter(long,long) -> contactFilter
    void beginContact(long) -> beginContact
    void endContact(long) -> endContact
    boolean reportFixture(long) -> reportFixture
com.badlogic.gdx.physics.box2d.WorldManifold -> com.badlogic.gdx.physics.box2d.WorldManifold:
    com.badlogic.gdx.math.Vector2 normal -> normal
    com.badlogic.gdx.math.Vector2[] points -> points
    int numContactPoints -> numContactPoints
    com.badlogic.gdx.math.Vector2 getNormal() -> getNormal
    com.badlogic.gdx.math.Vector2[] getPoints() -> getPoints
    int getNumberOfContactPoints() -> getNumberOfContactPoints
com.badlogic.gdx.physics.box2d.joints.DistanceJoint -> com.badlogic.gdx.physics.box2d.joints.b:
com.badlogic.gdx.physics.box2d.joints.DistanceJointDef -> com.badlogic.gdx.physics.box2d.joints.DistanceJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float length -> length
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.FrictionJoint -> com.badlogic.gdx.physics.box2d.joints.g:
com.badlogic.gdx.physics.box2d.joints.FrictionJointDef -> com.badlogic.gdx.physics.box2d.joints.FrictionJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float maxForce -> maxForce
    float maxTorque -> maxTorque
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.GearJoint -> com.badlogic.gdx.physics.box2d.joints.f:
com.badlogic.gdx.physics.box2d.joints.GearJointDef -> com.badlogic.gdx.physics.box2d.joints.GearJointDef:
    com.badlogic.gdx.physics.box2d.Joint joint1 -> joint1
    com.badlogic.gdx.physics.box2d.Joint joint2 -> joint2
    float ratio -> ratio
com.badlogic.gdx.physics.box2d.joints.LineJoint -> com.badlogic.gdx.physics.box2d.joints.d:
com.badlogic.gdx.physics.box2d.joints.LineJointDef -> com.badlogic.gdx.physics.box2d.joints.LineJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxisA -> localAxisA
    boolean enableLimit -> enableLimit
    float lowerTranslation -> lowerTranslation
    float upperTranslation -> upperTranslation
    boolean enableMotor -> enableMotor
    float maxMotorForce -> maxMotorForce
    float motorSpeed -> motorSpeed
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.MouseJoint -> com.badlogic.gdx.physics.box2d.joints.MouseJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 target -> target
    void setTarget(com.badlogic.gdx.math.Vector2) -> setTarget
    void jniSetTarget(long,float,float) -> jniSetTarget
    com.badlogic.gdx.math.Vector2 getTarget() -> getTarget
    void jniGetTarget(long,float[]) -> jniGetTarget
    void setMaxForce(float) -> setMaxForce
    void jniSetMaxForce(long,float) -> jniSetMaxForce
    float getMaxForce() -> getMaxForce
    float jniGetMaxForce(long) -> jniGetMaxForce
    void setFrequency(float) -> setFrequency
    void jniSetFrequency(long,float) -> jniSetFrequency
    float getFrequency() -> getFrequency
    float jniGetFrequency(long) -> jniGetFrequency
    void setDampingRatio(float) -> setDampingRatio
    void jniSetDampingRatio(long,float) -> jniSetDampingRatio
    float getDampingRatio() -> getDampingRatio
    float jniGetDampingRatio(long) -> jniGetDampingRatio
com.badlogic.gdx.physics.box2d.joints.MouseJointDef -> com.badlogic.gdx.physics.box2d.joints.MouseJointDef:
    com.badlogic.gdx.math.Vector2 target -> target
    float maxForce -> maxForce
    float frequencyHz -> frequencyHz
    float dampingRatio -> dampingRatio
com.badlogic.gdx.physics.box2d.joints.PrismaticJoint -> com.badlogic.gdx.physics.box2d.joints.e:
com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef -> com.badlogic.gdx.physics.box2d.joints.PrismaticJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    com.badlogic.gdx.math.Vector2 localAxis1 -> localAxis1
    float referenceAngle -> referenceAngle
    boolean enableLimit -> enableLimit
    float lowerTranslation -> lowerTranslation
    float upperTranslation -> upperTranslation
    boolean enableMotor -> enableMotor
    float maxMotorForce -> maxMotorForce
    float motorSpeed -> motorSpeed
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.PulleyJoint -> com.badlogic.gdx.physics.box2d.joints.PulleyJoint:
    float[] tmp -> tmp
    com.badlogic.gdx.math.Vector2 groundAnchorA -> groundAnchorA
    com.badlogic.gdx.math.Vector2 groundAnchorB -> groundAnchorB
    com.badlogic.gdx.math.Vector2 getGroundAnchorA() -> getGroundAnchorA
    void jniGetGroundAnchorA(long,float[]) -> jniGetGroundAnchorA
    com.badlogic.gdx.math.Vector2 getGroundAnchorB() -> getGroundAnchorB
    void jniGetGroundAnchorB(long,float[]) -> jniGetGroundAnchorB
    float getLength1() -> getLength1
    float jniGetLength1(long) -> jniGetLength1
    float getLength2() -> getLength2
    float jniGetLength2(long) -> jniGetLength2
    float getRatio() -> getRatio
    float jniGetRatio(long) -> jniGetRatio
com.badlogic.gdx.physics.box2d.joints.PulleyJointDef -> com.badlogic.gdx.physics.box2d.joints.PulleyJointDef:
    float minPulleyLength -> minPulleyLength
    com.badlogic.gdx.math.Vector2 groundAnchorA -> groundAnchorA
    com.badlogic.gdx.math.Vector2 groundAnchorB -> groundAnchorB
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float lengthA -> lengthA
    float maxLengthA -> maxLengthA
    float lengthB -> lengthB
    float maxLengthB -> maxLengthB
    float ratio -> ratio
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,float) -> initialize
com.badlogic.gdx.physics.box2d.joints.RevoluteJoint -> com.badlogic.gdx.physics.box2d.joints.c:
com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef -> com.badlogic.gdx.physics.box2d.joints.RevoluteJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float referenceAngle -> referenceAngle
    boolean enableLimit -> enableLimit
    float lowerAngle -> lowerAngle
    float upperAngle -> upperAngle
    boolean enableMotor -> enableMotor
    float motorSpeed -> motorSpeed
    float maxMotorTorque -> maxMotorTorque
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.physics.box2d.joints.WeldJoint -> com.badlogic.gdx.physics.box2d.joints.a:
com.badlogic.gdx.physics.box2d.joints.WeldJointDef -> com.badlogic.gdx.physics.box2d.joints.WeldJointDef:
    com.badlogic.gdx.math.Vector2 localAnchorA -> localAnchorA
    com.badlogic.gdx.math.Vector2 localAnchorB -> localAnchorB
    float referenceAngle -> referenceAngle
    void initialize(com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.physics.box2d.Body,com.badlogic.gdx.math.Vector2) -> initialize
com.badlogic.gdx.utils.GdxRuntimeException -> com.badlogic.gdx.utils.GdxRuntimeException:
    long serialVersionUID -> serialVersionUID
com.badlogic.gdx.utils.LongHashMap -> com.badlogic.gdx.utils.LongHashMap:
    int size -> size
    com.badlogic.gdx.utils.LongHashMap$Entry[] table -> table
    float loadFactor -> loadFactor
    int mask -> mask
    int capacity -> capacity
    int threshold -> threshold
    com.badlogic.gdx.utils.LongHashMap$Entries entries -> entries
    com.badlogic.gdx.utils.LongHashMap$Values values -> values
    com.badlogic.gdx.utils.LongHashMap$Keys keys -> keys
    java.lang.Object put(long,java.lang.Object) -> put
    java.lang.Object get(long) -> get
    java.util.Iterator entries() -> entries
    java.util.Iterator values() -> values
    com.badlogic.gdx.utils.LongHashMap$Keys keys() -> keys
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsKey(long) -> containsKey
    java.lang.Object remove(long) -> remove
    void clear() -> clear
    void ensureCapacity(int) -> ensureCapacity
    void resize(int) -> resize
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongHashMap$Entries -> com.badlogic.gdx.utils.LongHashMap$Entries:
    int index -> index
    com.badlogic.gdx.utils.LongHashMap$Entry entry -> entry
    com.badlogic.gdx.utils.LongHashMap this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.LongHashMap$Entry -> com.badlogic.gdx.utils.LongHashMap$Entry:
    long key -> key
    java.lang.Object value -> value
    com.badlogic.gdx.utils.LongHashMap$Entry next -> next
    java.lang.String toString() -> toString
com.badlogic.gdx.utils.LongHashMap$Keys -> com.badlogic.gdx.utils.LongHashMap$Keys:
    int index -> index
    com.badlogic.gdx.utils.LongHashMap$Entry entry -> entry
    com.badlogic.gdx.utils.LongHashMap this$0 -> this$0
    boolean hasNext() -> hasNext
    long next() -> next
    void remove() -> remove
    void reset() -> reset
com.badlogic.gdx.utils.LongHashMap$Values -> com.badlogic.gdx.utils.LongHashMap$Values:
    com.badlogic.gdx.utils.LongHashMap this$0 -> this$0
    java.lang.Object next() -> next
com.badlogic.gdx.utils.MathUtils -> com.badlogic.gdx.utils.MathUtils:
    float PI -> PI
    int SIN_BITS -> SIN_BITS
    int SIN_MASK -> SIN_MASK
    int SIN_COUNT -> SIN_COUNT
    float radFull -> radFull
    float degFull -> degFull
    float radToIndex -> radToIndex
    float degToIndex -> degToIndex
    float radiansToDegrees -> radiansToDegrees
    float degreesToRadians -> degreesToRadians
    float[] sin -> sin
    float[] cos -> cos
    int ATAN2_BITS -> ATAN2_BITS
    int ATAN2_BITS2 -> ATAN2_BITS2
    int ATAN2_MASK -> ATAN2_MASK
    int ATAN2_COUNT -> ATAN2_COUNT
    int ATAN2_DIM -> ATAN2_DIM
    float INV_ATAN2_DIM_MINUS_1 -> INV_ATAN2_DIM_MINUS_1
    float[] atan2 -> atan2
    int randomSeed -> randomSeed
    int BIG_ENOUGH_INT -> BIG_ENOUGH_INT
    double BIG_ENOUGH_FLOOR -> BIG_ENOUGH_FLOOR
    double BIG_ENOUGH_CEIL -> BIG_ENOUGH_CEIL
    float sin(float) -> sin
    float cos(float) -> cos
    float sinDeg(float) -> sinDeg
    float cosDeg(float) -> cosDeg
    float atan2(float,float) -> atan2
    int random(int) -> random
    int random(int,int) -> random
    boolean randomBoolean() -> randomBoolean
    float random() -> random
    float random(float) -> random
    float random(float,float) -> random
    int nextPowerOfTwo(int) -> nextPowerOfTwo
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    int floor(float) -> floor
    int ceil(float) -> ceil
com.ozateck.db.DBHelper -> com.ozateck.a.a:
    java.lang.String dbName -> a
    int dbVersion -> b
    java.lang.String tableName -> c
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void resetAll(android.database.sqlite.SQLiteDatabase) -> a
com.ozateck.db.DBManager -> com.ozateck.a.b:
    java.lang.String dbName -> a
    int dbVersion -> b
    java.lang.String tableName -> c
    java.lang.String primaryKey -> d
    java.lang.String[] columns -> e
    com.ozateck.db.DBHelper dbHelper -> f
    android.database.sqlite.SQLiteDatabase db -> g
    void initialize() -> a
    void insert(java.util.List) -> a
    int getTotalCount() -> b
    java.util.List getList(int) -> a
com.ozateck.okamirun.Background -> com.ozateck.okamirun.i:
    org.cocos2d.layers.CCLayer layer -> a
    int ptmRatio -> b
    org.cocos2d.types.CGSize dispSize -> c
    org.cocos2d.nodes.CCParallaxNode voidNode -> d
    boolean scrolling -> e
com.ozateck.okamirun.BtnBack -> com.ozateck.okamirun.e:
    org.cocos2d.layers.CCLayer layer -> a
    int ptmRatio -> b
    int baseLevel -> c
    org.cocos2d.types.CGPoint cPoint -> d
    boolean active -> e
    org.cocos2d.nodes.CCSprite backSprite -> f
    void on() -> a
    void off() -> b
    boolean isInside(org.cocos2d.types.CGPoint) -> a
com.ozateck.okamirun.BtnPlay -> com.ozateck.okamirun.f:
    org.cocos2d.layers.CCLayer layer -> a
    int ptmRatio -> b
    int baseLevel -> c
    org.cocos2d.types.CGPoint cPoint -> d
    boolean active -> e
    org.cocos2d.nodes.CCSprite backSprite -> f
    void on() -> a
    void off() -> b
    boolean isInside(org.cocos2d.types.CGPoint) -> a
com.ozateck.okamirun.BtnRetry -> com.ozateck.okamirun.b:
    org.cocos2d.layers.CCLayer layer -> a
    int ptmRatio -> b
    int baseLevel -> c
    org.cocos2d.types.CGPoint cPoint -> d
    boolean active -> e
    org.cocos2d.nodes.CCSprite backSprite -> f
    void on() -> a
    void off() -> b
    boolean isInside(org.cocos2d.types.CGPoint) -> a
com.ozateck.okamirun.BtnScore -> com.ozateck.okamirun.a:
    org.cocos2d.layers.CCLayer layer -> a
    int ptmRatio -> b
    int baseLevel -> c
    org.cocos2d.types.CGPoint cPoint -> d
    boolean active -> e
    org.cocos2d.nodes.CCSprite backSprite -> f
    void on() -> a
    void off() -> b
    boolean isInside(org.cocos2d.types.CGPoint) -> a
com.ozateck.okamirun.Daruma -> com.ozateck.okamirun.Daruma:
    float fromX -> d
    float fromY -> e
    float size -> f
    float destX -> g
    float destY -> h
    float delay -> i
    org.cocos2d.nodes.CCSprite darumaSprite -> j
    boolean moving -> k
    boolean falling -> l
    java.util.Random random -> m
    void move() -> a
    void moveDone(java.lang.Object) -> moveDone
    boolean isMoving() -> b
    boolean isFalling() -> c
    void fall() -> d
    org.cocos2d.types.CGRect getHittingRect() -> e
com.ozateck.okamirun.GameOverLayer -> com.ozateck.okamirun.h:
    android.content.Context context -> a
    float WORLD_HEIGHT_METER -> b
    org.cocos2d.types.CGSize dispSize -> c
    int ptmRatio -> d
    org.cocos2d.types.CGPoint cPoint -> e
    com.ozateck.okamirun.BtnBack btnBack -> f
    com.ozateck.okamirun.BtnRetry btnRetry -> g
    com.ozateck.okamirun.BtnScore btnScore -> h
    org.cocos2d.nodes.CCLabel scoreLabel -> i
    com.ozateck.db.DBManager dbManager -> j
    void onEnter() -> onEnter
    void onExit() -> onExit
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
com.ozateck.okamirun.GamePlayLayer -> com.ozateck.okamirun.GamePlayLayer:
    android.content.Context context -> a
    float WORLD_HEIGHT_METER -> b
    org.cocos2d.types.CGSize dispSize -> c
    int ptmRatio -> d
    org.cocos2d.types.CGPoint cPoint -> e
    com.ozateck.db.DBManager dbManager -> f
    com.ozateck.okamirun.Background background -> g
    com.ozateck.okamirun.BtnBack btnBack -> h
    int score -> i
    org.cocos2d.nodes.CCLabel scoreLabel -> j
    com.ozateck.okamirun.Shonen shonen -> k
    java.util.List hitujiList -> l
    com.ozateck.okamirun.Okami okami -> m
    java.util.List obstacleList -> n
    java.util.Random random -> o
    void onEnter() -> onEnter
    void onExit() -> onExit
    void makeStage() -> a
    void gameLogic(float) -> gameLogic
    void obstacleLogic(float) -> obstacleLogic
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
com.ozateck.okamirun.GameScoreLayer -> com.ozateck.okamirun.c:
    android.content.Context context -> a
    float WORLD_HEIGHT_METER -> b
    org.cocos2d.types.CGSize dispSize -> c
    int ptmRatio -> d
    org.cocos2d.types.CGPoint cPoint -> e
    com.ozateck.okamirun.BtnBack btnBack -> f
    com.ozateck.db.DBManager dbManager -> g
    void onEnter() -> onEnter
    void onExit() -> onExit
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
com.ozateck.okamirun.GameTopLayer -> com.ozateck.okamirun.g:
    android.content.Context context -> a
    float WORLD_HEIGHT_METER -> b
    org.cocos2d.types.CGSize dispSize -> c
    int ptmRatio -> d
    org.cocos2d.types.CGPoint cPoint -> e
    com.ozateck.okamirun.BtnPlay btnPlay -> f
    com.ozateck.okamirun.BtnScore btnScore -> g
    com.ozateck.db.DBManager dbManager -> h
    void onEnter() -> onEnter
    void onExit() -> onExit
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
com.ozateck.okamirun.Hituji -> com.ozateck.okamirun.Hituji:
    org.cocos2d.layers.CCLayer layer -> a
    int ptmRatio -> b
    int baseLevel -> c
    org.cocos2d.types.CGPoint cPoint -> d
    org.cocos2d.nodes.CCSprite backSprite -> e
    org.cocos2d.nodes.CCSprite hitujiSprite -> f
    org.cocos2d.actions.interval.CCAnimate animateRun -> g
    org.cocos2d.actions.interval.CCAnimate animateJump -> h
    boolean running -> i
    void run() -> a
    void die() -> b
    void dieDone(java.lang.Object) -> dieDone
com.ozateck.okamirun.MainActivity -> com.ozateck.okamirun.MainActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onDestroy() -> onDestroy
com.ozateck.okamirun.Obstacle -> com.ozateck.okamirun.Obstacle:
    org.cocos2d.layers.CCLayer layer -> a
    int ptmRatio -> b
    int baseLevel -> c
    void move() -> a
    void moveDone(java.lang.Object) -> moveDone
    boolean isMoving() -> b
    boolean isFalling() -> c
    void fall() -> d
    org.cocos2d.types.CGRect getHittingRect() -> e
com.ozateck.okamirun.Okami -> com.ozateck.okamirun.Okami:
    org.cocos2d.layers.CCLayer layer -> a
    int ptmRatio -> b
    int baseLevel -> c
    org.cocos2d.types.CGPoint cPoint -> d
    org.cocos2d.nodes.CCSprite backSprite -> e
    org.cocos2d.nodes.CCSprite okamiSprite -> f
    org.cocos2d.actions.interval.CCAnimate animateRun -> g
    org.cocos2d.actions.interval.CCAnimate animateJump -> h
    boolean running -> i
    boolean eating -> j
    void run() -> a
    void eat() -> b
    void eatDone(java.lang.Object) -> eatDone
com.ozateck.okamirun.Plane -> com.ozateck.okamirun.Plane:
    float fromX -> d
    float fromY -> e
    float size -> f
    float sectX -> g
    float sectY -> h
    float delayS -> i
    float destX -> j
    float destY -> k
    float delayD -> l
    org.cocos2d.nodes.CCSprite planeSprite -> m
    boolean moving -> n
    boolean falling -> o
    java.util.Random random -> p
    void move() -> a
    void moveDone(java.lang.Object) -> moveDone
    boolean isMoving() -> b
    boolean isFalling() -> c
    void fall() -> d
    org.cocos2d.types.CGRect getHittingRect() -> e
com.ozateck.okamirun.Saku -> com.ozateck.okamirun.Saku:
    float fromX -> d
    float fromY -> e
    float size -> f
    float destX -> g
    float destY -> h
    float delay -> i
    org.cocos2d.nodes.CCSprite sakuSprite -> j
    boolean moving -> k
    boolean falling -> l
    void move() -> a
    void moveDone(java.lang.Object) -> moveDone
    boolean isMoving() -> b
    boolean isFalling() -> c
    void fall() -> d
    org.cocos2d.types.CGRect getHittingRect() -> e
com.ozateck.okamirun.ScorePanel -> com.ozateck.okamirun.d:
    org.cocos2d.layers.CCLayer layer -> a
    int ptmRatio -> b
    int baseLevel -> c
    org.cocos2d.types.CGPoint cPoint -> d
    org.cocos2d.nodes.CCSprite backSprite -> e
com.ozateck.okamirun.Shonen -> com.ozateck.okamirun.Shonen:
    org.cocos2d.layers.CCLayer layer -> a
    int ptmRatio -> b
    int baseLevel -> c
    org.cocos2d.nodes.CCSprite backSprite -> d
    org.cocos2d.nodes.CCSprite shonenSprite -> e
    org.cocos2d.actions.interval.CCAnimate animateRun -> f
    org.cocos2d.actions.interval.CCAnimate animateJump -> g
    boolean running -> h
    boolean jumping -> i
    void run() -> a
    void jump() -> b
    void jumpDone(java.lang.Object) -> jumpDone
    void damage() -> c
    org.cocos2d.types.CGRect getHittingRect() -> d
org.cocos2d.Cocos2D -> org.cocos2d.Cocos2D:
    java.util.Comparator sDisplayNameComparator -> sDisplayNameComparator
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List getData(java.lang.String) -> getData
    android.content.Intent activityIntent(java.lang.String,java.lang.String) -> activityIntent
    android.content.Intent browserIntent(java.lang.String) -> browserIntent
    void addItem(java.util.List,java.lang.String,android.content.Intent) -> addItem
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
org.cocos2d.Cocos2D$1 -> org.cocos2d.Cocos2D$1:
    java.text.Collator collator -> collator
    int compare(java.util.Map,java.util.Map) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.cocos2d.actions.CCActionManager -> org.cocos2d.actions.CCActionManager:
    java.lang.String LOG_TAG -> LOG_TAG
    org.cocos2d.utils.pool.ConcOneClassPool pool -> pool
    org.cocos2d.utils.collections.ConcurrentArrayHashMap targets -> targets
    org.cocos2d.actions.CCActionManager _sharedManager -> _sharedManager
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.actions.CCActionManager sharedManager() -> sharedManager
    void deleteHashElement(org.cocos2d.actions.CCActionManager$HashElement) -> deleteHashElement
    void removeAction(int,org.cocos2d.actions.CCActionManager$HashElement) -> removeAction
    void pauseAllActions(org.cocos2d.nodes.CCNode) -> pauseAllActions
    void resumeAllActions(org.cocos2d.nodes.CCNode) -> resumeAllActions
    void addAction(org.cocos2d.actions.base.CCAction,org.cocos2d.nodes.CCNode,boolean) -> addAction
    void removeAllActions() -> removeAllActions
    void removeAllActions(org.cocos2d.nodes.CCNode) -> removeAllActions
    void removeAction(org.cocos2d.actions.base.CCAction) -> removeAction
    void removeAction(int,org.cocos2d.nodes.CCNode) -> removeAction
    org.cocos2d.actions.base.CCAction getAction(int,org.cocos2d.nodes.CCNode) -> getAction
    int numberOfRunningActions(org.cocos2d.nodes.CCNode) -> numberOfRunningActions
    void update(float) -> update
    void resume(org.cocos2d.nodes.CCNode) -> resume
    void pause(org.cocos2d.nodes.CCNode) -> pause
    void purgeSharedManager() -> purgeSharedManager
org.cocos2d.actions.CCActionManager$1 -> org.cocos2d.actions.CCActionManager$1:
    org.cocos2d.actions.CCActionManager this$0 -> this$0
    org.cocos2d.actions.CCActionManager$HashElement allocate() -> allocate
    java.lang.Object allocate() -> allocate
org.cocos2d.actions.CCActionManager$HashElement -> org.cocos2d.actions.CCActionManager$HashElement:
    java.util.ArrayList actions -> actions
    org.cocos2d.nodes.CCNode target -> target
    int actionIndex -> actionIndex
    boolean paused -> paused
org.cocos2d.actions.CCProgressTimer -> org.cocos2d.actions.CCProgressTimer:
    int kProgressTextureCoordsCount -> kProgressTextureCoordsCount
    char kProgressTextureCoords -> kProgressTextureCoords
    int kCCProgressTimerTypeRadialCCW -> kCCProgressTimerTypeRadialCCW
    int kCCProgressTimerTypeRadialCW -> kCCProgressTimerTypeRadialCW
    int kCCProgressTimerTypeHorizontalBarLR -> kCCProgressTimerTypeHorizontalBarLR
    int kCCProgressTimerTypeHorizontalBarRL -> kCCProgressTimerTypeHorizontalBarRL
    int kCCProgressTimerTypeVerticalBarBT -> kCCProgressTimerTypeVerticalBarBT
    int kCCProgressTimerTypeVerticalBarTB -> kCCProgressTimerTypeVerticalBarTB
    int type_ -> type_
    float percentage_ -> percentage_
    org.cocos2d.nodes.CCSprite sprite_ -> sprite_
    org.cocos2d.utils.FastFloatBuffer textureCoordinates -> textureCoordinates
    org.cocos2d.utils.FastFloatBuffer vertexCoordinates -> vertexCoordinates
    org.cocos2d.utils.FastFloatBuffer colors -> colors
    int vertexDataCount_ -> vertexDataCount_
    int getType() -> getType
    float getPercentage() -> getPercentage
    org.cocos2d.nodes.CCSprite getSprite() -> getSprite
    void setVertexDataCount(int) -> setVertexDataCount
    void resetVertex() -> resetVertex
    org.cocos2d.actions.CCProgressTimer progress(java.lang.String) -> progress
    org.cocos2d.actions.CCProgressTimer progress(org.cocos2d.opengl.CCTexture2D) -> progress
    void setPercentage(float) -> setPercentage
    void setSprite(org.cocos2d.nodes.CCSprite) -> setSprite
    void setType(int) -> setType
    org.cocos2d.types.CGPoint vertexFromTexCoord(org.cocos2d.types.CGPoint) -> vertexFromTexCoord
    void updateColor() -> updateColor
    void updateProgress() -> updateProgress
    void updateRadial() -> updateRadial
    void updateBar() -> updateBar
    org.cocos2d.types.CGPoint boundaryTexCoord(int) -> boundaryTexCoord
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
org.cocos2d.actions.CCScheduler -> org.cocos2d.actions.CCScheduler:
    java.util.ArrayList updatesNeg -> updatesNeg
    java.util.ArrayList updates0 -> updates0
    java.util.ArrayList updatesPos -> updatesPos
    org.cocos2d.utils.collections.ConcurrentArrayHashMap hashForSelectors -> hashForSelectors
    java.util.concurrent.ConcurrentHashMap hashForUpdates -> hashForUpdates
    org.cocos2d.actions.CCScheduler$tListEntry currentEntry -> currentEntry
    org.cocos2d.actions.CCScheduler$tHashSelectorEntry currentTarget -> currentTarget
    boolean currentTargetSalvaged -> currentTargetSalvaged
    java.lang.String updateSelector -> updateSelector
    float timeScale_ -> timeScale_
    org.cocos2d.actions.CCScheduler _sharedScheduler -> _sharedScheduler
    boolean $assertionsDisabled -> $assertionsDisabled
    float getTimeScale() -> getTimeScale
    void setTimeScale(float) -> setTimeScale
    org.cocos2d.actions.CCScheduler sharedScheduler() -> sharedScheduler
    void purgeSharedScheduler() -> purgeSharedScheduler
    void tick(float) -> tick
    void schedule(java.lang.String,java.lang.Object,float,boolean) -> schedule
    void schedule(org.cocos2d.actions.UpdateCallback,java.lang.Object,float,boolean) -> schedule
    void unschedule(java.lang.String,java.lang.Object) -> unschedule
    void unschedule(org.cocos2d.actions.UpdateCallback,java.lang.Object) -> unschedule
    void unscheduleUpdate(java.lang.Object) -> unscheduleUpdate
    void unscheduleAllSelectors(java.lang.Object) -> unscheduleAllSelectors
    void unscheduleAllSelectors() -> unscheduleAllSelectors
    void resume(java.lang.Object) -> resume
    void pause(java.lang.Object) -> pause
    void scheduleUpdate(java.lang.Object,int,boolean) -> scheduleUpdate
    void scheduleUpdate(org.cocos2d.actions.UpdateCallback,int,boolean) -> scheduleUpdate
    void scheduleTimer(org.cocos2d.actions.CCTimer) -> scheduleTimer
    void unscheduleTimer(org.cocos2d.actions.CCTimer) -> unscheduleTimer
    void unscheduleAllTimers() -> unscheduleAllTimers
    void finalize() -> finalize
    void append(java.util.ArrayList,java.lang.Object,boolean) -> append
    void priority(java.util.ArrayList,java.lang.Object,int,boolean) -> priority
org.cocos2d.actions.CCScheduler$SchedulerTimerAlreadyScheduled -> org.cocos2d.actions.CCScheduler$SchedulerTimerAlreadyScheduled:
    long serialVersionUID -> serialVersionUID
org.cocos2d.actions.CCScheduler$SchedulerTimerNotFound -> org.cocos2d.actions.CCScheduler$SchedulerTimerNotFound:
    long serialVersionUID -> serialVersionUID
org.cocos2d.actions.CCScheduler$tHashSelectorEntry -> org.cocos2d.actions.CCScheduler$tHashSelectorEntry:
    java.util.ArrayList timers -> timers
    java.lang.Object target -> target
    java.util.ArrayList list -> list
    org.cocos2d.actions.CCScheduler$tListEntry entry -> entry
    int timerIndex -> timerIndex
    org.cocos2d.actions.CCTimer currentTimer -> currentTimer
    boolean currentTimerSalvaged -> currentTimerSalvaged
    boolean paused -> paused
    void setPaused(boolean) -> setPaused
org.cocos2d.actions.CCScheduler$tListEntry -> org.cocos2d.actions.CCScheduler$tListEntry:
    java.lang.reflect.Method impMethod -> impMethod
    org.cocos2d.actions.UpdateCallback callback -> callback
    java.lang.Object target -> target
    int priority -> priority
    boolean paused -> paused
org.cocos2d.actions.CCTimer -> org.cocos2d.actions.CCTimer:
    java.lang.Object target -> target
    java.lang.String selector -> selector
    java.lang.reflect.Method invocation -> invocation
    org.cocos2d.actions.UpdateCallback callback -> callback
    float interval -> interval
    float elapsed -> elapsed
    java.lang.String getSelector() -> getSelector
    org.cocos2d.actions.UpdateCallback getCallback() -> getCallback
    void setInterval(float) -> setInterval
    float getInterval() -> getInterval
    void update(float) -> update
org.cocos2d.actions.UpdateCallback -> org.cocos2d.actions.a:
    void update(float) -> update
org.cocos2d.actions.base.CCAction -> org.cocos2d.actions.base.CCAction:
    int kCCActionTagInvalid -> kCCActionTagInvalid
    org.cocos2d.nodes.CCNode target -> target
    org.cocos2d.nodes.CCNode originalTarget -> originalTarget
    int tag -> tag
    org.cocos2d.nodes.CCNode getOriginalTarget() -> getOriginalTarget
    void setOriginalTarget(org.cocos2d.nodes.CCNode) -> setOriginalTarget
    org.cocos2d.nodes.CCNode getTarget() -> getTarget
    void setTarget(org.cocos2d.nodes.CCNode) -> setTarget
    int getTag() -> getTag
    void setTag(int) -> setTag
    org.cocos2d.actions.base.CCAction action() -> action
    org.cocos2d.actions.base.CCAction copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void stop() -> stop
    boolean isDone() -> isDone
    void step(float) -> step
    void update(float) -> update
    java.lang.Object copy() -> copy
org.cocos2d.actions.base.CCFiniteTimeAction -> org.cocos2d.actions.base.CCFiniteTimeAction:
    java.lang.String LOG_TAG -> LOG_TAG
    float duration -> duration
    org.cocos2d.actions.base.CCFiniteTimeAction action(float) -> action
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    org.cocos2d.actions.base.CCFiniteTimeAction copy() -> copy
    org.cocos2d.actions.base.CCFiniteTimeAction reverse() -> reverse
    void step(float) -> step
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.base.CCAction copy() -> copy
org.cocos2d.actions.base.CCFollow -> org.cocos2d.actions.base.CCFollow:
    org.cocos2d.nodes.CCNode followedNode_ -> followedNode_
    boolean boundarySet -> boundarySet
    boolean boundaryFullyCovered -> boundaryFullyCovered
    org.cocos2d.types.CGPoint halfScreenSize -> halfScreenSize
    org.cocos2d.types.CGPoint fullScreenSize -> fullScreenSize
    float leftBoundary -> leftBoundary
    float rightBoundary -> rightBoundary
    float topBoundary -> topBoundary
    float bottomBoundary -> bottomBoundary
    void setBoundarySet(boolean) -> setBoundarySet
    boolean getBoundarySet() -> getBoundarySet
    org.cocos2d.actions.base.CCFollow action(org.cocos2d.nodes.CCNode) -> action
    org.cocos2d.actions.base.CCFollow action(org.cocos2d.nodes.CCNode,org.cocos2d.types.CGRect) -> action
    org.cocos2d.actions.base.CCFollow copy() -> copy
    boolean isDone() -> isDone
    void stop() -> stop
    float CLAMP(float,float,float) -> CLAMP
    void step(float) -> step
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.base.CCAction copy() -> copy
org.cocos2d.actions.base.CCRepeatForever -> org.cocos2d.actions.base.CCRepeatForever:
    org.cocos2d.actions.interval.CCIntervalAction other -> other
    org.cocos2d.actions.base.CCRepeatForever action(org.cocos2d.actions.interval.CCIntervalAction) -> action
    org.cocos2d.actions.base.CCAction copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void step(float) -> step
    boolean isDone() -> isDone
    org.cocos2d.actions.base.CCRepeatForever reverse() -> reverse
    void update(float) -> update
    java.lang.Object copy() -> copy
org.cocos2d.actions.base.CCSpeed -> org.cocos2d.actions.base.CCSpeed:
    org.cocos2d.actions.interval.CCIntervalAction other -> other
    float speed -> speed
    float getSpeed() -> getSpeed
    void setSpeed(float) -> setSpeed
    org.cocos2d.actions.base.CCSpeed action(org.cocos2d.actions.interval.CCIntervalAction,float) -> action
    org.cocos2d.actions.base.CCSpeed copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void stop() -> stop
    void step(float) -> step
    boolean isDone() -> isDone
    org.cocos2d.actions.base.CCSpeed reverse() -> reverse
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.base.CCAction copy() -> copy
org.cocos2d.actions.camera.CCCameraAction -> org.cocos2d.actions.camera.CCCameraAction:
    float centerXOrig -> centerXOrig
    float centerYOrig -> centerYOrig
    float centerZOrig -> centerZOrig
    float eyeXOrig -> eyeXOrig
    float eyeYOrig -> eyeYOrig
    float eyeZOrig -> eyeZOrig
    float upXOrig -> upXOrig
    float upYOrig -> upYOrig
    float upZOrig -> upZOrig
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.actions.interval.CCReverseTime reverse() -> reverse
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
org.cocos2d.actions.camera.CCOrbitCamera -> org.cocos2d.actions.camera.CCOrbitCamera:
    float radius -> radius
    float deltaRadius -> deltaRadius
    float angleZ -> angleZ
    float deltaAngleZ -> deltaAngleZ
    float angleX -> angleX
    float deltaAngleX -> deltaAngleX
    float radZ -> radZ
    float radDeltaZ -> radDeltaZ
    float radX -> radX
    float radDeltaX -> radDeltaX
    org.cocos2d.actions.camera.CCOrbitCamera action(float,float,float,float,float,float,float) -> action
    org.cocos2d.actions.camera.CCOrbitCamera copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    void spherical(float[],float[],float[]) -> spherical
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.ease.CCEaseAction -> org.cocos2d.actions.ease.CCEaseAction:
    float M_PI_X_2 -> M_PI_X_2
    org.cocos2d.actions.interval.CCIntervalAction other -> other
    org.cocos2d.actions.ease.CCEaseAction action(org.cocos2d.actions.interval.CCIntervalAction) -> action
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void stop() -> stop
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.ease.CCEaseBackIn -> org.cocos2d.actions.ease.h:
    org.cocos2d.actions.ease.CCEaseBackIn action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.ease.CCEaseBackInOut -> org.cocos2d.actions.ease.n:
    org.cocos2d.actions.ease.CCEaseBackInOut action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.ease.CCEaseBackOut -> org.cocos2d.actions.ease.b:
    org.cocos2d.actions.ease.CCEaseBackOut action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.ease.CCEaseBounce -> org.cocos2d.actions.ease.d:
    float bounceTime(float) -> a
org.cocos2d.actions.ease.CCEaseBounceIn -> org.cocos2d.actions.ease.s:
    org.cocos2d.actions.ease.CCEaseBounceIn action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.ease.CCEaseBounceInOut -> org.cocos2d.actions.ease.k:
    org.cocos2d.actions.ease.CCEaseBounceInOut action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.ease.CCEaseBounceOut -> org.cocos2d.actions.ease.q:
    org.cocos2d.actions.ease.CCEaseBounceOut action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.ease.CCEaseElastic -> org.cocos2d.actions.ease.CCEaseElastic:
    float period_ -> period_
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.ease.CCEaseElasticIn -> org.cocos2d.actions.ease.o:
    org.cocos2d.actions.ease.CCEaseElasticIn action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.ease.CCEaseElasticInOut -> org.cocos2d.actions.ease.p:
    org.cocos2d.actions.ease.CCEaseElasticInOut action(org.cocos2d.actions.interval.CCIntervalAction,float) -> a
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.ease.CCEaseElasticOut -> org.cocos2d.actions.ease.g:
    org.cocos2d.actions.ease.CCEaseElasticOut action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseElasticOut action$488397c2(org.cocos2d.actions.interval.CCIntervalAction) -> b
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.ease.CCEaseExponentialIn -> org.cocos2d.actions.ease.e:
    org.cocos2d.actions.ease.CCEaseExponentialIn action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseExponentialIn copy() -> a
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
org.cocos2d.actions.ease.CCEaseExponentialInOut -> org.cocos2d.actions.ease.m:
    org.cocos2d.actions.ease.CCEaseExponentialInOut action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    void update(float) -> update
org.cocos2d.actions.ease.CCEaseExponentialOut -> org.cocos2d.actions.ease.r:
    org.cocos2d.actions.ease.CCEaseExponentialOut action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseExponentialOut copy() -> a
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
org.cocos2d.actions.ease.CCEaseIn -> org.cocos2d.actions.ease.l:
    org.cocos2d.actions.ease.CCEaseIn action$4a23e056(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseIn copy() -> a
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.ease.CCEaseRateAction copy() -> copy
org.cocos2d.actions.ease.CCEaseInOut -> org.cocos2d.actions.ease.i:
    org.cocos2d.actions.ease.CCEaseInOut action(org.cocos2d.actions.interval.CCIntervalAction,float) -> a
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
org.cocos2d.actions.ease.CCEaseOut -> org.cocos2d.actions.ease.a:
    org.cocos2d.actions.ease.CCEaseOut action(org.cocos2d.actions.interval.CCIntervalAction,float) -> a
    void update(float) -> update
org.cocos2d.actions.ease.CCEaseRateAction -> org.cocos2d.actions.ease.CCEaseRateAction:
    float rate -> rate
    org.cocos2d.actions.ease.CCEaseRateAction action(org.cocos2d.actions.interval.CCIntervalAction,float) -> action
    org.cocos2d.actions.ease.CCEaseRateAction copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
org.cocos2d.actions.ease.CCEaseSineIn -> org.cocos2d.actions.ease.f:
    org.cocos2d.actions.ease.CCEaseSineIn action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseSineIn copy() -> a
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
org.cocos2d.actions.ease.CCEaseSineInOut -> org.cocos2d.actions.ease.j:
    org.cocos2d.actions.ease.CCEaseSineInOut action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseSineInOut copy() -> a
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
org.cocos2d.actions.ease.CCEaseSineOut -> org.cocos2d.actions.ease.c:
    org.cocos2d.actions.ease.CCEaseSineOut action(org.cocos2d.actions.interval.CCIntervalAction) -> a
    org.cocos2d.actions.ease.CCEaseSineOut copy() -> a
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.ease.CCEaseAction copy() -> copy
org.cocos2d.actions.grid.CCAccelAmplitude -> org.cocos2d.actions.grid.CCAccelAmplitude:
    float rate -> rate
    org.cocos2d.actions.interval.CCIntervalAction other -> other
    org.cocos2d.actions.grid.CCAccelAmplitude action(org.cocos2d.actions.interval.CCIntervalAction,float) -> action
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
org.cocos2d.actions.grid.CCAccelDeccelAmplitude -> org.cocos2d.actions.grid.CCAccelDeccelAmplitude:
    float rate -> rate
    org.cocos2d.actions.interval.CCIntervalAction other -> other
    org.cocos2d.actions.grid.CCAccelDeccelAmplitude action(org.cocos2d.actions.interval.CCIntervalAction,float) -> action
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
org.cocos2d.actions.grid.CCDeccelAmplitude -> org.cocos2d.actions.grid.CCDeccelAmplitude:
    float rate -> rate
    org.cocos2d.actions.interval.CCIntervalAction other -> other
    void setRate(float) -> setRate
    float getRate() -> getRate
    org.cocos2d.actions.grid.CCDeccelAmplitude action(org.cocos2d.actions.interval.CCIntervalAction,float) -> action
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
org.cocos2d.actions.grid.CCFlipX3D -> org.cocos2d.actions.grid.CCFlipX3D:
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.actions.interval.CCIntervalAction action(float) -> action
    org.cocos2d.actions.grid.CCFlipX3D copy() -> copy
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.grid.CCGrid3DAction copy() -> copy
org.cocos2d.actions.grid.CCFlipY3D -> org.cocos2d.actions.grid.b:
    void update(float) -> update
org.cocos2d.actions.grid.CCGrid3DAction -> org.cocos2d.actions.grid.a:
    org.cocos2d.actions.grid.CCGrid3DAction action(org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.grid.CCGridBase grid() -> grid
    org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize) -> vertex
    org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize) -> originalVertex
    void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D) -> setVertex
    org.cocos2d.actions.grid.CCGrid3DAction copy() -> copy
    java.lang.Object copy() -> copy
    org.cocos2d.actions.grid.CCGridAction copy() -> copy
org.cocos2d.actions.grid.CCGridAction -> org.cocos2d.actions.grid.CCGridAction:
    org.cocos2d.types.ccGridSize gridSize -> gridSize
    void setGridSize(org.cocos2d.types.ccGridSize) -> setGridSize
    org.cocos2d.types.ccGridSize getGridSize() -> getGridSize
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.grid.CCGridBase grid() -> grid
    org.cocos2d.actions.grid.CCGridAction copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.grid.CCLens3D -> org.cocos2d.actions.grid.CCLens3D:
    org.cocos2d.types.CGPoint position -> position
    float radius -> radius
    float lensEffect -> lensEffect
    org.cocos2d.types.CGPoint lastPosition -> lastPosition
    org.cocos2d.actions.grid.CCLens3D action(org.cocos2d.types.CGPoint,float,org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.actions.grid.CCLens3D copy() -> copy
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.grid.CCGrid3DAction copy() -> copy
org.cocos2d.actions.grid.CCLiquid -> org.cocos2d.actions.grid.CCLiquid:
    int waves -> waves
    float amplitude -> amplitude
    float amplitudeRate -> amplitudeRate
    org.cocos2d.actions.grid.CCLiquid action(int,float,org.cocos2d.types.ccGridSize,float) -> action
    void update(float) -> update
    org.cocos2d.actions.grid.CCLiquid copy() -> copy
    java.lang.Object copy() -> copy
    org.cocos2d.actions.grid.CCGrid3DAction copy() -> copy
org.cocos2d.actions.grid.CCPageTurn3D -> org.cocos2d.actions.grid.c:
    org.cocos2d.actions.grid.CCPageTurn3D action(org.cocos2d.types.ccGridSize,float) -> a
    void update(float) -> update
org.cocos2d.actions.grid.CCReuseGrid -> org.cocos2d.actions.grid.CCReuseGrid:
    int t -> t
    org.cocos2d.actions.grid.CCReuseGrid action(int) -> action
    void start(org.cocos2d.nodes.CCNode) -> start
org.cocos2d.actions.grid.CCRipple3D -> org.cocos2d.actions.grid.CCRipple3D:
    org.cocos2d.types.CGPoint position -> position
    float radius -> radius
    int waves -> waves
    float amplitude -> amplitude
    float amplitudeRate -> amplitudeRate
    org.cocos2d.actions.grid.CCRipple3D action(org.cocos2d.types.CGPoint,float,int,float,org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.actions.grid.CCRipple3D copy() -> copy
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.grid.CCGrid3DAction copy() -> copy
org.cocos2d.actions.grid.CCShaky3D -> org.cocos2d.actions.grid.CCShaky3D:
    int randrange -> randrange
    boolean shakeZ -> shakeZ
    org.cocos2d.actions.grid.CCShaky3D action(int,boolean,org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.actions.grid.CCShaky3D copy() -> copy
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.grid.CCGrid3DAction copy() -> copy
org.cocos2d.actions.grid.CCStopGrid -> org.cocos2d.actions.grid.d:
    void start(org.cocos2d.nodes.CCNode) -> start
org.cocos2d.actions.grid.CCTwirl -> org.cocos2d.actions.grid.CCTwirl:
    org.cocos2d.types.CGPoint position -> position
    int twirls -> twirls
    float amplitude -> amplitude
    float amplitudeRate -> amplitudeRate
    org.cocos2d.actions.grid.CCTwirl action(org.cocos2d.types.CGPoint,int,float,org.cocos2d.types.ccGridSize,float) -> action
    void update(float) -> update
    org.cocos2d.actions.grid.CCTwirl copy() -> copy
    java.lang.Object copy() -> copy
    org.cocos2d.actions.grid.CCGrid3DAction copy() -> copy
org.cocos2d.actions.grid.CCWaves -> org.cocos2d.actions.grid.CCWaves:
    int waves -> waves
    float amplitude -> amplitude
    float amplitudeRate -> amplitudeRate
    boolean vertical -> vertical
    boolean horizontal -> horizontal
    org.cocos2d.actions.grid.CCWaves action(int,float,boolean,boolean,org.cocos2d.types.ccGridSize,float) -> action
    void update(float) -> update
    org.cocos2d.actions.grid.CCWaves copy() -> copy
    java.lang.Object copy() -> copy
    org.cocos2d.actions.grid.CCGrid3DAction copy() -> copy
org.cocos2d.actions.grid.CCWaves3D -> org.cocos2d.actions.grid.CCWaves3D:
    int waves -> waves
    float amplitude -> amplitude
    float amplitudeRate -> amplitudeRate
    org.cocos2d.actions.grid.CCWaves3D action(int,float,org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.actions.grid.CCWaves3D copy() -> copy
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.grid.CCGrid3DAction copy() -> copy
org.cocos2d.actions.instant.CCCallFunc -> org.cocos2d.actions.instant.CCCallFunc:
    java.lang.Object targetCallback -> targetCallback
    java.lang.String selector -> selector
    java.lang.Class[] partypes -> partypes
    java.lang.reflect.Method invocation -> invocation
    org.cocos2d.actions.instant.CCCallFunc action(java.lang.Object,java.lang.String) -> action
    org.cocos2d.actions.instant.CCCallFunc copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void execute() -> execute
    java.lang.Object copy() -> copy
    org.cocos2d.actions.instant.CCInstantAction copy() -> copy
org.cocos2d.actions.instant.CCCallFuncN -> org.cocos2d.actions.instant.e:
    org.cocos2d.actions.instant.CCCallFuncN action(java.lang.Object,java.lang.String) -> action
    void execute() -> execute
    org.cocos2d.actions.instant.CCCallFunc action(java.lang.Object,java.lang.String) -> action
org.cocos2d.actions.instant.CCCallFuncND -> org.cocos2d.actions.instant.CCCallFuncND:
    java.lang.Object data -> data
    org.cocos2d.actions.instant.CCCallFuncND action(java.lang.Object,java.lang.String,java.lang.Object) -> action
    void execute() -> execute
org.cocos2d.actions.instant.CCFlipX -> org.cocos2d.actions.instant.CCFlipX:
    boolean flipX -> flipX
    org.cocos2d.actions.instant.CCFlipX action(boolean) -> action
    org.cocos2d.actions.instant.CCFlipX copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.actions.instant.CCFlipX reverse() -> reverse
    org.cocos2d.actions.base.CCFiniteTimeAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.instant.CCInstantAction copy() -> copy
org.cocos2d.actions.instant.CCFlipY -> org.cocos2d.actions.instant.CCFlipY:
    boolean flipY -> flipY
    org.cocos2d.actions.instant.CCFlipY action(boolean) -> action
    org.cocos2d.actions.instant.CCFlipY copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.actions.instant.CCFlipY reverse() -> reverse
    org.cocos2d.actions.base.CCFiniteTimeAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.instant.CCInstantAction copy() -> copy
org.cocos2d.actions.instant.CCHide -> org.cocos2d.actions.instant.c:
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.actions.base.CCFiniteTimeAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.instant.CCInstantAction copy() -> copy
org.cocos2d.actions.instant.CCInstantAction -> org.cocos2d.actions.instant.a:
    org.cocos2d.actions.instant.CCInstantAction copy() -> copy
    boolean isDone() -> isDone
    void step(float) -> step
    void update(float) -> update
    org.cocos2d.actions.base.CCFiniteTimeAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.base.CCFiniteTimeAction copy() -> copy
org.cocos2d.actions.instant.CCPlace -> org.cocos2d.actions.instant.CCPlace:
    org.cocos2d.types.CGPoint position -> position
    org.cocos2d.actions.instant.CCPlace action(org.cocos2d.types.CGPoint) -> action
    org.cocos2d.actions.instant.CCPlace copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    java.lang.Object copy() -> copy
    org.cocos2d.actions.instant.CCInstantAction copy() -> copy
org.cocos2d.actions.instant.CCShow -> org.cocos2d.actions.instant.b:
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.actions.base.CCFiniteTimeAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.instant.CCInstantAction copy() -> copy
org.cocos2d.actions.instant.CCToggleVisibility -> org.cocos2d.actions.instant.d:
    void start(org.cocos2d.nodes.CCNode) -> start
    java.lang.Object copy() -> copy
    org.cocos2d.actions.instant.CCInstantAction copy() -> copy
org.cocos2d.actions.interval.CCAnimate -> org.cocos2d.actions.interval.CCAnimate:
    org.cocos2d.nodes.CCAnimation animation -> animation
    org.cocos2d.nodes.CCSpriteFrame origFrame -> origFrame
    boolean restoreOriginalFrame -> restoreOriginalFrame
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.nodes.CCAnimation getAnimation() -> getAnimation
    void setAnimation(org.cocos2d.nodes.CCAnimation) -> setAnimation
    org.cocos2d.actions.interval.CCAnimate action(float,org.cocos2d.nodes.CCAnimation,boolean) -> action
    org.cocos2d.actions.interval.CCAnimate action(org.cocos2d.nodes.CCAnimation) -> action
    org.cocos2d.actions.interval.CCAnimate action(org.cocos2d.nodes.CCAnimation,boolean) -> action
    org.cocos2d.actions.interval.CCAnimate copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void stop() -> stop
    void update(float) -> update
    org.cocos2d.actions.interval.CCAnimate reverse() -> reverse
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCBezierBy -> org.cocos2d.actions.interval.CCBezierBy:
    org.cocos2d.types.CCBezierConfig config -> config
    org.cocos2d.types.CGPoint startPosition -> startPosition
    org.cocos2d.actions.interval.CCBezierBy action(float,org.cocos2d.types.CCBezierConfig) -> action
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    org.cocos2d.actions.interval.CCBezierBy reverse() -> reverse
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.interval.CCBezierTo -> org.cocos2d.actions.interval.CCBezierTo:
    org.cocos2d.types.CCBezierConfig originalconfig -> originalconfig
    org.cocos2d.actions.interval.CCBezierTo action(float,org.cocos2d.types.CCBezierConfig) -> action
    org.cocos2d.actions.interval.CCBezierTo copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.actions.interval.CCBezierTo reverse() -> reverse
    org.cocos2d.actions.interval.CCBezierBy action(float,org.cocos2d.types.CCBezierConfig) -> action
    org.cocos2d.actions.interval.CCBezierBy reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCBlink -> org.cocos2d.actions.interval.CCBlink:
    int times -> times
    org.cocos2d.actions.interval.CCBlink action(float,int) -> action
    org.cocos2d.actions.interval.CCBlink copy() -> copy
    void update(float) -> update
    org.cocos2d.actions.interval.CCBlink reverse() -> reverse
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCDelayTime -> org.cocos2d.actions.interval.f:
    org.cocos2d.actions.interval.CCDelayTime action(float) -> a
    org.cocos2d.actions.interval.CCDelayTime copy() -> a
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCFadeIn -> org.cocos2d.actions.interval.a:
    org.cocos2d.actions.interval.CCFadeIn action(float) -> a
    org.cocos2d.actions.interval.CCFadeIn copy() -> b
    void update(float) -> update
    org.cocos2d.actions.interval.CCFadeOut reverse() -> a
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCFadeOut -> org.cocos2d.actions.interval.e:
    org.cocos2d.actions.interval.CCFadeOut action(float) -> a
    org.cocos2d.actions.interval.CCFadeOut copy() -> b
    void update(float) -> update
    org.cocos2d.actions.interval.CCFadeIn reverse() -> a
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCFadeTo -> org.cocos2d.actions.interval.CCFadeTo:
    int toOpacity -> toOpacity
    int fromOpacity -> fromOpacity
    org.cocos2d.actions.interval.CCFadeTo action(float,int) -> action
    org.cocos2d.actions.interval.CCFadeTo copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCIntervalAction -> org.cocos2d.actions.interval.CCIntervalAction:
    float elapsed -> elapsed
    boolean firstTick -> firstTick
    boolean $assertionsDisabled -> $assertionsDisabled
    float getElapsed() -> getElapsed
    org.cocos2d.actions.interval.CCIntervalAction action(float) -> action
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
    boolean isDone() -> isDone
    void step(float) -> step
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    void setAmplitudeRate(float) -> setAmplitudeRate
    float getAmplitudeRate() -> getAmplitudeRate
    org.cocos2d.actions.base.CCFiniteTimeAction action(float) -> action
    org.cocos2d.actions.base.CCFiniteTimeAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.base.CCFiniteTimeAction copy() -> copy
org.cocos2d.actions.interval.CCJumpBy -> org.cocos2d.actions.interval.CCJumpBy:
    org.cocos2d.types.CGPoint startPosition -> startPosition
    org.cocos2d.types.CGPoint delta -> delta
    float height -> height
    int jumps -> jumps
    org.cocos2d.actions.interval.CCJumpBy action(float,org.cocos2d.types.CGPoint,float,int) -> action
    org.cocos2d.actions.interval.CCJumpBy copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    org.cocos2d.actions.interval.CCJumpBy reverse() -> reverse
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCJumpTo -> org.cocos2d.actions.interval.d:
    org.cocos2d.actions.interval.CCJumpTo action(float,org.cocos2d.types.CGPoint,float,int) -> a
    org.cocos2d.actions.interval.CCJumpTo copy() -> a
    void start(org.cocos2d.nodes.CCNode) -> start
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCJumpBy copy() -> copy
org.cocos2d.actions.interval.CCMoveBy -> org.cocos2d.actions.interval.c:
    org.cocos2d.actions.interval.CCMoveBy action(float,org.cocos2d.types.CGPoint) -> a
    org.cocos2d.actions.interval.CCMoveBy copy() -> a
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.actions.interval.CCMoveBy reverse() -> b
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCMoveTo -> org.cocos2d.actions.interval.CCMoveTo:
    org.cocos2d.types.CGPoint endPosition -> endPosition
    org.cocos2d.types.CGPoint startPosition -> startPosition
    org.cocos2d.types.CGPoint delta -> delta
    org.cocos2d.actions.interval.CCMoveTo action(float,org.cocos2d.types.CGPoint) -> action
    void setEndPosition(org.cocos2d.types.CGPoint) -> setEndPosition
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
org.cocos2d.actions.interval.CCProgressFromTo -> org.cocos2d.actions.interval.CCProgressFromTo:
    float to_ -> to_
    float from_ -> from_
    org.cocos2d.actions.interval.CCProgressFromTo action(float,float,float) -> action
    org.cocos2d.actions.interval.CCProgressFromTo copy() -> copy
    org.cocos2d.actions.interval.CCProgressFromTo reverse() -> reverse
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCProgressTo -> org.cocos2d.actions.interval.CCProgressTo:
    float to_ -> to_
    float from_ -> from_
    org.cocos2d.actions.interval.CCProgressTo action(float,float) -> action
    org.cocos2d.actions.interval.CCProgressTo copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCPropertyAction -> org.cocos2d.actions.interval.CCPropertyAction:
    java.lang.reflect.Method setMethod_ -> setMethod_
    java.lang.String key_ -> key_
    float from_ -> from_
    float to_ -> to_
    float delta_ -> delta_
    org.cocos2d.actions.interval.CCPropertyAction action(float,java.lang.String,float,float) -> action
    org.cocos2d.actions.interval.CCPropertyAction copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    org.cocos2d.actions.interval.CCPropertyAction reverse() -> reverse
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCRepeat -> org.cocos2d.actions.interval.CCRepeat:
    int times -> times
    int total -> total
    org.cocos2d.actions.base.CCFiniteTimeAction other -> other
    org.cocos2d.actions.interval.CCRepeat action(org.cocos2d.actions.base.CCFiniteTimeAction,int) -> action
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void stop() -> stop
    void update(float) -> update
    boolean isDone() -> isDone
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.interval.CCReverseTime -> org.cocos2d.actions.interval.CCReverseTime:
    org.cocos2d.actions.base.CCFiniteTimeAction other -> other
    org.cocos2d.actions.interval.CCReverseTime action(org.cocos2d.actions.base.CCFiniteTimeAction) -> action
    org.cocos2d.actions.interval.CCReverseTime copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void stop() -> stop
    void update(float) -> update
    org.cocos2d.actions.interval.CCReverseTime reverse() -> reverse
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCRotateBy -> org.cocos2d.actions.interval.CCRotateBy:
    float angle -> angle
    float startAngle -> startAngle
    org.cocos2d.actions.interval.CCRotateBy action(float,float) -> action
    org.cocos2d.actions.interval.CCRotateBy copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    org.cocos2d.actions.interval.CCRotateBy reverse() -> reverse
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCRotateTo -> org.cocos2d.actions.interval.CCRotateTo:
    float dstAngle -> dstAngle
    float diffAngle -> diffAngle
    float startAngle -> startAngle
    org.cocos2d.actions.interval.CCRotateTo action(float,float) -> action
    org.cocos2d.actions.interval.CCRotateTo copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCScaleBy -> org.cocos2d.actions.interval.b:
    org.cocos2d.actions.interval.CCScaleBy action(float,float) -> a
    org.cocos2d.actions.interval.CCScaleBy action$1227e64() -> a
    org.cocos2d.actions.interval.CCScaleBy copy() -> c
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.actions.interval.CCScaleBy reverse() -> b
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCScaleTo copy() -> copy
org.cocos2d.actions.interval.CCScaleTo -> org.cocos2d.actions.interval.CCScaleTo:
    float scaleX -> scaleX
    float scaleY -> scaleY
    float startScaleX -> startScaleX
    float startScaleY -> startScaleY
    float endScaleX -> endScaleX
    float endScaleY -> endScaleY
    float deltaX -> deltaX
    float deltaY -> deltaY
    org.cocos2d.actions.interval.CCScaleTo action(float,float) -> action
    org.cocos2d.actions.interval.CCScaleTo action(float,float,float) -> action
    org.cocos2d.actions.interval.CCScaleTo copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCSequence -> org.cocos2d.actions.interval.CCSequence:
    org.cocos2d.actions.base.CCFiniteTimeAction[] actions -> actions
    float split -> split
    int last -> last
    org.cocos2d.actions.interval.CCSequence actions(org.cocos2d.actions.base.CCFiniteTimeAction,org.cocos2d.actions.base.CCFiniteTimeAction[]) -> actions
    org.cocos2d.actions.interval.CCSequence copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void stop() -> stop
    void update(float) -> update
    org.cocos2d.actions.interval.CCSequence reverse() -> reverse
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCSkewBy -> org.cocos2d.actions.interval.CCSkewBy:
    float skewX -> skewX
    float skewY -> skewY
    org.cocos2d.actions.interval.CCSkewBy action(float,float,float) -> action
    org.cocos2d.actions.interval.CCSkewBy copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    org.cocos2d.actions.interval.CCSkewTo action(float,float,float) -> action
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCSkewTo copy() -> copy
org.cocos2d.actions.interval.CCSkewTo -> org.cocos2d.actions.interval.CCSkewTo:
    float endSkewX -> endSkewX
    float endSkewY -> endSkewY
    float startSkewX -> startSkewX
    float deltaX -> deltaX
    float startSkewY -> startSkewY
    float deltaY -> deltaY
    org.cocos2d.actions.interval.CCSkewTo action(float,float,float) -> action
    org.cocos2d.actions.interval.CCSkewTo copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCSpawn -> org.cocos2d.actions.interval.CCSpawn:
    org.cocos2d.actions.base.CCFiniteTimeAction one -> one
    org.cocos2d.actions.base.CCFiniteTimeAction two -> two
    org.cocos2d.actions.interval.CCSpawn actions(org.cocos2d.actions.base.CCFiniteTimeAction,org.cocos2d.actions.base.CCFiniteTimeAction[]) -> actions
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void stop() -> stop
    void update(float) -> update
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
org.cocos2d.actions.interval.CCTintBy -> org.cocos2d.actions.interval.CCTintBy:
    org.cocos2d.types.ccColor3B delta -> delta
    org.cocos2d.types.ccColor3B from -> from
    org.cocos2d.actions.interval.CCTintBy action(float,org.cocos2d.types.ccColor3B) -> action
    org.cocos2d.actions.interval.CCTintBy copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    org.cocos2d.actions.interval.CCTintBy reverse() -> reverse
    org.cocos2d.actions.interval.CCIntervalAction reverse() -> reverse
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.interval.CCTintTo -> org.cocos2d.actions.interval.CCTintTo:
    org.cocos2d.types.ccColor3B to -> to
    org.cocos2d.types.ccColor3B from -> from
    org.cocos2d.actions.interval.CCTintTo action(float,org.cocos2d.types.ccColor3B) -> action
    org.cocos2d.actions.interval.CCTintTo copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.interval.CCIntervalAction copy() -> copy
org.cocos2d.actions.tile.CCFadeOutBLTiles -> org.cocos2d.actions.tile.c:
    org.cocos2d.actions.tile.CCFadeOutBLTiles action(org.cocos2d.types.ccGridSize,float) -> d
    float testFunc(org.cocos2d.types.ccGridSize,float) -> b
org.cocos2d.actions.tile.CCFadeOutDownTiles -> org.cocos2d.actions.tile.d:
    org.cocos2d.actions.tile.CCFadeOutDownTiles action(org.cocos2d.types.ccGridSize,float) -> d
    float testFunc(org.cocos2d.types.ccGridSize,float) -> b
org.cocos2d.actions.tile.CCFadeOutTRTiles -> org.cocos2d.actions.tile.a:
    org.cocos2d.actions.tile.CCFadeOutTRTiles action(org.cocos2d.types.ccGridSize,float) -> a
    float testFunc(org.cocos2d.types.ccGridSize,float) -> b
    void transformTile(org.cocos2d.types.ccGridSize,float) -> c
    void update(float) -> update
org.cocos2d.actions.tile.CCFadeOutUpTiles -> org.cocos2d.actions.tile.e:
    org.cocos2d.actions.tile.CCFadeOutUpTiles action(org.cocos2d.types.ccGridSize,float) -> e
    float testFunc(org.cocos2d.types.ccGridSize,float) -> b
    void transformTile(org.cocos2d.types.ccGridSize,float) -> c
org.cocos2d.actions.tile.CCJumpTiles3D -> org.cocos2d.actions.tile.CCJumpTiles3D:
    int jumps -> jumps
    float amplitude -> amplitude
    float amplitudeRate -> amplitudeRate
    org.cocos2d.actions.tile.CCJumpTiles3D action(int,float,org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.actions.tile.CCJumpTiles3D copy() -> copy
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.tile.CCTiledGrid3DAction copy() -> copy
org.cocos2d.actions.tile.CCShakyTiles3D -> org.cocos2d.actions.tile.CCShakyTiles3D:
    int randrange -> randrange
    boolean shakeZ -> shakeZ
    org.cocos2d.actions.tile.CCShakyTiles3D action(int,boolean,org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.actions.tile.CCShakyTiles3D copy() -> copy
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.tile.CCTiledGrid3DAction copy() -> copy
org.cocos2d.actions.tile.CCShatteredTiles3D -> org.cocos2d.actions.tile.CCShatteredTiles3D:
    int randrange -> randrange
    boolean once -> once
    boolean shatterZ -> shatterZ
    org.cocos2d.actions.tile.CCShatteredTiles3D action(int,boolean,org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.actions.tile.CCShatteredTiles3D copy() -> copy
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.tile.CCTiledGrid3DAction copy() -> copy
org.cocos2d.actions.tile.CCShuffleTiles -> org.cocos2d.actions.tile.CCShuffleTiles:
    java.util.Random rand -> rand
    int seed -> seed
    int tilesCount -> tilesCount
    int[] tilesOrder -> tilesOrder
    org.cocos2d.actions.tile.Tile[] tiles -> tiles
    org.cocos2d.actions.tile.CCShuffleTiles action(int,org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.actions.tile.CCShuffleTiles copy() -> copy
    void shuffle(int[],int) -> shuffle
    org.cocos2d.types.ccGridSize getDelta(org.cocos2d.types.ccGridSize) -> getDelta
    void placeTile(org.cocos2d.types.ccGridSize,org.cocos2d.actions.tile.Tile) -> placeTile
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.tile.CCTiledGrid3DAction copy() -> copy
org.cocos2d.actions.tile.CCSplitCols -> org.cocos2d.actions.tile.CCSplitCols:
    int cols -> cols
    org.cocos2d.types.CGSize winSize -> winSize
    org.cocos2d.actions.tile.CCSplitCols action(int,float) -> action
    org.cocos2d.actions.tile.CCSplitCols copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.tile.CCTiledGrid3DAction copy() -> copy
org.cocos2d.actions.tile.CCSplitRows -> org.cocos2d.actions.tile.CCSplitRows:
    int rows -> rows
    org.cocos2d.types.CGSize winSize -> winSize
    org.cocos2d.actions.tile.CCSplitRows action(int,float) -> action
    org.cocos2d.actions.tile.CCSplitRows copy() -> copy
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.tile.CCTiledGrid3DAction copy() -> copy
org.cocos2d.actions.tile.CCTiledGrid3DAction -> org.cocos2d.actions.tile.b:
    org.cocos2d.actions.tile.CCTiledGrid3DAction action(org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.grid.CCGridBase grid() -> grid
    org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize) -> tile
    org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize) -> originalTile
    void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3) -> setTile
    org.cocos2d.actions.tile.CCTiledGrid3DAction copy() -> copy
    java.lang.Object copy() -> copy
    org.cocos2d.actions.grid.CCGridAction copy() -> copy
org.cocos2d.actions.tile.CCTurnOffTiles -> org.cocos2d.actions.tile.CCTurnOffTiles:
    java.util.Random rand -> rand
    int seed -> seed
    int tilesCount -> tilesCount
    int[] tilesOrder -> tilesOrder
    org.cocos2d.actions.tile.CCTurnOffTiles action(int,org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.actions.tile.CCTurnOffTiles copy() -> copy
    void shuffle(int[],int) -> shuffle
    void turnOnTile(org.cocos2d.types.ccGridSize) -> turnOnTile
    void turnOffTile(org.cocos2d.types.ccGridSize) -> turnOffTile
    void start(org.cocos2d.nodes.CCNode) -> start
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.tile.CCTiledGrid3DAction copy() -> copy
org.cocos2d.actions.tile.CCWavesTiles3D -> org.cocos2d.actions.tile.CCWavesTiles3D:
    int waves -> waves
    float amplitude -> amplitude
    float amplitudeRate -> amplitudeRate
    org.cocos2d.actions.tile.CCWavesTiles3D action(int,float,org.cocos2d.types.ccGridSize,float) -> action
    org.cocos2d.actions.tile.CCWavesTiles3D copy() -> copy
    void update(float) -> update
    java.lang.Object copy() -> copy
    org.cocos2d.actions.tile.CCTiledGrid3DAction copy() -> copy
org.cocos2d.actions.tile.Tile -> org.cocos2d.actions.tile.Tile:
    org.cocos2d.types.CGPoint position -> position
    org.cocos2d.types.CGPoint startPosition -> startPosition
    org.cocos2d.types.ccGridSize delta -> delta
    org.cocos2d.actions.tile.Tile make(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.ccGridSize) -> make
    org.cocos2d.actions.tile.Tile make() -> make
org.cocos2d.config.ccConfig -> org.cocos2d.config.ccConfig:
    java.lang.String cocos2dVersion -> cocos2dVersion
    int COCOS2D_DEBUG -> COCOS2D_DEBUG
    int CC_FONT_LABEL_SUPPORT -> CC_FONT_LABEL_SUPPORT
    boolean CC_DIRECTOR_FAST_FPS -> CC_DIRECTOR_FAST_FPS
    float CC_DIRECTOR_FPS_INTERVAL -> CC_DIRECTOR_FPS_INTERVAL
    int CC_DIRECTOR_DISPATCH_FAST_EVENTS -> CC_DIRECTOR_DISPATCH_FAST_EVENTS
    boolean CC_COCOSNODE_RENDER_SUBPIXEL -> CC_COCOSNODE_RENDER_SUBPIXEL
    int CC_SPRITESHEET_RENDER_SUBPIXEL -> CC_SPRITESHEET_RENDER_SUBPIXEL
    int CC_TEXTURE_ATLAS_USES_VBO -> CC_TEXTURE_ATLAS_USES_VBO
    boolean CC_NODE_TRANSFORM_USING_AFFINE_MATRIX -> CC_NODE_TRANSFORM_USING_AFFINE_MATRIX
    boolean CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP -> CC_TEXTURE_ATLAS_USE_TRIANGLE_STRIP
    int CC_TEXTURE_NPOT_SUPPORT -> CC_TEXTURE_NPOT_SUPPORT
    int CC_SPRITE_DEBUG_DRAW -> CC_SPRITE_DEBUG_DRAW
    boolean CC_SPRITESHEET_DEBUG_DRAW -> CC_SPRITESHEET_DEBUG_DRAW
    int CC_BITMAPFONTATLAS_DEBUG_DRAW -> CC_BITMAPFONTATLAS_DEBUG_DRAW
    int CC_LABELATLAS_DEBUG_DRAW -> CC_LABELATLAS_DEBUG_DRAW
    boolean CC_ENABLE_PROFILERS -> CC_ENABLE_PROFILERS
    int CC_COMPATIBILITY_WITH_0_8 -> CC_COMPATIBILITY_WITH_0_8
    int CC_BLEND_SRC -> CC_BLEND_SRC
    int CC_BLEND_DST -> CC_BLEND_DST
org.cocos2d.config.ccMacros -> org.cocos2d.config.ccMacros:
    float FLT_EPSILON -> FLT_EPSILON
    int INT_MIN -> INT_MIN
    int CC_MAX_PARTICLE_SIZE -> CC_MAX_PARTICLE_SIZE
    float M_PI_2 -> M_PI_2
    void CCLOG(java.lang.String,java.lang.String) -> CCLOG
    void CCLOGINFO(java.lang.String,java.lang.String) -> CCLOGINFO
    void CCLOGERROR(java.lang.String,java.lang.String) -> CCLOGERROR
    float CCRANDOM_MINUS1_1() -> CCRANDOM_MINUS1_1
    float CCRANDOM_0_1() -> CCRANDOM_0_1
    float CC_DEGREES_TO_RADIANS(float) -> CC_DEGREES_TO_RADIANS
    float CC_RADIANS_TO_DEGREES(float) -> CC_RADIANS_TO_DEGREES
    void CC_ENABLE_DEFAULT_GL_STATES(javax.microedition.khronos.opengles.GL10) -> CC_ENABLE_DEFAULT_GL_STATES
    void CC_DISABLE_DEFAULT_GL_STATES(javax.microedition.khronos.opengles.GL10) -> CC_DISABLE_DEFAULT_GL_STATES
    void CC_DIRECTOR_INIT(android.app.Activity) -> CC_DIRECTOR_INIT
    void CC_DIRECTOR_END() -> CC_DIRECTOR_END
org.cocos2d.events.CCKeyDispatcher -> org.cocos2d.events.CCKeyDispatcher:
    boolean kEventHandled -> kEventHandled
    boolean kEventIgnored -> kEventIgnored
    java.util.ArrayList keyHandlers -> keyHandlers
    boolean dispatchEvents -> dispatchEvents
    org.cocos2d.events.CCKeyDispatcher _sharedDispatcher -> _sharedDispatcher
    org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue eventQueue -> eventQueue
    boolean getDispatchEvents() -> getDispatchEvents
    void setDispatchEvents(boolean) -> setDispatchEvents
    org.cocos2d.events.CCKeyDispatcher sharedDispatcher() -> sharedDispatcher
    void addHandler(org.cocos2d.events.CCKeyHandler) -> addHandler
    void addDelegate(org.cocos2d.protocols.CCKeyDelegateProtocol,int) -> addDelegate
    void removeDelegate(org.cocos2d.protocols.CCKeyDelegateProtocol) -> removeDelegate
    void removeAllDelegates() -> removeAllDelegates
    void queueMotionEvent(android.view.KeyEvent) -> queueMotionEvent
    void update() -> update
    void onKeyDown(android.view.KeyEvent) -> onKeyDown
    void onKeyUp(android.view.KeyEvent) -> onKeyUp
org.cocos2d.events.CCKeyHandler -> org.cocos2d.events.CCKeyHandler:
    org.cocos2d.protocols.CCKeyDelegateProtocol delegate_ -> delegate_
    boolean enabledSelectors_ -> enabledSelectors_
    int priority_ -> priority_
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.protocols.CCKeyDelegateProtocol getDelegate() -> getDelegate
    void setSelectorFlag(boolean) -> setSelectorFlag
    boolean getSelectorFlag() -> getSelectorFlag
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    org.cocos2d.events.CCKeyHandler makeHandler(org.cocos2d.protocols.CCKeyDelegateProtocol,int) -> makeHandler
    boolean ccKeyDown(int,android.view.KeyEvent) -> ccKeyDown
    boolean ccKeyUp(int,android.view.KeyEvent) -> ccKeyUp
org.cocos2d.events.CCTargetedTouchHandler -> org.cocos2d.events.CCTargetedTouchHandler:
    boolean swallowsTouches -> swallowsTouches
    java.util.ArrayList claimedSet -> claimedSet
    void addClaimed(int) -> addClaimed
    void removeClaimed(int) -> removeClaimed
    boolean hasClaimed(int) -> hasClaimed
org.cocos2d.events.CCTouchDispatcher -> org.cocos2d.events.CCTouchDispatcher:
    int ccTouchBegan -> ccTouchBegan
    int ccTouchMoved -> ccTouchMoved
    int ccTouchEnded -> ccTouchEnded
    int ccTouchCancelled -> ccTouchCancelled
    int ccTouchMax -> ccTouchMax
    boolean kEventHandled -> kEventHandled
    boolean kEventIgnored -> kEventIgnored
    java.util.ArrayList motionListeners -> motionListeners
    java.util.ArrayList targetedHandlers -> targetedHandlers
    java.util.ArrayList touchHandlers -> touchHandlers
    boolean dispatchEvents -> dispatchEvents
    org.cocos2d.events.CCTouchDispatcher _sharedDispatcher -> _sharedDispatcher
    org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue eventQueue -> eventQueue
    boolean getDispatchEvents() -> getDispatchEvents
    void setDispatchEvents(boolean) -> setDispatchEvents
    org.cocos2d.events.CCTouchDispatcher sharedDispatcher() -> sharedDispatcher
    void addHandler(org.cocos2d.events.CCTouchHandler,java.util.ArrayList) -> addHandler
    void addDelegate(org.cocos2d.protocols.CCTouchDelegateProtocol,int) -> addDelegate
    void addTargetedDelegate(org.cocos2d.protocols.CCTouchDelegateProtocol,int,boolean) -> addTargetedDelegate
    void removeDelegate(org.cocos2d.protocols.CCTouchDelegateProtocol) -> removeDelegate
    void removeAllDelegates() -> removeAllDelegates
    void addMotionListener(org.cocos2d.protocols.CCMotionEventProtocol) -> addMotionListener
    void removeMotionListener(org.cocos2d.protocols.CCMotionEventProtocol) -> removeMotionListener
    void removeAllMotionListeners() -> removeAllMotionListeners
    void setPriority(int,org.cocos2d.events.CCTouchHandler) -> setPriority
    void queueMotionEvent(android.view.MotionEvent) -> queueMotionEvent
    void update() -> update
    void touchesBegan(android.view.MotionEvent) -> touchesBegan
    void touchesMoved(android.view.MotionEvent) -> touchesMoved
    void touchesEnded(android.view.MotionEvent) -> touchesEnded
    void touchesCancelled(android.view.MotionEvent) -> touchesCancelled
    void proccessTouches(android.view.MotionEvent) -> proccessTouches
    java.util.ArrayList access$0(org.cocos2d.events.CCTouchDispatcher) -> access$0
    java.util.ArrayList access$1(org.cocos2d.events.CCTouchDispatcher) -> access$1
    void access$2(org.cocos2d.events.CCTouchDispatcher,org.cocos2d.events.CCTouchHandler,java.util.ArrayList) -> access$2
org.cocos2d.events.CCTouchDispatcher$1 -> org.cocos2d.events.CCTouchDispatcher$1:
    org.cocos2d.events.CCTouchDispatcher this$0 -> this$0
    java.util.ArrayList val$array -> val$array
    org.cocos2d.events.CCTouchHandler val$handler -> val$handler
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.events.CCTouchDispatcher$2 -> org.cocos2d.events.CCTouchDispatcher$2:
    org.cocos2d.events.CCTouchDispatcher this$0 -> this$0
    org.cocos2d.protocols.CCTouchDelegateProtocol val$delegate -> val$delegate
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.events.CCTouchDispatcher$3 -> org.cocos2d.events.CCTouchDispatcher$3:
    org.cocos2d.events.CCTouchDispatcher this$0 -> this$0
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.events.CCTouchDispatcher$4 -> org.cocos2d.events.CCTouchDispatcher$4:
    org.cocos2d.events.CCTouchDispatcher this$0 -> this$0
    org.cocos2d.events.CCTouchHandler val$delegate -> val$delegate
    int val$priority -> val$priority
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.events.CCTouchDispatcher$ccTouchHandlerHelperData -> org.cocos2d.events.CCTouchDispatcher$ccTouchHandlerHelperData:
    java.lang.String touchesSel -> touchesSel
    java.lang.String touchSel -> touchSel
    int ccTouchSelectorType -> ccTouchSelectorType
    org.cocos2d.events.CCTouchDispatcher this$0 -> this$0
org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag -> org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag:
    org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorNoneBit -> ccTouchSelectorNoneBit
    org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorBeganBit -> ccTouchSelectorBeganBit
    org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorMovedBit -> ccTouchSelectorMovedBit
    org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorEndedBit -> ccTouchSelectorEndedBit
    org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorCancelledBit -> ccTouchSelectorCancelledBit
    org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag ccTouchSelectorAllBits -> ccTouchSelectorAllBits
    int flag -> flag
    org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag[] ENUM$VALUES -> ENUM$VALUES
    int getFlag() -> getFlag
    org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag[] values() -> values
    org.cocos2d.events.CCTouchDispatcher$ccTouchSelectorFlag valueOf(java.lang.String) -> valueOf
org.cocos2d.events.CCTouchHandler -> org.cocos2d.events.CCTouchHandler:
    org.cocos2d.protocols.CCTouchDelegateProtocol delegate_ -> delegate_
    int priority_ -> priority_
    int enabledSelectors_ -> enabledSelectors_
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.protocols.CCTouchDelegateProtocol getDelegate() -> getDelegate
    int getPriority() -> getPriority
    void setPriority(int) -> setPriority
    void setSelectorFlag(int) -> setSelectorFlag
    int getSelectorFlag() -> getSelectorFlag
    org.cocos2d.events.CCTouchHandler makeHandler(org.cocos2d.protocols.CCTouchDelegateProtocol,int) -> makeHandler
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesMoved(android.view.MotionEvent) -> ccTouchesMoved
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
    boolean ccTouchesCancelled(android.view.MotionEvent) -> ccTouchesCancelled
org.cocos2d.grid.CCGrabber -> org.cocos2d.grid.CCGrabber:
    int[] fbo -> fbo
    int[] oldFBO -> oldFBO
    void grab(org.cocos2d.opengl.CCTexture2D) -> grab
    void beforeRender(org.cocos2d.opengl.CCTexture2D) -> beforeRender
    void afterRender(org.cocos2d.opengl.CCTexture2D) -> afterRender
    void finalize() -> finalize
org.cocos2d.grid.CCGrid3D -> org.cocos2d.grid.CCGrid3D:
    org.cocos2d.utils.FastFloatBuffer texCoordinates -> texCoordinates
    org.cocos2d.utils.FastFloatBuffer vertices -> vertices
    org.cocos2d.utils.FastFloatBuffer originalVertices -> originalVertices
    java.nio.ShortBuffer indices -> indices
    org.cocos2d.utils.FastFloatBuffer mVertexBuffer -> mVertexBuffer
    void blit(javax.microedition.khronos.opengles.GL10) -> blit
    void calculateVertexPoints() -> calculateVertexPoints
    org.cocos2d.types.CCVertex3D vertex(org.cocos2d.types.ccGridSize) -> vertex
    org.cocos2d.types.CCVertex3D originalVertex(org.cocos2d.types.ccGridSize) -> originalVertex
    void setVertex(org.cocos2d.types.ccGridSize,org.cocos2d.types.CCVertex3D) -> setVertex
    void reuse(javax.microedition.khronos.opengles.GL10) -> reuse
org.cocos2d.grid.CCGridBase -> org.cocos2d.grid.CCGridBase:
    boolean active_ -> active_
    int reuseGrid_ -> reuseGrid_
    org.cocos2d.types.ccGridSize gridSize_ -> gridSize_
    org.cocos2d.opengl.CCTexture2D texture_ -> texture_
    org.cocos2d.types.CGPoint step_ -> step_
    org.cocos2d.grid.CCGrabber grabber_ -> grabber_
    boolean isTextureFlipped_ -> isTextureFlipped_
    javax.microedition.khronos.opengles.GL10 gl -> gl
    int kTextureSize -> kTextureSize
    org.cocos2d.types.CGPoint getStep() -> getStep
    boolean isTextureFlipped() -> isTextureFlipped
    void setIsTextureFlipped(javax.microedition.khronos.opengles.GL10,boolean) -> setIsTextureFlipped
    int reuseGrid() -> reuseGrid
    void setReuseGrid(int) -> setReuseGrid
    boolean isActive() -> isActive
    void setActive(boolean) -> setActive
    int getGridWidth() -> getGridWidth
    int getGridHeight() -> getGridHeight
    void init(org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean) -> init
    java.lang.String toString() -> toString
    void applyLandscape(javax.microedition.khronos.opengles.GL10) -> applyLandscape
    void set2DProjection(javax.microedition.khronos.opengles.GL10) -> set2DProjection
    void set3DProjection(javax.microedition.khronos.opengles.GL10) -> set3DProjection
    void beforeDraw(javax.microedition.khronos.opengles.GL10) -> beforeDraw
    void afterDraw(javax.microedition.khronos.opengles.GL10,org.cocos2d.nodes.CCNode) -> afterDraw
    void finalize() -> finalize
    void blit(javax.microedition.khronos.opengles.GL10) -> blit
    void reuse(javax.microedition.khronos.opengles.GL10) -> reuse
    void calculateVertexPoints() -> calculateVertexPoints
    void access$0(org.cocos2d.grid.CCGridBase,org.cocos2d.types.ccGridSize,org.cocos2d.opengl.CCTexture2D,boolean) -> access$0
org.cocos2d.grid.CCGridBase$1 -> org.cocos2d.grid.CCGridBase$1:
    org.cocos2d.grid.CCGridBase this$0 -> this$0
    org.cocos2d.types.ccGridSize val$gSize -> val$gSize
    void load(org.cocos2d.opengl.GLResourceHelper$Resource) -> load
org.cocos2d.grid.CCTiledGrid3D -> org.cocos2d.grid.CCTiledGrid3D:
    org.cocos2d.utils.FastFloatBuffer texCoordinates -> texCoordinates
    org.cocos2d.utils.FastFloatBuffer vertices -> vertices
    org.cocos2d.utils.FastFloatBuffer originalVertices -> originalVertices
    java.nio.ShortBuffer indices -> indices
    org.cocos2d.grid.CCTiledGrid3D make(org.cocos2d.types.ccGridSize) -> make
    void blit(javax.microedition.khronos.opengles.GL10) -> blit
    void calculateVertexPoints() -> calculateVertexPoints
    void setTile(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccQuad3) -> setTile
    org.cocos2d.types.ccQuad3 originalTile(org.cocos2d.types.ccGridSize) -> originalTile
    org.cocos2d.types.ccQuad3 tile(org.cocos2d.types.ccGridSize) -> tile
    void reuse(javax.microedition.khronos.opengles.GL10) -> reuse
org.cocos2d.layers.CCColorLayer -> org.cocos2d.layers.CCColorLayer:
    org.cocos2d.types.ccColor3B color_ -> color_
    int opacity_ -> opacity_
    org.cocos2d.types.ccBlendFunc blendFunc_ -> blendFunc_
    org.cocos2d.utils.FastFloatBuffer squareVertices_ -> squareVertices_
    org.cocos2d.utils.FastFloatBuffer squareColors_ -> squareColors_
    org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B) -> node
    org.cocos2d.layers.CCColorLayer node(org.cocos2d.types.ccColor4B,float,float) -> node
    void init(org.cocos2d.types.ccColor4B,float,float) -> init
    void updateColor() -> updateColor
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    org.cocos2d.types.ccColor3B getColor() -> getColor
    void setColor(org.cocos2d.types.ccColor3B) -> setColor
    void setOpacity(int) -> setOpacity
    int getOpacity() -> getOpacity
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    void setContentSize(org.cocos2d.types.CGSize) -> setContentSize
    void changeWidthAndHeight(float,float) -> changeWidthAndHeight
    void changeWidth(float) -> changeWidth
    void changeHeight(float) -> changeHeight
    boolean doesOpacityModifyRGB() -> doesOpacityModifyRGB
    void setOpacityModifyRGB(boolean) -> setOpacityModifyRGB
org.cocos2d.layers.CCLayer -> org.cocos2d.layers.CCLayer:
    boolean isTouchEnabled_ -> isTouchEnabled_
    boolean isAccelerometerEnabled_ -> isAccelerometerEnabled_
    int accelerometerUpdateRate -> accelerometerUpdateRate
    android.hardware.SensorManager sensorManager -> sensorManager
    android.hardware.Sensor accelerometer -> accelerometer
    boolean isKeyEnabled_ -> isKeyEnabled_
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean isTouchEnabled() -> isTouchEnabled
    void setIsTouchEnabled(boolean) -> setIsTouchEnabled
    boolean isAccelerometerEnabled() -> isAccelerometerEnabled
    void setIsAccelerometerEnabled(boolean) -> setIsAccelerometerEnabled
    void enableAccelerometerWithRate(int) -> enableAccelerometerWithRate
    boolean isKeyEnabled() -> isKeyEnabled
    void setIsKeyEnabled(boolean) -> setIsKeyEnabled
    org.cocos2d.layers.CCLayer node() -> node
    void registerWithTouchDispatcher() -> registerWithTouchDispatcher
    void registerWithAccelerometer() -> registerWithAccelerometer
    void unregisterWithAccelerometer() -> unregisterWithAccelerometer
    void onEnter() -> onEnter
    void onExit() -> onExit
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesMoved(android.view.MotionEvent) -> ccTouchesMoved
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
    boolean ccTouchesCancelled(android.view.MotionEvent) -> ccTouchesCancelled
    void ccAccelerometerChanged(float,float,float) -> ccAccelerometerChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    boolean ccKeyDown(int,android.view.KeyEvent) -> ccKeyDown
    boolean ccKeyUp(int,android.view.KeyEvent) -> ccKeyUp
    org.cocos2d.nodes.CCNode node() -> node
org.cocos2d.layers.CCMultiplexLayer -> org.cocos2d.layers.CCMultiplexLayer:
    java.util.ArrayList layers -> layers
    int enabledLayer -> enabledLayer
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.layers.CCMultiplexLayer node(org.cocos2d.layers.CCLayer[]) -> node
    void switchTo(int) -> switchTo
    void switchToAndReleaseMe(int) -> switchToAndReleaseMe
org.cocos2d.layers.CCScene -> org.cocos2d.layers.a:
    org.cocos2d.layers.CCScene node() -> node
    org.cocos2d.nodes.CCNode node() -> node
org.cocos2d.layers.CCTMXLayer -> org.cocos2d.layers.CCTMXLayer:
    org.cocos2d.layers.CCTMXTilesetInfo tileset -> tileset
    java.lang.String layerName -> layerName
    org.cocos2d.types.CGSize layerSize -> layerSize
    org.cocos2d.types.CGSize mapTileSize -> mapTileSize
    java.nio.IntBuffer tiles -> tiles
    int layerOrientation_ -> layerOrientation_
    java.util.HashMap properties -> properties
    int opacity_ -> opacity_
    int minGID_ -> minGID_
    int maxGID_ -> maxGID_
    int vertexZvalue_ -> vertexZvalue_
    boolean useAutomaticVertexZ_ -> useAutomaticVertexZ_
    float alphaFuncValue_ -> alphaFuncValue_
    org.cocos2d.nodes.CCSprite reusedTile_ -> reusedTile_
    java.util.ArrayList atlasIndexArray_ -> atlasIndexArray_
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.layers.CCTMXLayer layer(org.cocos2d.layers.CCTMXTilesetInfo,org.cocos2d.layers.CCTMXLayerInfo,org.cocos2d.layers.CCTMXMapInfo) -> layer
    void releaseMap() -> releaseMap
    org.cocos2d.nodes.CCSprite tileAt(org.cocos2d.types.CGPoint) -> tileAt
    int tileGIDAt(org.cocos2d.types.CGPoint) -> tileGIDAt
    void setTileGID(int,org.cocos2d.types.CGPoint) -> setTileGID
    void removeTileAt(org.cocos2d.types.CGPoint) -> removeTileAt
    org.cocos2d.types.CGPoint positionAt(org.cocos2d.types.CGPoint) -> positionAt
    java.lang.String propertyNamed(java.lang.String) -> propertyNamed
    void setupTiles() -> setupTiles
    org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int) -> addChild
    void removeChild(org.cocos2d.nodes.CCNode,boolean) -> removeChild
    org.cocos2d.types.CGPoint calculateLayerOffset(org.cocos2d.types.CGPoint) -> calculateLayerOffset
    org.cocos2d.types.CGPoint positionForOrthoAt(org.cocos2d.types.CGPoint) -> positionForOrthoAt
    org.cocos2d.types.CGPoint positionForIsoAt(org.cocos2d.types.CGPoint) -> positionForIsoAt
    org.cocos2d.types.CGPoint positionForHexAt(org.cocos2d.types.CGPoint) -> positionForHexAt
    int vertexZForPos(org.cocos2d.types.CGPoint) -> vertexZForPos
    org.cocos2d.nodes.CCSprite appendTileForGID(int,org.cocos2d.types.CGPoint) -> appendTileForGID
    org.cocos2d.nodes.CCSprite insertTileForGID(int,org.cocos2d.types.CGPoint) -> insertTileForGID
    org.cocos2d.nodes.CCSprite updateTileForGID(int,org.cocos2d.types.CGPoint) -> updateTileForGID
    void parseInternalProperties() -> parseInternalProperties
    int atlasIndexForExistantZ(int) -> atlasIndexForExistantZ
    int atlasIndexForNewZ(int) -> atlasIndexForNewZ
    int compareInts(int,int) -> compareInts
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
org.cocos2d.layers.CCTMXLayerInfo -> org.cocos2d.layers.CCTMXLayerInfo:
    java.lang.String name -> name
    org.cocos2d.types.CGSize layerSize -> layerSize
    java.nio.IntBuffer tiles -> tiles
    boolean visible -> visible
    int opacity -> opacity
    boolean ownTiles -> ownTiles
    int minGID -> minGID
    int maxGID -> maxGID
    java.util.HashMap properties -> properties
    org.cocos2d.types.CGPoint offset -> offset
org.cocos2d.layers.CCTMXMapInfo -> org.cocos2d.layers.CCTMXMapInfo:
    java.lang.String LOG_TAG -> LOG_TAG
    int TMXLayerAttribNone -> TMXLayerAttribNone
    int TMXLayerAttribBase64 -> TMXLayerAttribBase64
    int TMXLayerAttribGzip -> TMXLayerAttribGzip
    int TMXPropertyNone -> TMXPropertyNone
    int TMXPropertyMap -> TMXPropertyMap
    int TMXPropertyLayer -> TMXPropertyLayer
    int TMXPropertyObjectGroup -> TMXPropertyObjectGroup
    int TMXPropertyObject -> TMXPropertyObject
    int TMXPropertyTile -> TMXPropertyTile
    java.lang.StringBuilder currentString -> currentString
    boolean storingCharacters -> storingCharacters
    int layerAttribs -> layerAttribs
    int parentElement -> parentElement
    int parentGID -> parentGID
    java.lang.String filename -> filename
    int orientation -> orientation
    org.cocos2d.types.CGSize mapSize -> mapSize
    org.cocos2d.types.CGSize tileSize -> tileSize
    java.util.ArrayList layers -> layers
    java.util.ArrayList tilesets -> tilesets
    java.util.ArrayList objectGroups -> objectGroups
    java.util.HashMap properties -> properties
    java.util.HashMap tileProperties -> tileProperties
    org.cocos2d.layers.CCTMXMapInfo formatWithTMXFile(java.lang.String) -> formatWithTMXFile
    void parseXMLFile(java.lang.String) -> parseXMLFile
    void access$0(org.cocos2d.layers.CCTMXMapInfo,java.lang.String) -> access$0
org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser -> org.cocos2d.layers.CCTMXMapInfo$CCTMXXMLParser:
    org.cocos2d.layers.CCTMXMapInfo this$0 -> this$0
    boolean $assertionsDisabled -> $assertionsDisabled
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
org.cocos2d.layers.CCTMXObjectGroup -> org.cocos2d.layers.CCTMXObjectGroup:
    java.lang.String groupName -> groupName
    org.cocos2d.types.CGPoint positionOffset -> positionOffset
    java.util.ArrayList objects -> objects
    java.util.HashMap properties -> properties
    java.lang.Object propertyNamed(java.lang.String) -> propertyNamed
    java.util.HashMap objectNamed(java.lang.String) -> objectNamed
org.cocos2d.layers.CCTMXTiledMap -> org.cocos2d.layers.CCTMXTiledMap:
    java.lang.String LOG_TAG -> LOG_TAG
    int CCTMXOrientationOrtho -> CCTMXOrientationOrtho
    int CCTMXOrientationHex -> CCTMXOrientationHex
    int CCTMXOrientationIso -> CCTMXOrientationIso
    org.cocos2d.types.CGSize mapSize_ -> mapSize_
    org.cocos2d.types.CGSize tileSize_ -> tileSize_
    int mapOrientation_ -> mapOrientation_
    java.util.ArrayList objectGroups -> objectGroups
    java.util.HashMap properties_ -> properties_
    java.util.HashMap tileProperties_ -> tileProperties_
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.types.CGSize getMapSize() -> getMapSize
    org.cocos2d.types.CGSize getTileSize() -> getTileSize
    int getMapOrientation() -> getMapOrientation
    java.util.HashMap getProperties() -> getProperties
    void setProperties(java.util.HashMap) -> setProperties
    org.cocos2d.layers.CCTMXTiledMap tiledMap(java.lang.String) -> tiledMap
    org.cocos2d.layers.CCTMXLayer layerNamed(java.lang.String) -> layerNamed
    org.cocos2d.layers.CCTMXObjectGroup objectGroupNamed(java.lang.String) -> objectGroupNamed
    org.cocos2d.layers.CCTMXObjectGroup groupNamed(java.lang.String) -> groupNamed
    java.lang.Object propertyNamed(java.lang.String) -> propertyNamed
    java.util.HashMap propertiesForGID(int) -> propertiesForGID
    org.cocos2d.layers.CCTMXLayer parseLayer(org.cocos2d.layers.CCTMXLayerInfo,org.cocos2d.layers.CCTMXMapInfo) -> parseLayer
    org.cocos2d.layers.CCTMXTilesetInfo tilesetForLayer(org.cocos2d.layers.CCTMXLayerInfo,org.cocos2d.layers.CCTMXMapInfo) -> tilesetForLayer
org.cocos2d.layers.CCTMXTilesetInfo -> org.cocos2d.layers.CCTMXTilesetInfo:
    java.lang.String name -> name
    int firstGid -> firstGid
    org.cocos2d.types.CGSize tileSize -> tileSize
    int spacing -> spacing
    int margin -> margin
    java.lang.String sourceImage -> sourceImage
    org.cocos2d.types.CGSize imageSize -> imageSize
    org.cocos2d.types.CGRect rectForGID(int) -> rectForGID
org.cocos2d.menus.CCMenu -> org.cocos2d.menus.CCMenu:
    int kDefaultPadding -> kDefaultPadding
    org.cocos2d.menus.CCMenuItem selectedItem -> selectedItem
    org.cocos2d.menus.CCMenu$MenuState state -> state
    int opacity_ -> opacity_
    org.cocos2d.types.ccColor3B color_ -> color_
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.menus.CCMenuItem getSelectedItem() -> getSelectedItem
    void setSelectedItem(org.cocos2d.menus.CCMenuItem) -> setSelectedItem
    void registerWithTouchDispatcher() -> registerWithTouchDispatcher
    org.cocos2d.menus.CCMenu menu(org.cocos2d.menus.CCMenuItem[]) -> menu
    org.cocos2d.menus.CCMenu menu() -> menu
    org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int) -> addChild
    void setOpacity(int) -> setOpacity
    int getOpacity() -> getOpacity
    void setColor(org.cocos2d.types.ccColor3B) -> setColor
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
    boolean ccTouchesCancelled(android.view.MotionEvent) -> ccTouchesCancelled
    boolean ccTouchesMoved(android.view.MotionEvent) -> ccTouchesMoved
    void alignItemsVertically() -> alignItemsVertically
    void alignItemsVertically(float) -> alignItemsVertically
    void alignItemsHorizontally() -> alignItemsHorizontally
    void alignItemsHorizontally(float) -> alignItemsHorizontally
    void alignItemsInColumns(int[]) -> alignItemsInColumns
    void alignItemsInRows(int[]) -> alignItemsInRows
    org.cocos2d.menus.CCMenuItem itemForTouch(android.view.MotionEvent) -> itemForTouch
org.cocos2d.menus.CCMenu$MenuState -> org.cocos2d.menus.CCMenu$MenuState:
    org.cocos2d.menus.CCMenu$MenuState kMenuStateWaiting -> kMenuStateWaiting
    org.cocos2d.menus.CCMenu$MenuState kMenuStateTrackingTouch -> kMenuStateTrackingTouch
    org.cocos2d.menus.CCMenu$MenuState[] ENUM$VALUES -> ENUM$VALUES
    org.cocos2d.menus.CCMenu$MenuState[] values() -> values
    org.cocos2d.menus.CCMenu$MenuState valueOf(java.lang.String) -> valueOf
org.cocos2d.menus.CCMenuItem -> org.cocos2d.menus.CCMenuItem:
    int kItemSize -> kItemSize
    int _fontSize -> _fontSize
    java.lang.String fontName -> fontName
    int kCurrentItem -> kCurrentItem
    int kZoomActionTag -> kZoomActionTag
    boolean isEnabled_ -> isEnabled_
    boolean isSelected_ -> isSelected_
    java.lang.Object targetCallback -> targetCallback
    java.lang.String selector -> selector
    java.lang.reflect.Method invocation -> invocation
    org.cocos2d.menus.CCMenuItem item(java.lang.Object,java.lang.String) -> item
    void activate() -> activate
    void selected() -> selected
    void unselected() -> unselected
    void setIsEnabled(boolean) -> setIsEnabled
    boolean isEnabled() -> isEnabled
    org.cocos2d.types.CGRect rect() -> rect
    void rect(org.cocos2d.types.CGRect) -> rect
org.cocos2d.menus.CCMenuItemAtlasFont -> org.cocos2d.menus.CCMenuItemAtlasFont:
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.menus.CCMenuItemAtlasFont item(java.lang.CharSequence,java.lang.String,int,int,char) -> item
    org.cocos2d.menus.CCMenuItemAtlasFont item(java.lang.CharSequence,java.lang.String,int,int,char,org.cocos2d.nodes.CCNode,java.lang.String) -> item
org.cocos2d.menus.CCMenuItemFont -> org.cocos2d.menus.CCMenuItemFont:
    int _fontSize -> _fontSize
    java.lang.String _fontName -> _fontName
    void setFontSize(int) -> setFontSize
    int fontSize() -> fontSize
    void setFontName(java.lang.String) -> setFontName
    java.lang.String fontName() -> fontName
    org.cocos2d.menus.CCMenuItemFont item(java.lang.String) -> item
    org.cocos2d.menus.CCMenuItemFont item(java.lang.String,org.cocos2d.nodes.CCNode,java.lang.String) -> item
    org.cocos2d.menus.CCMenuItemLabel item(java.lang.String,org.cocos2d.nodes.CCNode,java.lang.String) -> item
org.cocos2d.menus.CCMenuItemImage -> org.cocos2d.menus.a:
    org.cocos2d.menus.CCMenuItemImage item(java.lang.String,java.lang.String) -> a
    org.cocos2d.menus.CCMenuItemImage item(java.lang.String,java.lang.String,org.cocos2d.nodes.CCNode,java.lang.String) -> a
    org.cocos2d.menus.CCMenuItemImage item$6141642f(java.lang.String,java.lang.String,org.cocos2d.nodes.CCNode,java.lang.String) -> b
org.cocos2d.menus.CCMenuItemLabel -> org.cocos2d.menus.CCMenuItemLabel:
    org.cocos2d.protocols.CCLabelProtocol label_ -> label_
    org.cocos2d.types.ccColor3B colorBackup -> colorBackup
    org.cocos2d.types.ccColor3B disabledColor_ -> disabledColor_
    float originalScale_ -> originalScale_
    org.cocos2d.menus.CCMenuItemLabel item(org.cocos2d.protocols.CCLabelProtocol,org.cocos2d.nodes.CCNode,java.lang.String) -> item
    org.cocos2d.menus.CCMenuItemLabel item(java.lang.String,org.cocos2d.nodes.CCNode,java.lang.String) -> item
    void setOpacity(int) -> setOpacity
    int getOpacity() -> getOpacity
    void setColor(org.cocos2d.types.ccColor3B) -> setColor
    org.cocos2d.types.ccColor3B getColor() -> getColor
    org.cocos2d.types.ccColor3B getDisabledColor() -> getDisabledColor
    void setDisabledColor(org.cocos2d.types.ccColor3B) -> setDisabledColor
    org.cocos2d.protocols.CCLabelProtocol getLabel() -> getLabel
    void setLabel(org.cocos2d.protocols.CCLabelProtocol) -> setLabel
    void setString(java.lang.String) -> setString
    void activate() -> activate
    void selected() -> selected
    void unselected() -> unselected
    void setIsEnabled(boolean) -> setIsEnabled
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    boolean doesOpacityModifyRGB() -> doesOpacityModifyRGB
    void setOpacityModifyRGB(boolean) -> setOpacityModifyRGB
org.cocos2d.menus.CCMenuItemSprite -> org.cocos2d.menus.CCMenuItemSprite:
    org.cocos2d.nodes.CCNode normalImage_ -> normalImage_
    org.cocos2d.nodes.CCNode selectedImage_ -> selectedImage_
    org.cocos2d.nodes.CCNode disabledImage_ -> disabledImage_
    void setNormalImage(org.cocos2d.nodes.CCNode) -> setNormalImage
    org.cocos2d.nodes.CCNode getNormalImage() -> getNormalImage
    void setSelectedImage(org.cocos2d.nodes.CCNode) -> setSelectedImage
    org.cocos2d.nodes.CCNode getSelectedImage() -> getSelectedImage
    void setDisabledImage(org.cocos2d.nodes.CCNode) -> setDisabledImage
    org.cocos2d.nodes.CCNode getDisabledImage() -> getDisabledImage
    org.cocos2d.menus.CCMenuItemSprite item(org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode) -> item
    org.cocos2d.menus.CCMenuItemSprite item(org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,java.lang.String) -> item
    org.cocos2d.menus.CCMenuItemSprite item(org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,org.cocos2d.nodes.CCNode,java.lang.String) -> item
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    void setOpacity(int) -> setOpacity
    void setColor(org.cocos2d.types.ccColor3B) -> setColor
    org.cocos2d.types.ccColor3B getColor() -> getColor
    int getOpacity() -> getOpacity
    boolean doesOpacityModifyRGB() -> doesOpacityModifyRGB
    void setOpacityModifyRGB(boolean) -> setOpacityModifyRGB
org.cocos2d.menus.CCMenuItemToggle -> org.cocos2d.menus.CCMenuItemToggle:
    int selectedIndex_ -> selectedIndex_
    java.util.ArrayList subItems_ -> subItems_
    byte opacity_ -> opacity_
    org.cocos2d.types.ccColor3B color_ -> color_
    java.util.ArrayList getSubItemsRef() -> getSubItemsRef
    org.cocos2d.menus.CCMenuItemToggle item(org.cocos2d.nodes.CCNode,java.lang.String,org.cocos2d.menus.CCMenuItem[]) -> item
    void setSelectedIndex(int) -> setSelectedIndex
    int selectedIndex() -> selectedIndex
    void selected() -> selected
    void unselected() -> unselected
    void activate() -> activate
    void setIsEnabled(boolean) -> setIsEnabled
    org.cocos2d.menus.CCMenuItem selectedItem() -> selectedItem
    void setOpacity(byte) -> setOpacity
    byte getOpacity() -> getOpacity
    void setColor(org.cocos2d.types.ccColor3B) -> setColor
org.cocos2d.nodes.CCAnimation -> org.cocos2d.nodes.CCAnimation:
    java.lang.String name_ -> name_
    float delay_ -> delay_
    java.util.ArrayList frames_ -> frames_
    java.lang.String name() -> name
    float delay() -> delay
    java.util.ArrayList frames() -> frames
    org.cocos2d.nodes.CCAnimation animation(java.lang.String) -> animation
    org.cocos2d.nodes.CCAnimation animation(java.lang.String,java.util.ArrayList) -> animation
    org.cocos2d.nodes.CCAnimation animation(java.lang.String,float) -> animation
    org.cocos2d.nodes.CCAnimation animation(java.lang.String,float,java.util.ArrayList) -> animation
    void addFrame(java.lang.String) -> addFrame
    void addFrame(org.cocos2d.opengl.CCTexture2D) -> addFrame
    void addFrame(org.cocos2d.nodes.CCSpriteFrame) -> addFrame
    void addFrame(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect) -> addFrame
org.cocos2d.nodes.CCAtlasNode -> org.cocos2d.nodes.CCAtlasNode:
    org.cocos2d.opengl.CCTextureAtlas textureAtlas_ -> textureAtlas_
    int itemsPerRow -> itemsPerRow
    int itemsPerColumn -> itemsPerColumn
    float texStepX -> texStepX
    float texStepY -> texStepY
    int itemWidth -> itemWidth
    int itemHeight -> itemHeight
    org.cocos2d.types.ccBlendFunc blendFunc_ -> blendFunc_
    int opacity_ -> opacity_
    org.cocos2d.types.ccColor3B color_ -> color_
    org.cocos2d.types.ccColor3B colorUnmodified_ -> colorUnmodified_
    boolean opacityModifyRGB_ -> opacityModifyRGB_
    void calculateMaxItems() -> calculateMaxItems
    void calculateTexCoordsSteps() -> calculateTexCoordsSteps
    void updateAtlasValues() -> updateAtlasValues
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    void setOpacity(int) -> setOpacity
    int getOpacity() -> getOpacity
    void setColor(org.cocos2d.types.ccColor3B) -> setColor
    org.cocos2d.types.ccColor3B getColor() -> getColor
    void updateBlendFunc() -> updateBlendFunc
    void setTexture(org.cocos2d.opengl.CCTexture2D) -> setTexture
    org.cocos2d.opengl.CCTexture2D getTexture() -> getTexture
    void setOpacityModifyRGB(boolean) -> setOpacityModifyRGB
    boolean doesOpacityModifyRGB() -> doesOpacityModifyRGB
    void updateOpacityModifyRGB() -> updateOpacityModifyRGB
org.cocos2d.nodes.CCDirector -> org.cocos2d.nodes.CCDirector:
    java.lang.String LOG_TAG -> LOG_TAG
    int kCCPixelFormatRGB565 -> kCCPixelFormatRGB565
    int kCCPixelFormatRGBA8888 -> kCCPixelFormatRGBA8888
    int kCCPixelFormatDefault -> kCCPixelFormatDefault
    int kCCDepthBufferNone -> kCCDepthBufferNone
    int kCCDepthBuffer16 -> kCCDepthBuffer16
    int kCCDepthBuffer24 -> kCCDepthBuffer24
    int kCCDirectorProjection2D -> kCCDirectorProjection2D
    int kCCDirectorProjection3D -> kCCDirectorProjection3D
    int kCCDirectorProjectionCustom -> kCCDirectorProjectionCustom
    int kCCDirectorProjectionDefault -> kCCDirectorProjectionDefault
    int projection_ -> projection_
    int kCCDirectorTypeNSTimer -> kCCDirectorTypeNSTimer
    int kCCDirectorTypeMainLoop -> kCCDirectorTypeMainLoop
    int kCCDirectorTypeThreadMainLoop -> kCCDirectorTypeThreadMainLoop
    int kCCDirectorTypeDisplayLink -> kCCDirectorTypeDisplayLink
    int kCCDirectorTypeDefault -> kCCDirectorTypeDefault
    int kCCDeviceOrientationPortrait -> kCCDeviceOrientationPortrait
    int kCCDeviceOrientationLandscapeLeft -> kCCDeviceOrientationLandscapeLeft
    android.app.Activity theApp -> theApp
    double kDefaultFPS -> kDefaultFPS
    boolean FAST_FPS_DISPLAY -> FAST_FPS_DISPLAY
    int depthBufferFormat_ -> depthBufferFormat_
    int pixelFormat_ -> pixelFormat_
    int deviceOrientation_ -> deviceOrientation_
    int frames_ -> frames_
    float accumDt_ -> accumDt_
    float frameRate_ -> frameRate_
    org.cocos2d.nodes.CCLabelAtlas FPSLabel_ -> FPSLabel_
    boolean isPaused -> isPaused
    org.cocos2d.layers.CCScene runningCCScene_ -> runningCCScene_
    org.cocos2d.layers.CCScene nextCCScene_ -> nextCCScene_
    boolean sendCleanupToCCScene_ -> sendCleanupToCCScene_
    java.util.ArrayList CCScenesStack_ -> CCScenesStack_
    long lastUpdate_ -> lastUpdate_
    float dt -> dt
    boolean nextDeltaTimeZero_ -> nextDeltaTimeZero_
    org.cocos2d.opengl.GLSurfaceView openGLView_ -> openGLView_
    org.cocos2d.types.CGSize screenSize_ -> screenSize_
    org.cocos2d.types.CGSize surfaceSize_ -> surfaceSize_
    float contentScaleFactor_ -> contentScaleFactor_
    boolean isContentScaleSupported_ -> isContentScaleSupported_
    float accumDtForProfiler_ -> accumDtForProfiler_
    double animationInterval_ -> animationInterval_
    double oldAnimationInterval_ -> oldAnimationInterval_
    boolean displayFPS -> displayFPS
    org.cocos2d.nodes.CCDirector _sharedDirector -> _sharedDirector
    double sleepInterval -> sleepInterval
    org.cocos2d.utils.javolution.TextBuilder fpsBuilder -> fpsBuilder
    boolean mTranslucentBackground -> mTranslucentBackground
    javax.microedition.khronos.opengles.GL10 gl -> gl
    boolean $assertionsDisabled -> $assertionsDisabled
    int getProjection() -> getProjection
    void setProjection(int) -> setProjection
    android.app.Activity getActivity() -> getActivity
    void setDepthBufferFormat(int) -> setDepthBufferFormat
    int getPixelFormat() -> getPixelFormat
    float getZEye() -> getZEye
    void setPixelFormat(int) -> setPixelFormat
    int getDeviceOrientation() -> getDeviceOrientation
    void setDeviceOrientation(int) -> setDeviceOrientation
    void applyOrientation(javax.microedition.khronos.opengles.GL10) -> applyOrientation
    boolean getIsPaused() -> getIsPaused
    boolean getSendCleanupToScene() -> getSendCleanupToScene
    boolean getNextDeltaTimeZero() -> getNextDeltaTimeZero
    void setNextDeltaTimeZero(boolean) -> setNextDeltaTimeZero
    org.cocos2d.opengl.GLSurfaceView getOpenGLView() -> getOpenGLView
    void setContentScaleFactor(javax.microedition.khronos.opengles.GL10,float) -> setContentScaleFactor
    float getContentScaleFactor() -> getContentScaleFactor
    org.cocos2d.layers.CCScene getRunningScene() -> getRunningScene
    double getAnimationInterval() -> getAnimationInterval
    void setAnimationInterval(double) -> setAnimationInterval
    void setDisplayFPS(boolean) -> setDisplayFPS
    org.cocos2d.nodes.CCDirector sharedDirector() -> sharedDirector
    void setGLDefaultValues(javax.microedition.khronos.opengles.GL10) -> setGLDefaultValues
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
    void waitForFPS() -> waitForFPS
    void drawCCScene(javax.microedition.khronos.opengles.GL10) -> drawCCScene
    void calculateDeltaTime() -> calculateDeltaTime
    org.cocos2d.types.CGSize winSize() -> winSize
    org.cocos2d.types.CGSize winSizeRef() -> winSizeRef
    org.cocos2d.types.CGSize displaySize() -> displaySize
    boolean getLandscape() -> getLandscape
    void setLandscape(boolean) -> setLandscape
    boolean isOpenGLAttached() -> isOpenGLAttached
    boolean detach() -> detach
    boolean attachInWindow(android.view.View) -> attachInWindow
    boolean attachInView(android.view.View) -> attachInView
    boolean attachInView(android.view.View,org.cocos2d.types.CGRect) -> attachInView
    boolean attachInView(android.view.View,float) -> attachInView
    org.cocos2d.types.CGRect getAppFrameRect(float) -> getAppFrameRect
    void setScreenSize(float,float) -> setScreenSize
    boolean initOpenGLViewWithView(android.view.View,org.cocos2d.types.CGRect) -> initOpenGLViewWithView
    void showProfilers() -> showProfilers
    org.cocos2d.types.CGPoint convertToGL(org.cocos2d.types.CGPoint) -> convertToGL
    void convertToGL(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> convertToGL
    void convertToGL(float,float,org.cocos2d.types.CGPoint) -> convertToGL
    org.cocos2d.types.CGPoint convertToUI(org.cocos2d.types.CGPoint) -> convertToUI
    void runWithScene(org.cocos2d.layers.CCScene) -> runWithScene
    void replaceScene(org.cocos2d.layers.CCScene) -> replaceScene
    void pushScene(org.cocos2d.layers.CCScene) -> pushScene
    void popScene() -> popScene
    void purgeCachedData() -> purgeCachedData
    void end() -> end
    void setNextScene() -> setNextScene
    void onPause() -> onPause
    void onResume() -> onResume
    void pause() -> pause
    void resume() -> resume
    void setAlphaBlending(javax.microedition.khronos.opengles.GL10,boolean) -> setAlphaBlending
    void setDepthTest(javax.microedition.khronos.opengles.GL10,boolean) -> setDepthTest
    void setCCTexture2D(javax.microedition.khronos.opengles.GL10,boolean) -> setCCTexture2D
    void updateContentScaleFactor() -> updateContentScaleFactor
    int[] getConfigSpec() -> getConfigSpec
    void showFPS(javax.microedition.khronos.opengles.GL10) -> showFPS
    boolean onKeyDown(android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(android.view.KeyEvent) -> onKeyUp
    void setIsEnableKeyEvent(boolean) -> setIsEnableKeyEvent
    boolean isEnableKeyEvent() -> isEnableKeyEvent
org.cocos2d.nodes.CCLabel -> org.cocos2d.nodes.CCLabel:
    org.cocos2d.types.CGSize _dimensions -> _dimensions
    org.cocos2d.nodes.CCLabel$TextAlignment _alignment -> _alignment
    java.lang.String _fontName -> _fontName
    float _fontSize -> _fontSize
    java.lang.String _string -> _string
    org.cocos2d.nodes.CCLabel makeLabel(java.lang.String,org.cocos2d.types.CGSize,org.cocos2d.nodes.CCLabel$TextAlignment,java.lang.String,float) -> makeLabel
    org.cocos2d.nodes.CCLabel makeLabel(java.lang.String,java.lang.String,float) -> makeLabel
    void setString(java.lang.CharSequence) -> setString
    java.lang.String toString() -> toString
    org.cocos2d.types.CGSize access$0(org.cocos2d.nodes.CCLabel) -> access$0
    java.lang.String access$1(org.cocos2d.nodes.CCLabel) -> access$1
    java.lang.String access$2(org.cocos2d.nodes.CCLabel) -> access$2
    float access$3(org.cocos2d.nodes.CCLabel) -> access$3
    org.cocos2d.nodes.CCLabel$TextAlignment access$4(org.cocos2d.nodes.CCLabel) -> access$4
org.cocos2d.nodes.CCLabel$StringReloader -> org.cocos2d.nodes.CCLabel$StringReloader:
    java.lang.ref.WeakReference label -> label
    void load(org.cocos2d.opengl.GLResourceHelper$Resource) -> load
org.cocos2d.nodes.CCLabel$TextAlignment -> org.cocos2d.nodes.CCLabel$TextAlignment:
    org.cocos2d.nodes.CCLabel$TextAlignment LEFT -> LEFT
    org.cocos2d.nodes.CCLabel$TextAlignment CENTER -> CENTER
    org.cocos2d.nodes.CCLabel$TextAlignment RIGHT -> RIGHT
    org.cocos2d.nodes.CCLabel$TextAlignment[] ENUM$VALUES -> ENUM$VALUES
    org.cocos2d.nodes.CCLabel$TextAlignment[] values() -> values
    org.cocos2d.nodes.CCLabel$TextAlignment valueOf(java.lang.String) -> valueOf
org.cocos2d.nodes.CCLabelAtlas -> org.cocos2d.nodes.CCLabelAtlas:
    org.cocos2d.utils.javolution.TextBuilder string_ -> string_
    char mapStartChar -> mapStartChar
    org.cocos2d.nodes.CCLabelAtlas label(java.lang.CharSequence,java.lang.String,int,int,char) -> label
    void updateAtlasValues() -> updateAtlasValues
    void setString(java.lang.CharSequence) -> setString
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.nodes.CCMotionStreak -> org.cocos2d.nodes.CCMotionStreak:
    org.cocos2d.nodes.CCRibbon ribbon_ -> ribbon_
    float segThreshold_ -> segThreshold_
    float width_ -> width_
    org.cocos2d.types.CGPoint lastLocation_ -> lastLocation_
    org.cocos2d.nodes.CCRibbon getRibbon() -> getRibbon
    org.cocos2d.nodes.CCMotionStreak streak(float,float,java.lang.String,float,float,org.cocos2d.types.ccColor4B) -> streak
    void update(float) -> update
    void setTexture(org.cocos2d.opengl.CCTexture2D) -> setTexture
    org.cocos2d.opengl.CCTexture2D texture() -> texture
    org.cocos2d.types.ccBlendFunc blendFunc() -> blendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.nodes.CCNode -> org.cocos2d.nodes.CCNode:
    java.lang.String LOG_TAG -> LOG_TAG
    int kCCNodeTagInvalid -> kCCNodeTagInvalid
    float rotation_ -> rotation_
    float scaleX_ -> scaleX_
    float scaleY_ -> scaleY_
    float skewX_ -> skewX_
    float skewY_ -> skewY_
    org.cocos2d.types.CGPoint anchorPointInPixels_ -> anchorPointInPixels_
    boolean isRelativeAnchorPoint_ -> isRelativeAnchorPoint_
    org.cocos2d.types.CGPoint anchorPoint_ -> anchorPoint_
    org.cocos2d.types.CGSize contentSize_ -> contentSize_
    float[] transformGL_ -> transformGL_
    org.cocos2d.types.CGAffineTransform transform_ -> transform_
    org.cocos2d.types.CGAffineTransform inverse_ -> inverse_
    boolean isTransformDirty_ -> isTransformDirty_
    boolean isInverseDirty_ -> isInverseDirty_
    boolean isTransformGLDirty_ -> isTransformGLDirty_
    org.cocos2d.types.CGPoint position_ -> position_
    org.cocos2d.opengl.CCCamera camera_ -> camera_
    org.cocos2d.grid.CCGridBase grid_ -> grid_
    boolean visible_ -> visible_
    org.cocos2d.nodes.CCNode parent_ -> parent_
    int tag_ -> tag_
    float vertexZ_ -> vertexZ_
    int zOrder_ -> zOrder_
    java.util.List children_ -> children_
    java.lang.Object userData -> userData
    boolean isRunning_ -> isRunning_
    java.util.Comparator zOrderComparator -> zOrderComparator
    boolean $assertionsDisabled -> $assertionsDisabled
    float getRotation() -> getRotation
    void setRotation(float) -> setRotation
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    void setScale(float) -> setScale
    float getScale() -> getScale
    void setSkewX(float) -> setSkewX
    float getSkewX() -> getSkewX
    void setSkewY(float) -> setSkewY
    float getSkewY() -> getSkewY
    org.cocos2d.types.CGPoint getAnchorPointInPixels() -> getAnchorPointInPixels
    void setRelativeAnchorPoint(boolean) -> setRelativeAnchorPoint
    boolean getRelativeAnchorPoint() -> getRelativeAnchorPoint
    void setContentSize(org.cocos2d.types.CGSize) -> setContentSize
    void setContentSize(float,float) -> setContentSize
    org.cocos2d.types.CGSize getContentSize() -> getContentSize
    org.cocos2d.types.CGSize getContentSizeRef() -> getContentSizeRef
    void setAnchorPoint(org.cocos2d.types.CGPoint) -> setAnchorPoint
    void setAnchorPoint(float,float) -> setAnchorPoint
    org.cocos2d.types.CGPoint getAnchorPoint() -> getAnchorPoint
    org.cocos2d.types.CGPoint getAnchorPointRef() -> getAnchorPointRef
    org.cocos2d.types.CGRect getBoundingBox() -> getBoundingBox
    org.cocos2d.types.CGPoint getPosition() -> getPosition
    org.cocos2d.types.CGPoint getPositionRef() -> getPositionRef
    void setPosition(org.cocos2d.types.CGPoint) -> setPosition
    void setPosition(float,float) -> setPosition
    org.cocos2d.opengl.CCCamera getCamera() -> getCamera
    org.cocos2d.grid.CCGridBase getGrid() -> getGrid
    void setGrid(org.cocos2d.grid.CCGridBase) -> setGrid
    boolean getVisible() -> getVisible
    void setVisible(boolean) -> setVisible
    org.cocos2d.nodes.CCNode getParent() -> getParent
    void setParent(org.cocos2d.nodes.CCNode) -> setParent
    int getTag() -> getTag
    void setTag(int) -> setTag
    float getVertexZ() -> getVertexZ
    void setVertexZ(float) -> setVertexZ
    int getZOrder() -> getZOrder
    void _setZOrder(int) -> _setZOrder
    java.util.List getChildren() -> getChildren
    java.lang.Object getUserData() -> getUserData
    void setUserData(java.lang.Object) -> setUserData
    boolean isRunning() -> isRunning
    org.cocos2d.nodes.CCNode node() -> node
    org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int) -> addChild
    org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int) -> addChild
    org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode) -> addChild
    void removeFromParentAndCleanup(boolean) -> removeFromParentAndCleanup
    void removeSelf() -> removeSelf
    void removeChild(org.cocos2d.nodes.CCNode,boolean) -> removeChild
    void removeChildByTag(int,boolean) -> removeChildByTag
    void removeAllChildren(boolean) -> removeAllChildren
    org.cocos2d.nodes.CCNode getChildByTag(int) -> getChildByTag
    void detachChild(org.cocos2d.nodes.CCNode,boolean) -> detachChild
    void reorderChild(org.cocos2d.nodes.CCNode,int) -> reorderChild
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    void visit(javax.microedition.khronos.opengles.GL10) -> visit
    void transform(javax.microedition.khronos.opengles.GL10) -> transform
    void transformAncestors(javax.microedition.khronos.opengles.GL10) -> transformAncestors
    org.cocos2d.actions.base.CCAction runAction(org.cocos2d.actions.base.CCAction) -> runAction
    void stopAllActions() -> stopAllActions
    void stopAction(org.cocos2d.actions.base.CCAction) -> stopAction
    void stopAction(int) -> stopAction
    org.cocos2d.actions.base.CCAction getAction(int) -> getAction
    int numberOfRunningActions() -> numberOfRunningActions
    void scheduleUpdate() -> scheduleUpdate
    void scheduleUpdate(int) -> scheduleUpdate
    void unscheduleUpdate() -> unscheduleUpdate
    void schedule(java.lang.String) -> schedule
    void schedule(java.lang.String,float) -> schedule
    void schedule(org.cocos2d.actions.UpdateCallback) -> schedule
    void schedule(org.cocos2d.actions.UpdateCallback,float) -> schedule
    void unschedule(java.lang.String) -> unschedule
    void unschedule(org.cocos2d.actions.UpdateCallback) -> unschedule
    void unscheduleAllSelectors() -> unscheduleAllSelectors
    void resumeSchedulerAndActions() -> resumeSchedulerAndActions
    void pauseSchedulerAndActions() -> pauseSchedulerAndActions
    org.cocos2d.types.CGAffineTransform nodeToParentTransform() -> nodeToParentTransform
    org.cocos2d.types.CGAffineTransform parentToNodeTransform() -> parentToNodeTransform
    org.cocos2d.types.CGAffineTransform nodeToWorldTransform() -> nodeToWorldTransform
    void nodeToWorldTransform(org.cocos2d.types.CGAffineTransform) -> nodeToWorldTransform
    org.cocos2d.types.CGAffineTransform worldToNodeTransform() -> worldToNodeTransform
    void worldToNodeTransform(org.cocos2d.types.CGAffineTransform) -> worldToNodeTransform
    org.cocos2d.types.CGPoint convertToNodeSpace(float,float) -> convertToNodeSpace
    org.cocos2d.types.CGPoint convertToNodeSpace(org.cocos2d.types.CGPoint) -> convertToNodeSpace
    void convertToNodeSpace(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> convertToNodeSpace
    void convertToNodeSpace(float,float,org.cocos2d.types.CGPoint) -> convertToNodeSpace
    org.cocos2d.types.CGPoint convertToWorldSpace(float,float) -> convertToWorldSpace
    void convertToWorldSpace(float,float,org.cocos2d.types.CGPoint) -> convertToWorldSpace
    org.cocos2d.types.CGPoint convertToNodeSpaceAR(float,float) -> convertToNodeSpaceAR
    org.cocos2d.types.CGPoint convertToWorldSpaceAR(float,float) -> convertToWorldSpaceAR
    org.cocos2d.types.CGPoint convertTouchToNodeSpace(android.view.MotionEvent) -> convertTouchToNodeSpace
    void convertTouchToNodeSpace(android.view.MotionEvent,org.cocos2d.types.CGPoint) -> convertTouchToNodeSpace
    org.cocos2d.types.CGPoint convertTouchToNodeSpaceAR(android.view.MotionEvent) -> convertTouchToNodeSpaceAR
    org.cocos2d.types.CGPoint convertToWindowSpace(org.cocos2d.types.CGPoint) -> convertToWindowSpace
    void childrenAlloc() -> childrenAlloc
    void insertChild(org.cocos2d.nodes.CCNode,int) -> insertChild
    void cleanup() -> cleanup
    java.lang.String toString() -> toString
    void onEnter() -> onEnter
    void onEnterTransitionDidFinish() -> onEnterTransitionDidFinish
    void onExit() -> onExit
    float RENDER_IN_SUBPIXEL(float) -> RENDER_IN_SUBPIXEL
    int access$0(org.cocos2d.nodes.CCNode) -> access$0
org.cocos2d.nodes.CCNode$1 -> org.cocos2d.nodes.a:
    int compare(java.lang.Object,java.lang.Object) -> compare
org.cocos2d.nodes.CCParallaxNode -> org.cocos2d.nodes.CCParallaxNode:
    java.util.ArrayList parallaxArray_ -> parallaxArray_
    org.cocos2d.types.CGPoint lastPosition -> lastPosition
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.nodes.CCParallaxNode node() -> node
    org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int) -> addChild
    org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,float,float,float,float) -> addChild
    void removeChild(org.cocos2d.nodes.CCNode,boolean) -> removeChild
    void removeAllChildren(boolean) -> removeAllChildren
    org.cocos2d.types.CGPoint absolutePosition() -> absolutePosition
    void visit(javax.microedition.khronos.opengles.GL10) -> visit
    org.cocos2d.nodes.CCNode node() -> node
org.cocos2d.nodes.CCParallaxNode$CCPointObject -> org.cocos2d.nodes.CCParallaxNode$CCPointObject:
    float ratioX_ -> ratioX_
    float ratioY_ -> ratioY_
    float offsetX_ -> offsetX_
    float offsetY_ -> offsetY_
    org.cocos2d.nodes.CCNode child_ -> child_
    org.cocos2d.nodes.CCNode getChild() -> getChild
    void setChild(org.cocos2d.nodes.CCNode) -> setChild
    float getRatioX() -> getRatioX
    float getRatioY() -> getRatioY
    float getOffsetX() -> getOffsetX
    float getOffsetY() -> getOffsetY
org.cocos2d.nodes.CCRibbon -> org.cocos2d.nodes.CCRibbon:
    java.util.ArrayList segments_ -> segments_
    java.util.ArrayList deletedSegments_ -> deletedSegments_
    org.cocos2d.types.CGPoint lastPoint1_ -> lastPoint1_
    org.cocos2d.types.CGPoint lastPoint2_ -> lastPoint2_
    org.cocos2d.types.CGPoint lastLocation_ -> lastLocation_
    int vertCount_ -> vertCount_
    float texVPos_ -> texVPos_
    float curTime_ -> curTime_
    float fadeTime_ -> fadeTime_
    float delta_ -> delta_
    float lastWidth_ -> lastWidth_
    float lastSign_ -> lastSign_
    boolean pastFirstPoint_ -> pastFirstPoint_
    org.cocos2d.opengl.CCTexture2D texture_ -> texture_
    float textureLength_ -> textureLength_
    org.cocos2d.types.ccColor4B color_ -> color_
    org.cocos2d.types.ccBlendFunc blendFunc_ -> blendFunc_
    org.cocos2d.nodes.CCRibbon node(float,java.lang.String,float,org.cocos2d.types.ccColor4B,float) -> node
    org.cocos2d.types.CGPoint rotatePoint(org.cocos2d.types.CGPoint,float) -> rotatePoint
    void addPoint(org.cocos2d.types.CGPoint,float) -> addPoint
    void update(float) -> update
    float sideOfLine(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> sideOfLine
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    org.cocos2d.types.ccBlendFunc blendFunc() -> blendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
    void setTexture(org.cocos2d.opengl.CCTexture2D) -> setTexture
    org.cocos2d.opengl.CCTexture2D texture() -> texture
org.cocos2d.nodes.CCRibbon$CCRibbonSegment -> org.cocos2d.nodes.CCRibbon$CCRibbonSegment:
    int COUNT -> COUNT
    float[] verts -> verts
    float[] coords -> coords
    float[] colors -> colors
    float[] creationTime -> creationTime
    boolean finished -> finished
    int end -> end
    int begin -> begin
    org.cocos2d.utils.FastFloatBuffer mVertices -> mVertices
    org.cocos2d.utils.FastFloatBuffer mCoordinates -> mCoordinates
    org.cocos2d.utils.FastFloatBuffer mColors -> mColors
    void reset() -> reset
    void draw(javax.microedition.khronos.opengles.GL10,float,float,org.cocos2d.types.ccColor4B) -> draw
org.cocos2d.nodes.CCSprite -> org.cocos2d.nodes.CCSprite:
    int CCSpriteIndexNotInitialized -> CCSpriteIndexNotInitialized
    int CC_HONOR_PARENT_TRANSFORM_TRANSLATE -> CC_HONOR_PARENT_TRANSFORM_TRANSLATE
    int CC_HONOR_PARENT_TRANSFORM_ROTATE -> CC_HONOR_PARENT_TRANSFORM_ROTATE
    int CC_HONOR_PARENT_TRANSFORM_SCALE -> CC_HONOR_PARENT_TRANSFORM_SCALE
    int CC_HONOR_PARENT_TRANSFORM_ALL -> CC_HONOR_PARENT_TRANSFORM_ALL
    java.util.HashMap animations_ -> animations_
    boolean flipY_ -> flipY_
    boolean flipX_ -> flipX_
    int opacity_ -> opacity_
    org.cocos2d.types.ccColor3B color_ -> color_
    org.cocos2d.types.ccColor3B colorUnmodified_ -> colorUnmodified_
    boolean opacityModifyRGB_ -> opacityModifyRGB_
    org.cocos2d.opengl.CCTexture2D texture_ -> texture_
    org.cocos2d.types.ccBlendFunc blendFunc_ -> blendFunc_
    org.cocos2d.types.CGRect rect_ -> rect_
    java.lang.Boolean rectRotated_ -> rectRotated_
    org.cocos2d.types.CGPoint offsetPosition_ -> offsetPosition_
    org.cocos2d.types.CGPoint unflippedOffsetPositionFromCenter_ -> unflippedOffsetPositionFromCenter_
    org.cocos2d.opengl.CCTextureAtlas textureAtlas_ -> textureAtlas_
    int atlasIndex -> atlasIndex
    org.cocos2d.nodes.CCSpriteSheet spriteSheet_ -> spriteSheet_
    int honorParentTransform_ -> honorParentTransform_
    boolean dirty_ -> dirty_
    boolean recursiveDirty_ -> recursiveDirty_
    boolean hasChildren_ -> hasChildren_
    org.cocos2d.utils.FastFloatBuffer texCoords -> texCoords
    org.cocos2d.utils.FastFloatBuffer vertexes -> vertexes
    org.cocos2d.utils.FastFloatBuffer colors -> colors
    boolean usesSpriteSheet_ -> usesSpriteSheet_
    org.cocos2d.types.ccColor4B tmpColor4B -> tmpColor4B
    org.cocos2d.types.ccColor4B[] tmpColors -> tmpColors
    org.cocos2d.types.CGAffineTransform tmpMatrix -> tmpMatrix
    org.cocos2d.types.CGAffineTransform tmpNewMatrix -> tmpNewMatrix
    float[] tmpV -> tmpV
    boolean $assertionsDisabled -> $assertionsDisabled
    int getOpacity() -> getOpacity
    void setOpacity(int) -> setOpacity
    void setOpacityModifyRGB(boolean) -> setOpacityModifyRGB
    org.cocos2d.types.ccColor3B getColor() -> getColor
    void setColor(org.cocos2d.types.ccColor3B) -> setColor
    float[] getTexCoordsArray() -> getTexCoordsArray
    float[] getVertexArray() -> getVertexArray
    org.cocos2d.utils.FastFloatBuffer getTexCoords() -> getTexCoords
    org.cocos2d.utils.FastFloatBuffer getVertices() -> getVertices
    org.cocos2d.types.CGRect getTextureRect() -> getTextureRect
    java.lang.Boolean getTextureRectRotated() -> getTextureRectRotated
    org.cocos2d.nodes.CCSprite sprite(org.cocos2d.opengl.CCTexture2D) -> sprite
    org.cocos2d.nodes.CCSprite sprite(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect) -> sprite
    org.cocos2d.nodes.CCSprite sprite(org.cocos2d.nodes.CCSpriteFrame) -> sprite
    org.cocos2d.nodes.CCSprite sprite(java.lang.String,boolean) -> sprite
    org.cocos2d.nodes.CCSprite sprite(java.lang.String) -> sprite
    org.cocos2d.nodes.CCSprite sprite(java.lang.String,org.cocos2d.types.CGRect) -> sprite
    org.cocos2d.nodes.CCSprite sprite(android.graphics.Bitmap) -> sprite
    org.cocos2d.nodes.CCSprite sprite(android.graphics.Bitmap,java.lang.String) -> sprite
    org.cocos2d.nodes.CCSprite sprite(org.cocos2d.nodes.CCSpriteSheet,org.cocos2d.types.CGRect) -> sprite
    void init(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect) -> init
    void init(org.cocos2d.nodes.CCSpriteFrame) -> init
    void setTextureRect(float,float,float,float,java.lang.Boolean) -> setTextureRect
    void setTextureRect(org.cocos2d.types.CGRect,java.lang.Boolean) -> setTextureRect
    void setTextureRect(org.cocos2d.types.CGRect) -> setTextureRect
    void useSelfRender() -> useSelfRender
    void useSpriteSheetRender(org.cocos2d.nodes.CCSpriteSheet) -> useSpriteSheetRender
    void init() -> init
    void setDisplayFrame(org.cocos2d.nodes.CCSpriteFrame) -> setDisplayFrame
    void setDisplayFrame(java.lang.String,int) -> setDisplayFrame
    void setVisible(boolean) -> setVisible
    void addAnimation(org.cocos2d.nodes.CCAnimation) -> addAnimation
    org.cocos2d.nodes.CCAnimation animationByName(java.lang.String) -> animationByName
    void updateColor() -> updateColor
    void setFlipX(boolean) -> setFlipX
    boolean getFlipX() -> getFlipX
    void setFlipY(boolean) -> setFlipY
    boolean getFlipY() -> getFlipY
    void setTexture(org.cocos2d.opengl.CCTexture2D) -> setTexture
    org.cocos2d.opengl.CCTexture2D getTexture() -> getTexture
    boolean isFrameDisplayed(org.cocos2d.nodes.CCSpriteFrame) -> isFrameDisplayed
    org.cocos2d.nodes.CCSpriteFrame displayedFrame() -> displayedFrame
    void SET_DIRTY_RECURSIVELY() -> SET_DIRTY_RECURSIVELY
    void updateBlendFunc() -> updateBlendFunc
    void initAnimationDictionary() -> initAnimationDictionary
    void setTextureRect(org.cocos2d.types.CGRect,org.cocos2d.types.CGSize,java.lang.Boolean) -> setTextureRect
    void setTextureRect(float,float,float,float,float,float,boolean) -> setTextureRect
    org.cocos2d.nodes.CCSprite$TransformValues getTransformValues() -> getTransformValues
    boolean doesOpacityModifyRGB() -> doesOpacityModifyRGB
    void setDirtyRecursively(boolean) -> setDirtyRecursively
    void setPosition(org.cocos2d.types.CGPoint) -> setPosition
    void setPosition(float,float) -> setPosition
    void setRotation(float) -> setRotation
    void setScaleX(float) -> setScaleX
    void setScaleY(float) -> setScaleY
    void setScale(float) -> setScale
    void setVertexZ(float) -> setVertexZ
    void setAnchorPoint(org.cocos2d.types.CGPoint) -> setAnchorPoint
    void setRelativeAnchorPoint(boolean) -> setRelativeAnchorPoint
    void reorderChild(org.cocos2d.nodes.CCNode,int) -> reorderChild
    org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int) -> addChild
    void removeChild(org.cocos2d.nodes.CCNode,boolean) -> removeChild
    void removeAllChildren(boolean) -> removeAllChildren
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    void updateTextureCoords(org.cocos2d.types.CGRect) -> updateTextureCoords
    void updateTransform() -> updateTransform
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.nodes.CCSprite$TransformValues -> org.cocos2d.nodes.CCSprite$TransformValues:
    org.cocos2d.types.CGPoint pos -> pos
    org.cocos2d.types.CGPoint scale -> scale
    float rotation -> rotation
    org.cocos2d.types.CGPoint ap -> ap
    org.cocos2d.nodes.CCSprite this$0 -> this$0
org.cocos2d.nodes.CCSpriteFrame -> org.cocos2d.nodes.CCSpriteFrame:
    org.cocos2d.types.CGRect rect_ -> rect_
    org.cocos2d.types.CGPoint offset_ -> offset_
    org.cocos2d.types.CGSize originalSize_ -> originalSize_
    org.cocos2d.opengl.CCTexture2D texture_ -> texture_
    java.lang.Boolean rotated_ -> rotated_
    org.cocos2d.types.CGRect getRect() -> getRect
    org.cocos2d.types.CGRect getRectRef() -> getRectRef
    org.cocos2d.types.CGPoint getOffset() -> getOffset
    org.cocos2d.types.CGPoint getOffsetRef() -> getOffsetRef
    org.cocos2d.opengl.CCTexture2D getTexture() -> getTexture
    java.lang.Boolean getRotated() -> getRotated
    org.cocos2d.nodes.CCSpriteFrame frame(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect,org.cocos2d.types.CGPoint) -> frame
    org.cocos2d.nodes.CCSpriteFrame frame(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect,org.cocos2d.types.CGPoint,org.cocos2d.types.CGSize) -> frame
    org.cocos2d.nodes.CCSpriteFrame frame(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect,java.lang.Boolean,org.cocos2d.types.CGPoint,org.cocos2d.types.CGSize) -> frame
    org.cocos2d.nodes.CCSpriteFrame copy() -> copy
org.cocos2d.nodes.CCSpriteFrameCache -> org.cocos2d.nodes.CCSpriteFrameCache:
    java.util.HashMap spriteFrames -> spriteFrames
    org.cocos2d.nodes.CCSpriteFrameCache sharedSpriteFrameCache_ -> sharedSpriteFrameCache_
    org.cocos2d.nodes.CCSpriteFrameCache sharedSpriteFrameCache() -> sharedSpriteFrameCache
    org.cocos2d.nodes.CCSpriteFrame spriteFrameByName(java.lang.String) -> spriteFrameByName
    void purgeSharedSpriteFrameCache() -> purgeSharedSpriteFrameCache
    java.util.Set addSpriteFrames(java.util.HashMap,org.cocos2d.opengl.CCTexture2D) -> addSpriteFrames
    java.util.Set addSpriteFrames(java.lang.String) -> addSpriteFrames
    java.util.Set addSpriteFrames(java.lang.String,org.cocos2d.opengl.CCTexture2D) -> addSpriteFrames
    void addSpriteFrame(org.cocos2d.nodes.CCSpriteFrame,java.lang.String) -> addSpriteFrame
    void removeSpriteFrames() -> removeSpriteFrames
    void removeAllSpriteFrames() -> removeAllSpriteFrames
    void removeSpriteFrame(java.lang.String) -> removeSpriteFrame
    org.cocos2d.nodes.CCSpriteFrame getSpriteFrame(java.lang.String) -> getSpriteFrame
    org.cocos2d.nodes.CCSprite createSprite(java.lang.String) -> createSprite
org.cocos2d.nodes.CCSpriteSheet -> org.cocos2d.nodes.CCSpriteSheet:
    int defaultCapacity -> defaultCapacity
    org.cocos2d.opengl.CCTextureAtlas textureAtlas_ -> textureAtlas_
    org.cocos2d.types.ccBlendFunc blendFunc_ -> blendFunc_
    java.util.ArrayList descendants_ -> descendants_
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.opengl.CCTextureAtlas getTextureAtlas() -> getTextureAtlas
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    org.cocos2d.nodes.CCSpriteSheet spriteSheet(org.cocos2d.opengl.CCTexture2D) -> spriteSheet
    org.cocos2d.nodes.CCSpriteSheet spriteSheet(org.cocos2d.opengl.CCTexture2D,int) -> spriteSheet
    org.cocos2d.nodes.CCSpriteSheet spriteSheet(java.lang.String) -> spriteSheet
    org.cocos2d.nodes.CCSpriteSheet spriteSheet(java.lang.String,int) -> spriteSheet
    org.cocos2d.nodes.CCSprite createSprite(org.cocos2d.types.CGRect) -> createSprite
    void visit(javax.microedition.khronos.opengles.GL10) -> visit
    org.cocos2d.nodes.CCSprite initSprite(org.cocos2d.types.CGRect) -> initSprite
    org.cocos2d.nodes.CCNode addChild(org.cocos2d.nodes.CCNode,int,int) -> addChild
    void reorderChild(org.cocos2d.nodes.CCNode,int) -> reorderChild
    void removeChild(org.cocos2d.nodes.CCNode,boolean) -> removeChild
    void removeChildAtIndex(int,boolean) -> removeChildAtIndex
    void removeAllChildren(boolean) -> removeAllChildren
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    void increaseAtlasCapacity() -> increaseAtlasCapacity
    int rebuildIndexInOrder(org.cocos2d.nodes.CCSprite,int) -> rebuildIndexInOrder
    int highestAtlasIndexInChild(org.cocos2d.nodes.CCSprite) -> highestAtlasIndexInChild
    int lowestAtlasIndexInChild(org.cocos2d.nodes.CCSprite) -> lowestAtlasIndexInChild
    int atlasIndex(org.cocos2d.nodes.CCSprite,int) -> atlasIndex
    void insertChild(org.cocos2d.nodes.CCSprite,int) -> insertChild
    void removeSpriteFromAtlas(org.cocos2d.nodes.CCSprite) -> removeSpriteFromAtlas
    void updateBlendFunc() -> updateBlendFunc
    void setTexture(org.cocos2d.opengl.CCTexture2D) -> setTexture
    org.cocos2d.opengl.CCTexture2D getTexture() -> getTexture
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
    void addQuadFromSprite(org.cocos2d.nodes.CCSprite,int) -> addQuadFromSprite
    org.cocos2d.nodes.CCSpriteSheet addSpriteWithoutQuad(org.cocos2d.nodes.CCSprite,int,int) -> addSpriteWithoutQuad
org.cocos2d.nodes.CCTextureCache -> org.cocos2d.nodes.CCTextureCache:
    java.util.HashMap textures -> textures
    org.cocos2d.nodes.CCTextureCache _sharedTextureCache -> _sharedTextureCache
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.nodes.CCTextureCache sharedTextureCache() -> sharedTextureCache
    void purgeSharedTextureCache() -> purgeSharedTextureCache
    org.cocos2d.opengl.CCTexture2D addImage(java.lang.String) -> addImage
    org.cocos2d.opengl.CCTexture2D addImageExternal(java.lang.String) -> addImageExternal
    org.cocos2d.opengl.CCTexture2D addImage(android.graphics.Bitmap,java.lang.String) -> addImage
    void removeAllTextures() -> removeAllTextures
    void removeUnusedTextures() -> removeUnusedTextures
    void removeTexture(org.cocos2d.opengl.CCTexture2D) -> removeTexture
    void addTexture(org.cocos2d.opengl.CCTexture2D) -> addTexture
    void addTexture(org.cocos2d.opengl.CCTexture2D,java.lang.String) -> addTexture
    void removeTexture(java.lang.String) -> removeTexture
    org.cocos2d.opengl.CCTexture2D createTextureFromFilePath(java.lang.String) -> createTextureFromFilePath
    org.cocos2d.opengl.CCTexture2D createTextureFromFilePathExternal(java.lang.String) -> createTextureFromFilePathExternal
org.cocos2d.nodes.CCTextureCache$1 -> org.cocos2d.nodes.CCTextureCache$1:
    org.cocos2d.nodes.CCTextureCache this$0 -> this$0
    android.graphics.Bitmap val$copy -> val$copy
    void load(org.cocos2d.opengl.GLResourceHelper$Resource) -> load
org.cocos2d.nodes.CCTextureCache$2 -> org.cocos2d.nodes.CCTextureCache$2:
    java.lang.String val$path -> val$path
    void load(org.cocos2d.opengl.GLResourceHelper$Resource) -> load
org.cocos2d.nodes.CCTextureCache$3 -> org.cocos2d.nodes.CCTextureCache$3:
    java.lang.String val$path -> val$path
    void load(org.cocos2d.opengl.GLResourceHelper$Resource) -> load
org.cocos2d.nodes.CCTextureNode -> org.cocos2d.nodes.CCTextureNode:
    org.cocos2d.opengl.CCTexture2D texture_ -> texture_
    org.cocos2d.types.ccBlendFunc blendFunc_ -> blendFunc_
    int opacity_ -> opacity_
    org.cocos2d.types.ccColor3B color_ -> color_
    boolean opacityModifyRGB_ -> opacityModifyRGB_
    org.cocos2d.opengl.CCTexture2D getTexture() -> getTexture
    void setTexture(org.cocos2d.opengl.CCTexture2D) -> setTexture
    int getOpacity() -> getOpacity
    void setOpacity(int) -> setOpacity
    void setColor(org.cocos2d.types.ccColor3B) -> setColor
    org.cocos2d.types.ccColor3B getColor() -> getColor
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    boolean doesOpacityModifyRGB() -> doesOpacityModifyRGB
    void setOpacityModifyRGB(boolean) -> setOpacityModifyRGB
org.cocos2d.nodes.CCTileMapAtlas -> org.cocos2d.nodes.CCTileMapAtlas:
    org.cocos2d.opengl.TGA$ImageTGA tgaInfo -> tgaInfo
    java.util.HashMap posToAtlasIndex -> posToAtlasIndex
    int itemsToRender -> itemsToRender
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.opengl.TGA$ImageTGA tgaInfo() -> tgaInfo
    org.cocos2d.nodes.CCTileMapAtlas tilemap(java.lang.String,java.lang.String,int,int) -> tilemap
    void calculateItemsToRender() -> calculateItemsToRender
    void loadTGAfile(java.lang.String) -> loadTGAfile
    org.cocos2d.types.ccColor3B tile(org.cocos2d.types.ccGridSize) -> tile
    void setTile(org.cocos2d.types.ccColor3B,org.cocos2d.types.ccGridSize) -> setTile
    void updateAtlas(org.cocos2d.types.ccGridSize,org.cocos2d.types.ccColor3B,int) -> updateAtlas
    void updateAtlasValues() -> updateAtlasValues
    void releaseMap() -> releaseMap
    void finalize() -> finalize
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.opengl.CCBitmapFontAtlas -> org.cocos2d.opengl.CCBitmapFontAtlas:
    int kCCBitmapFontAtlasMaxChars -> kCCBitmapFontAtlasMaxChars
    org.cocos2d.utils.javolution.TextBuilder string_ -> string_
    org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration parsed -> parsed
    org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration configuration_ -> configuration_
    int opacity_ -> opacity_
    org.cocos2d.types.ccColor3B color_ -> color_
    boolean opacityModifyRGB_ -> opacityModifyRGB_
    java.util.HashMap configurations -> configurations
    int getOpacity() -> getOpacity
    void setOpacity(int) -> setOpacity
    org.cocos2d.types.ccColor3B getColor() -> getColor
    void setColor(org.cocos2d.types.ccColor3B) -> setColor
    void purgeCachedData() -> purgeCachedData
    org.cocos2d.opengl.CCBitmapFontAtlas bitmapFontAtlas(java.lang.CharSequence,java.lang.String) -> bitmapFontAtlas
    org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration FNTConfigLoadFile(java.lang.String) -> FNTConfigLoadFile
    void FNTConfigRemoveCache() -> FNTConfigRemoveCache
    int kerningAmount(int,int) -> kerningAmount
    void createFontChars() -> createFontChars
    void setString(java.lang.CharSequence) -> setString
    void setOpacityModifyRGB(boolean) -> setOpacityModifyRGB
    boolean doesOpacityModifyRGB() -> doesOpacityModifyRGB
    void setAnchorPoint(org.cocos2d.types.CGPoint) -> setAnchorPoint
org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration -> org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration:
    org.cocos2d.utils.collections.IntMap bitmapFontArray -> bitmapFontArray
    int commonHeight -> commonHeight
    org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding padding -> padding
    java.lang.String atlasName -> atlasName
    org.cocos2d.utils.collections.IntMap kerningDictionary -> kerningDictionary
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.opengl.CCBitmapFontAtlas$CCBitmapFontConfiguration configuration(java.lang.String) -> configuration
    void purgeKerningDictionary() -> purgeKerningDictionary
    void parseConfigFile(java.lang.String) -> parseConfigFile
    void parseImage(java.lang.String,java.lang.String) -> parseImage
    void parseInfoArguments(java.lang.String) -> parseInfoArguments
    void parseCommonArguments(java.lang.String) -> parseCommonArguments
    void parseCharacterDefinition(java.lang.String,org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef) -> parseCharacterDefinition
    void parseKerningCapacity(java.lang.String) -> parseKerningCapacity
    void parseKerningEntry(java.lang.String) -> parseKerningEntry
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef -> org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontDef:
    int charID -> charID
    org.cocos2d.types.CGRect rect -> rect
    int xOffset -> xOffset
    int yOffset -> yOffset
    int xAdvance -> xAdvance
org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding -> org.cocos2d.opengl.CCBitmapFontAtlas$ccBitmapFontPadding:
    int left -> left
    int top -> top
    int right -> right
    int bottom -> bottom
    org.cocos2d.opengl.CCBitmapFontAtlas this$0 -> this$0
org.cocos2d.opengl.CCBitmapFontAtlas$tKerningHashElement -> org.cocos2d.opengl.CCBitmapFontAtlas$tKerningHashElement:
    int key -> key
    int amount -> amount
org.cocos2d.opengl.CCCamera -> org.cocos2d.opengl.CCCamera:
    float eyeX -> eyeX
    float eyeY -> eyeY
    float eyeZ -> eyeZ
    float centerX -> centerX
    float centerY -> centerY
    float centerZ -> centerZ
    float upX -> upX
    float upY -> upY
    float upZ -> upZ
    boolean dirty -> dirty
    boolean getDirty() -> getDirty
    void setDirty(boolean) -> setDirty
    java.lang.String toString() -> toString
    void restore() -> restore
    void locate(javax.microedition.khronos.opengles.GL10) -> locate
    float getZEye() -> getZEye
    void setEye(float,float,float) -> setEye
    void setCenter(float,float,float) -> setCenter
    void setUp(float,float,float) -> setUp
    void getEye(float[],float[],float[]) -> getEye
    void getCenter(float[],float[],float[]) -> getCenter
    void getUp(float[],float[],float[]) -> getUp
org.cocos2d.opengl.CCDrawingPrimitives -> org.cocos2d.opengl.CCDrawingPrimitives:
    org.cocos2d.utils.FastFloatBuffer tmpFloatBuf -> tmpFloatBuf
    org.cocos2d.utils.FastFloatBuffer getVertices(int) -> getVertices
    void ccDrawPoint(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint) -> ccDrawPoint
    void ccDrawPoints(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint[],int) -> ccDrawPoints
    void ccDrawLine(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccDrawLine
    void ccDrawRect(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGRect) -> ccDrawRect
    void ccDrawPoly(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint[],int,boolean) -> ccDrawPoly
    void ccDrawCircle(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint,float,float,int,boolean) -> ccDrawCircle
    void ccDrawQuadBezier(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,int) -> ccDrawQuadBezier
    void ccDrawCubicBezier(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,int) -> ccDrawCubicBezier
org.cocos2d.opengl.CCGLSurfaceView -> org.cocos2d.opengl.CCGLSurfaceView:
    int VIEWID -> VIEWID
    org.cocos2d.events.CCTouchDispatcher mDispatcher -> mDispatcher
    org.cocos2d.types.CGSize frame -> frame
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
org.cocos2d.opengl.CCPVRTexture -> org.cocos2d.opengl.CCPVRTexture:
    int PVR_TEXTURE_FLAG_TYPE_MASK -> PVR_TEXTURE_FLAG_TYPE_MASK
    char[] gPVRTexIdentifier -> gPVRTexIdentifier
    int kPVRTextureFlagTypePVRTC_2 -> kPVRTextureFlagTypePVRTC_2
    int kPVRTextureFlagTypePVRTC_4 -> kPVRTextureFlagTypePVRTC_4
    java.util.ArrayList _imageData -> _imageData
    int[] _name -> _name
    int _width -> _width
    int _height -> _height
    int _internalFormat -> _internalFormat
    boolean _hasAlpha -> _hasAlpha
    boolean _retainName -> _retainName
    int getWidth() -> getWidth
    void setWidth(int) -> setWidth
    int getHeight() -> getHeight
    void setHeight(int) -> setHeight
    int getInternalFormat() -> getInternalFormat
    void setInternalFormat(int) -> setInternalFormat
    boolean hasAlpha() -> hasAlpha
    void setHasAlpha(boolean) -> setHasAlpha
    boolean getRetainName() -> getRetainName
    void setRatainName(boolean) -> setRatainName
    boolean unpackPVRData(java.nio.ByteBuffer) -> unpackPVRData
    boolean createGLTexture() -> createGLTexture
    org.cocos2d.opengl.CCPVRTexture pvrTexture(java.lang.String) -> pvrTexture
    org.cocos2d.opengl.CCPVRTexture pvrTexture(java.net.URL) -> pvrTexture
    void finalize() -> finalize
org.cocos2d.opengl.CCPVRTexture$PVRTexHeader -> org.cocos2d.opengl.CCPVRTexture$PVRTexHeader:
    java.nio.ByteBuffer bb -> bb
    int SIZE -> SIZE
    int headerLength() -> headerLength
    int height() -> height
    int width() -> width
    int numMipmaps() -> numMipmaps
    int flags() -> flags
    int dataLength() -> dataLength
    int bpp() -> bpp
    int bitmaskRed() -> bitmaskRed
    int bitmaskGreen() -> bitmaskGreen
    int bitmaskBlue() -> bitmaskBlue
    int bitmaskAlpha() -> bitmaskAlpha
    int pvrTag() -> pvrTag
    int numSurfs() -> numSurfs
org.cocos2d.opengl.CCRenderTexture -> org.cocos2d.opengl.CCRenderTexture:
    int kImageFormatJPG -> kImageFormatJPG
    int kImageFormatPNG -> kImageFormatPNG
    int[] fbo_ -> fbo_
    int[] oldFBO_ -> oldFBO_
    org.cocos2d.opengl.CCTexture2D texture_ -> texture_
    org.cocos2d.nodes.CCSprite sprite_ -> sprite_
    org.cocos2d.nodes.CCSprite getSprite() -> getSprite
    org.cocos2d.opengl.CCRenderTexture renderTexture(int,int) -> renderTexture
    void finalize() -> finalize
    void begin() -> begin
    void end() -> end
    void clear(float,float,float,float) -> clear
org.cocos2d.opengl.CCRenderTexture$1 -> org.cocos2d.opengl.CCRenderTexture$1:
    org.cocos2d.opengl.CCRenderTexture this$0 -> this$0
    int val$finPow -> val$finPow
    void load(org.cocos2d.opengl.GLResourceHelper$Resource) -> load
org.cocos2d.opengl.CCTexture2D -> org.cocos2d.opengl.CCTexture2D:
    int kMaxTextureSize -> kMaxTextureSize
    boolean premultipliedAlpha -> premultipliedAlpha
    org.cocos2d.utils.FastFloatBuffer mVertices -> mVertices
    org.cocos2d.utils.FastFloatBuffer mCoordinates -> mCoordinates
    android.graphics.Bitmap mBitmap -> mBitmap
    int _name -> _name
    org.cocos2d.types.CGSize mContentSize -> mContentSize
    int mWidth -> mWidth
    int mHeight -> mHeight
    android.graphics.Bitmap$Config _format -> _format
    float _maxS -> _maxS
    float _maxT -> _maxT
    org.cocos2d.types.CCTexParams _texParams -> _texParams
    java.util.HashMap typefaces -> typefaces
    android.graphics.Bitmap$Config defaultAlphaPixelFormat_ -> defaultAlphaPixelFormat_
    int[] $SWITCH_TABLE$org$cocos2d$nodes$CCLabel$TextAlignment -> $SWITCH_TABLE$org$cocos2d$nodes$CCLabel$TextAlignment
    boolean $assertionsDisabled -> $assertionsDisabled
    android.graphics.Bitmap$Config pixelFormat() -> pixelFormat
    int pixelsWide() -> pixelsWide
    int pixelsHigh() -> pixelsHigh
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    int name() -> name
    float maxS() -> maxS
    float maxT() -> maxT
    boolean hasPremultipliedAlpha() -> hasPremultipliedAlpha
    org.cocos2d.types.CGSize getContentSize() -> getContentSize
    void releaseTexture(javax.microedition.khronos.opengles.GL10) -> releaseTexture
    void finalize() -> finalize
    void setLoader(org.cocos2d.opengl.GLResourceHelper$GLResourceLoader) -> setLoader
    void initWithImage(android.graphics.Bitmap) -> initWithImage
    void initWithImage(android.graphics.Bitmap,org.cocos2d.types.CGSize) -> initWithImage
    void initWithImage(android.graphics.Bitmap,org.cocos2d.types.CGSize,org.cocos2d.types.CGSize) -> initWithImage
    void init(android.graphics.Bitmap,org.cocos2d.types.CGSize,org.cocos2d.types.CGSize) -> init
    void initWithText(java.lang.String,java.lang.String,float) -> initWithText
    org.cocos2d.types.CGSize calculateTextSize(java.lang.String,java.lang.String,float) -> calculateTextSize
    int toPow2(int) -> toPow2
    void initWithText(java.lang.String,org.cocos2d.types.CGSize,org.cocos2d.nodes.CCLabel$TextAlignment,java.lang.String,float) -> initWithText
    java.util.ArrayList WrapText(android.graphics.Paint,java.lang.String,float) -> WrapText
    void loadTexture(javax.microedition.khronos.opengles.GL10) -> loadTexture
    boolean isLoaded() -> isLoaded
    void drawAtPoint(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGPoint) -> drawAtPoint
    void drawInRect(javax.microedition.khronos.opengles.GL10,org.cocos2d.types.CGRect) -> drawInRect
    void setTexParameters(org.cocos2d.types.CCTexParams) -> setTexParameters
    void setTexParameters(int,int,int,int) -> setTexParameters
    void applyTexParameters(javax.microedition.khronos.opengles.GL10) -> applyTexParameters
    void setAliasTexParameters() -> setAliasTexParameters
    void setAntiAliasTexParameters() -> setAntiAliasTexParameters
    void generateMipmap() -> generateMipmap
    void setDefaultAlphaPixelFormat(android.graphics.Bitmap$Config) -> setDefaultAlphaPixelFormat
    android.graphics.Bitmap$Config defaultAlphaPixelFormat() -> defaultAlphaPixelFormat
    int access$0(org.cocos2d.opengl.CCTexture2D) -> access$0
    int[] $SWITCH_TABLE$org$cocos2d$nodes$CCLabel$TextAlignment() -> $SWITCH_TABLE$org$cocos2d$nodes$CCLabel$TextAlignment
    void access$2(org.cocos2d.opengl.CCTexture2D,javax.microedition.khronos.opengles.GL10) -> access$2
org.cocos2d.opengl.CCTexture2D$1 -> org.cocos2d.opengl.CCTexture2D$1:
    org.cocos2d.opengl.CCTexture2D this$0 -> this$0
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.opengl.CCTexture2D$2 -> org.cocos2d.opengl.CCTexture2D$2:
    org.cocos2d.opengl.CCTexture2D this$0 -> this$0
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.opengl.CCTexture2D$3 -> org.cocos2d.opengl.CCTexture2D$3:
    org.cocos2d.opengl.CCTexture2D this$0 -> this$0
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.opengl.CCTexture2D$4 -> org.cocos2d.opengl.CCTexture2D$4:
    org.cocos2d.opengl.CCTexture2D this$0 -> this$0
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.opengl.CCTextureAtlas -> org.cocos2d.opengl.CCTextureAtlas:
    int totalQuads_ -> totalQuads_
    int capacity_ -> capacity_
    org.cocos2d.opengl.CCTexture2D texture_ -> texture_
    org.cocos2d.utils.FastFloatBuffer textureCoordinates -> textureCoordinates
    org.cocos2d.utils.FastFloatBuffer vertexCoordinates -> vertexCoordinates
    org.cocos2d.utils.FastFloatBuffer colors -> colors
    java.nio.ShortBuffer indices -> indices
    boolean withColorArray_ -> withColorArray_
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.utils.FastFloatBuffer getTexCoordsBuffer() -> getTexCoordsBuffer
    org.cocos2d.utils.FastFloatBuffer getVertexBuffer() -> getVertexBuffer
    int getTotalQuads() -> getTotalQuads
    int capacity() -> capacity
    org.cocos2d.opengl.CCTexture2D getTexture() -> getTexture
    void setTexture(org.cocos2d.opengl.CCTexture2D) -> setTexture
    boolean withColorArray() -> withColorArray
    org.cocos2d.opengl.CCTextureAtlas textureAtlas(java.lang.String,int) -> textureAtlas
    org.cocos2d.opengl.CCTextureAtlas textureAtlas(org.cocos2d.opengl.CCTexture2D,int) -> textureAtlas
    java.lang.String toString() -> toString
    void initColorArray() -> initColorArray
    void initIndices() -> initIndices
    void updateQuad(org.cocos2d.utils.FastFloatBuffer,org.cocos2d.utils.FastFloatBuffer,int) -> updateQuad
    void updateQuad(org.cocos2d.utils.FastFloatBuffer,float[],int) -> updateQuad
    void updateQuad(org.cocos2d.types.ccQuad2,org.cocos2d.types.ccQuad3,int) -> updateQuad
    void updateColor(org.cocos2d.types.ccColor4B[],int) -> updateColor
    void insertQuad(org.cocos2d.utils.FastFloatBuffer,org.cocos2d.utils.FastFloatBuffer,int) -> insertQuad
    void insertQuad(int,int) -> insertQuad
    void removeQuad(int) -> removeQuad
    void removeAllQuads() -> removeAllQuads
    void resizeCapacity(int) -> resizeCapacity
    void drawQuads(javax.microedition.khronos.opengles.GL10) -> drawQuads
    void draw(javax.microedition.khronos.opengles.GL10,int) -> draw
    float[] getTexCoords(org.cocos2d.utils.FastFloatBuffer,int) -> getTexCoords
    void putTexCoords(org.cocos2d.utils.FastFloatBuffer,org.cocos2d.types.ccQuad2,int) -> putTexCoords
    void putTexCoords(org.cocos2d.utils.FastFloatBuffer,float[],int) -> putTexCoords
    void putTexCoords(org.cocos2d.utils.FastFloatBuffer,int) -> putTexCoords
    void putVertex(org.cocos2d.utils.FastFloatBuffer,int) -> putVertex
    float[] getVertex(org.cocos2d.utils.FastFloatBuffer,int) -> getVertex
    void putVertex(org.cocos2d.utils.FastFloatBuffer,org.cocos2d.types.ccQuad3,int) -> putVertex
    void putVertex(org.cocos2d.utils.FastFloatBuffer,float[],int) -> putVertex
    org.cocos2d.types.ccColor4B[] getColor(org.cocos2d.utils.FastFloatBuffer,int) -> getColor
    void putColor(org.cocos2d.utils.FastFloatBuffer,org.cocos2d.types.ccColor4B[],int) -> putColor
    void arraycopyTexture(org.cocos2d.utils.FastFloatBuffer,int,org.cocos2d.utils.FastFloatBuffer,int,int) -> arraycopyTexture
    void arraycopyVertex(org.cocos2d.utils.FastFloatBuffer,int,org.cocos2d.utils.FastFloatBuffer,int,int) -> arraycopyVertex
    void arraycopyColor(org.cocos2d.utils.FastFloatBuffer,int,org.cocos2d.utils.FastFloatBuffer,int,int) -> arraycopyColor
    void memmoveFloat(org.cocos2d.utils.FastFloatBuffer,int,org.cocos2d.utils.FastFloatBuffer,int,int) -> memmoveFloat
    void memcopyFloat(org.cocos2d.utils.FastFloatBuffer,int,org.cocos2d.utils.FastFloatBuffer,int,int) -> memcopyFloat
    void memmoveByte(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int) -> memmoveByte
    void memcopyByte(java.nio.ByteBuffer,int,java.nio.ByteBuffer,int,int) -> memcopyByte
org.cocos2d.opengl.GLDebugWrapper -> org.cocos2d.opengl.GLDebugWrapper:
    java.lang.String LOG_TAG -> LOG_TAG
    javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL) -> wrap
    java.lang.String access$0() -> access$0
org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation -> org.cocos2d.opengl.GLDebugWrapper$MyGLImplementation:
    javax.microedition.khronos.opengles.GL10 gl -> gl
    void glActiveTexture(int) -> glActiveTexture
    void glAlphaFunc(int,float) -> glAlphaFunc
    void glAlphaFuncx(int,int) -> glAlphaFuncx
    void glBindTexture(int,int) -> glBindTexture
    void glBlendFunc(int,int) -> glBlendFunc
    void glClear(int) -> glClear
    void glClearColor(float,float,float,float) -> glClearColor
    void glClearColorx(int,int,int,int) -> glClearColorx
    void glClearDepthf(float) -> glClearDepthf
    void glClearDepthx(int) -> glClearDepthx
    void glClearStencil(int) -> glClearStencil
    void glClientActiveTexture(int) -> glClientActiveTexture
    void glColor4f(float,float,float,float) -> glColor4f
    void glColor4x(int,int,int,int) -> glColor4x
    void glColorMask(boolean,boolean,boolean,boolean) -> glColorMask
    void glColorPointer(int,int,int,java.nio.Buffer) -> glColorPointer
    void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexImage2D
    void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glCompressedTexSubImage2D
    void glCopyTexImage2D(int,int,int,int,int,int,int,int) -> glCopyTexImage2D
    void glCopyTexSubImage2D(int,int,int,int,int,int,int,int) -> glCopyTexSubImage2D
    void glCullFace(int) -> glCullFace
    void glDeleteTextures(int,int[],int) -> glDeleteTextures
    void glDeleteTextures(int,java.nio.IntBuffer) -> glDeleteTextures
    void glDepthFunc(int) -> glDepthFunc
    void glDepthMask(boolean) -> glDepthMask
    void glDepthRangef(float,float) -> glDepthRangef
    void glDepthRangex(int,int) -> glDepthRangex
    void glDisable(int) -> glDisable
    void glDisableClientState(int) -> glDisableClientState
    void glDrawArrays(int,int,int) -> glDrawArrays
    void glDrawElements(int,int,int,java.nio.Buffer) -> glDrawElements
    void glEnable(int) -> glEnable
    void glEnableClientState(int) -> glEnableClientState
    void glFinish() -> glFinish
    void glFlush() -> glFlush
    void glFogf(int,float) -> glFogf
    void glFogfv(int,java.nio.FloatBuffer) -> glFogfv
    void glFogfv(int,float[],int) -> glFogfv
    void glFogx(int,int) -> glFogx
    void glFogxv(int,int[],int) -> glFogxv
    void glFogxv(int,java.nio.IntBuffer) -> glFogxv
    void glFrontFace(int) -> glFrontFace
    void glFrustumf(float,float,float,float,float,float) -> glFrustumf
    void glFrustumx(int,int,int,int,int,int) -> glFrustumx
    void glGenTextures(int,java.nio.IntBuffer) -> glGenTextures
    void glGenTextures(int,int[],int) -> glGenTextures
    int glGetError() -> glGetError
    void glGetIntegerv(int,int[],int) -> glGetIntegerv
    void glGetIntegerv(int,java.nio.IntBuffer) -> glGetIntegerv
    java.lang.String glGetString(int) -> glGetString
    void glHint(int,int) -> glHint
    void glLightModelf(int,float) -> glLightModelf
    void glLightModelfv(int,java.nio.FloatBuffer) -> glLightModelfv
    void glLightModelfv(int,float[],int) -> glLightModelfv
    void glLightModelx(int,int) -> glLightModelx
    void glLightModelxv(int,java.nio.IntBuffer) -> glLightModelxv
    void glLightModelxv(int,int[],int) -> glLightModelxv
    void glLightf(int,int,float) -> glLightf
    void glLightfv(int,int,java.nio.FloatBuffer) -> glLightfv
    void glLightfv(int,int,float[],int) -> glLightfv
    void glLightx(int,int,int) -> glLightx
    void glLightxv(int,int,int[],int) -> glLightxv
    void glLightxv(int,int,java.nio.IntBuffer) -> glLightxv
    void glLineWidth(float) -> glLineWidth
    void glLineWidthx(int) -> glLineWidthx
    void glLoadIdentity() -> glLoadIdentity
    void glLoadMatrixf(float[],int) -> glLoadMatrixf
    void glLoadMatrixf(java.nio.FloatBuffer) -> glLoadMatrixf
    void glLoadMatrixx(int[],int) -> glLoadMatrixx
    void glLoadMatrixx(java.nio.IntBuffer) -> glLoadMatrixx
    void glLogicOp(int) -> glLogicOp
    void glMaterialf(int,int,float) -> glMaterialf
    void glMaterialfv(int,int,float[],int) -> glMaterialfv
    void glMaterialfv(int,int,java.nio.FloatBuffer) -> glMaterialfv
    void glMaterialx(int,int,int) -> glMaterialx
    void glMaterialxv(int,int,int[],int) -> glMaterialxv
    void glMaterialxv(int,int,java.nio.IntBuffer) -> glMaterialxv
    void glMatrixMode(int) -> glMatrixMode
    void glMultMatrixf(java.nio.FloatBuffer) -> glMultMatrixf
    void glMultMatrixf(float[],int) -> glMultMatrixf
    void glMultMatrixx(int[],int) -> glMultMatrixx
    void glMultMatrixx(java.nio.IntBuffer) -> glMultMatrixx
    void glMultiTexCoord4f(int,float,float,float,float) -> glMultiTexCoord4f
    void glMultiTexCoord4x(int,int,int,int,int) -> glMultiTexCoord4x
    void glNormal3f(float,float,float) -> glNormal3f
    void glNormal3x(int,int,int) -> glNormal3x
    void glNormalPointer(int,int,java.nio.Buffer) -> glNormalPointer
    void glOrthof(float,float,float,float,float,float) -> glOrthof
    void glOrthox(int,int,int,int,int,int) -> glOrthox
    void glPixelStorei(int,int) -> glPixelStorei
    void glPointSize(float) -> glPointSize
    void glPointSizex(int) -> glPointSizex
    void glPolygonOffset(float,float) -> glPolygonOffset
    void glPolygonOffsetx(int,int) -> glPolygonOffsetx
    void glPopMatrix() -> glPopMatrix
    void glPushMatrix() -> glPushMatrix
    void glReadPixels(int,int,int,int,int,int,java.nio.Buffer) -> glReadPixels
    void glRotatef(float,float,float,float) -> glRotatef
    void glRotatex(int,int,int,int) -> glRotatex
    void glSampleCoverage(float,boolean) -> glSampleCoverage
    void glSampleCoveragex(int,boolean) -> glSampleCoveragex
    void glScalef(float,float,float) -> glScalef
    void glScalex(int,int,int) -> glScalex
    void glScissor(int,int,int,int) -> glScissor
    void glShadeModel(int) -> glShadeModel
    void glStencilFunc(int,int,int) -> glStencilFunc
    void glStencilMask(int) -> glStencilMask
    void glStencilOp(int,int,int) -> glStencilOp
    void glTexCoordPointer(int,int,int,java.nio.Buffer) -> glTexCoordPointer
    void glTexEnvf(int,int,float) -> glTexEnvf
    void glTexEnvfv(int,int,float[],int) -> glTexEnvfv
    void glTexEnvfv(int,int,java.nio.FloatBuffer) -> glTexEnvfv
    void glTexEnvx(int,int,int) -> glTexEnvx
    void glTexEnvxv(int,int,int[],int) -> glTexEnvxv
    void glTexEnvxv(int,int,java.nio.IntBuffer) -> glTexEnvxv
    void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexImage2D
    void glTexParameterf(int,int,float) -> glTexParameterf
    void glTexParameterx(int,int,int) -> glTexParameterx
    void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer) -> glTexSubImage2D
    void glTranslatef(float,float,float) -> glTranslatef
    void glTranslatex(int,int,int) -> glTranslatex
    void glVertexPointer(int,int,int,java.nio.Buffer) -> glVertexPointer
    void glViewport(int,int,int,int) -> glViewport
    java.lang.String getTexCoordPointerTypeString(int) -> getTexCoordPointerTypeString
    java.lang.String getShadeModelString(int) -> getShadeModelString
    java.lang.String getBlendFuncSFactorString(int) -> getBlendFuncSFactorString
    java.lang.String getBlendFuncDFactorString(int) -> getBlendFuncDFactorString
    java.lang.String getVertexPointerTypeString(int) -> getVertexPointerTypeString
    java.lang.String getTexParameterTargetString(int) -> getTexParameterTargetString
    java.lang.String getTexParameterNameString(int) -> getTexParameterNameString
    java.lang.String getTexParameterParamString(int) -> getTexParameterParamString
    java.lang.String getTexEnvTargetString(int) -> getTexEnvTargetString
    java.lang.String getTextEnvNameString(int) -> getTextEnvNameString
    java.lang.String getTexEnvParam(int) -> getTexEnvParam
    java.lang.String getHintTargetString(int) -> getHintTargetString
    java.lang.String getHintModeString(int) -> getHintModeString
    java.lang.String getMatrixModeString(int) -> getMatrixModeString
    java.lang.String getCullFaceModeString(int) -> getCullFaceModeString
    java.lang.String getClientStateArrayString(int) -> getClientStateArrayString
    java.lang.String getDrawArraysModeString(int) -> getDrawArraysModeString
    java.lang.String getColorPointerTypeString(int) -> getColorPointerTypeString
    java.lang.String getBooleanString(boolean) -> getBooleanString
    java.lang.String getClearMaskString(int) -> getClearMaskString
    java.lang.String getTextEnvTargetString(int) -> getTextEnvTargetString
    java.lang.String getEnableDisableCapString(int) -> getEnableDisableCapString
    java.lang.String getTexImage2DTargetString(int) -> getTexImage2DTargetString
    java.lang.String getTexImage2DInternalFormatString(int) -> getTexImage2DInternalFormatString
    java.lang.String getTexImage2DFormatString(int) -> getTexImage2DFormatString
    java.lang.String getBindTextureTargetString(int) -> getBindTextureTargetString
    java.lang.String getLogicOpOpcodeString(int) -> getLogicOpOpcodeString
    java.lang.StringBuilder appendWithPrefix(java.lang.StringBuilder,java.lang.String) -> appendWithPrefix
org.cocos2d.opengl.GLResourceHelper -> org.cocos2d.opengl.GLResourceHelper:
    org.cocos2d.opengl.GLResourceHelper _sharedResourceHelper -> _sharedResourceHelper
    java.util.concurrent.ConcurrentLinkedQueue taskQueue -> taskQueue
    java.util.Map reloadMap -> reloadMap
    boolean reloadTaskIsInQueue -> reloadTaskIsInQueue
    boolean inUpdate -> inUpdate
    org.cocos2d.opengl.GLResourceHelper sharedHelper() -> sharedHelper
    void addLoader(org.cocos2d.opengl.GLResourceHelper$Resource,org.cocos2d.opengl.GLResourceHelper$GLResourceLoader,boolean) -> addLoader
    void reloadResources() -> reloadResources
    void perform(org.cocos2d.opengl.GLResourceHelper$GLResorceTask) -> perform
    void update(javax.microedition.khronos.opengles.GL10) -> update
    void setInUpdate(boolean) -> setInUpdate
    java.util.Map access$0(org.cocos2d.opengl.GLResourceHelper) -> access$0
    void access$1(org.cocos2d.opengl.GLResourceHelper,boolean) -> access$1
org.cocos2d.opengl.GLResourceHelper$1 -> org.cocos2d.opengl.GLResourceHelper$1:
    org.cocos2d.opengl.GLResourceHelper this$0 -> this$0
    org.cocos2d.opengl.GLResourceHelper$GLResourceLoader val$loader -> val$loader
    org.cocos2d.opengl.GLResourceHelper$Resource val$res -> val$res
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.opengl.GLResourceHelper$2 -> org.cocos2d.opengl.GLResourceHelper$2:
    org.cocos2d.opengl.GLResourceHelper this$0 -> this$0
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.opengl.GLResourceHelper$GLResorceTask -> org.cocos2d.opengl.c:
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.opengl.GLResourceHelper$GLResourceLoader -> org.cocos2d.opengl.b:
    void load(org.cocos2d.opengl.GLResourceHelper$Resource) -> load
org.cocos2d.opengl.GLResourceHelper$Resource -> org.cocos2d.opengl.e:
org.cocos2d.opengl.GLSurfaceView -> org.cocos2d.opengl.GLSurfaceView:
    boolean LOG_THREADS -> LOG_THREADS
    boolean LOG_SURFACE -> LOG_SURFACE
    boolean LOG_RENDERER -> LOG_RENDERER
    boolean DRAW_TWICE_AFTER_SIZE_CHANGED -> DRAW_TWICE_AFTER_SIZE_CHANGED
    int RENDERMODE_WHEN_DIRTY -> RENDERMODE_WHEN_DIRTY
    int RENDERMODE_CONTINUOUSLY -> RENDERMODE_CONTINUOUSLY
    int DEBUG_CHECK_GL_ERROR -> DEBUG_CHECK_GL_ERROR
    int DEBUG_LOG_GL_CALLS -> DEBUG_LOG_GL_CALLS
    org.cocos2d.opengl.GLSurfaceView$GLThreadManager sGLThreadManager -> sGLThreadManager
    boolean mSizeChanged -> mSizeChanged
    org.cocos2d.opengl.GLSurfaceView$GLThread mGLThread -> mGLThread
    org.cocos2d.opengl.GLSurfaceView$EGLConfigChooser mEGLConfigChooser -> mEGLConfigChooser
    org.cocos2d.opengl.GLSurfaceView$EGLContextFactory mEGLContextFactory -> mEGLContextFactory
    org.cocos2d.opengl.GLSurfaceView$EGLWindowSurfaceFactory mEGLWindowSurfaceFactory -> mEGLWindowSurfaceFactory
    org.cocos2d.opengl.GLSurfaceView$GLWrapper mGLWrapper -> mGLWrapper
    int mDebugFlags -> mDebugFlags
    int mEGLContextClientVersion -> mEGLContextClientVersion
    void init() -> init
    void setGLWrapper(org.cocos2d.opengl.GLSurfaceView$GLWrapper) -> setGLWrapper
    void setDebugFlags(int) -> setDebugFlags
    int getDebugFlags() -> getDebugFlags
    void setRenderer(org.cocos2d.opengl.GLSurfaceView$Renderer) -> setRenderer
    void setEGLContextFactory(org.cocos2d.opengl.GLSurfaceView$EGLContextFactory) -> setEGLContextFactory
    void setEGLWindowSurfaceFactory(org.cocos2d.opengl.GLSurfaceView$EGLWindowSurfaceFactory) -> setEGLWindowSurfaceFactory
    void setEGLConfigChooser(org.cocos2d.opengl.GLSurfaceView$EGLConfigChooser) -> setEGLConfigChooser
    void setEGLConfigChooser(boolean) -> setEGLConfigChooser
    void setEGLConfigChooser(int,int,int,int,int,int) -> setEGLConfigChooser
    void setEGLContextClientVersion(int) -> setEGLContextClientVersion
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void onPause() -> onPause
    void onResume() -> onResume
    void setSafeMode(boolean) -> setSafeMode
    void queueEvent(java.lang.Runnable) -> queueEvent
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onDetachedFromWindow() -> onDetachedFromWindow
    void checkRenderThreadState() -> checkRenderThreadState
    int access$0(org.cocos2d.opengl.GLSurfaceView) -> access$0
    org.cocos2d.opengl.GLSurfaceView$EGLConfigChooser access$1(org.cocos2d.opengl.GLSurfaceView) -> access$1
    org.cocos2d.opengl.GLSurfaceView$EGLContextFactory access$2(org.cocos2d.opengl.GLSurfaceView) -> access$2
    org.cocos2d.opengl.GLSurfaceView$EGLWindowSurfaceFactory access$3(org.cocos2d.opengl.GLSurfaceView) -> access$3
    org.cocos2d.opengl.GLSurfaceView$GLWrapper access$4(org.cocos2d.opengl.GLSurfaceView) -> access$4
    int access$5(org.cocos2d.opengl.GLSurfaceView) -> access$5
    org.cocos2d.opengl.GLSurfaceView$GLThreadManager access$6() -> access$6
    boolean access$7(org.cocos2d.opengl.GLSurfaceView) -> access$7
    void access$8(org.cocos2d.opengl.GLSurfaceView,boolean) -> access$8
org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser -> org.cocos2d.opengl.GLSurfaceView$BaseConfigChooser:
    int[] mConfigSpec -> mConfigSpec
    org.cocos2d.opengl.GLSurfaceView this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int[] filterConfigSpec(int[]) -> filterConfigSpec
org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser -> org.cocos2d.opengl.GLSurfaceView$ComponentSizeChooser:
    int[] mValue -> mValue
    int mRedSize -> mRedSize
    int mGreenSize -> mGreenSize
    int mBlueSize -> mBlueSize
    int mAlphaSize -> mAlphaSize
    int mDepthSize -> mDepthSize
    int mStencilSize -> mStencilSize
    org.cocos2d.opengl.GLSurfaceView this$0 -> this$0
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[]) -> chooseConfig
    int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int) -> findConfigAttrib
org.cocos2d.opengl.GLSurfaceView$DefaultContextFactory -> org.cocos2d.opengl.GLSurfaceView$DefaultContextFactory:
    int EGL_CONTEXT_CLIENT_VERSION -> EGL_CONTEXT_CLIENT_VERSION
    org.cocos2d.opengl.GLSurfaceView this$0 -> this$0
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
org.cocos2d.opengl.GLSurfaceView$DefaultWindowSurfaceFactory -> org.cocos2d.opengl.h:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
org.cocos2d.opengl.GLSurfaceView$EGLConfigChooser -> org.cocos2d.opengl.g:
    javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay) -> chooseConfig
org.cocos2d.opengl.GLSurfaceView$EGLContextFactory -> org.cocos2d.opengl.i:
    javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig) -> createContext
    void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext) -> destroyContext
org.cocos2d.opengl.GLSurfaceView$EGLWindowSurfaceFactory -> org.cocos2d.opengl.f:
    javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object) -> a
    void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface) -> a
org.cocos2d.opengl.GLSurfaceView$EglHelper -> org.cocos2d.opengl.GLSurfaceView$EglHelper:
    javax.microedition.khronos.egl.EGL10 mEgl -> mEgl
    javax.microedition.khronos.egl.EGLDisplay mEglDisplay -> mEglDisplay
    javax.microedition.khronos.egl.EGLSurface mEglSurface -> mEglSurface
    javax.microedition.khronos.egl.EGLConfig mEglConfig -> mEglConfig
    javax.microedition.khronos.egl.EGLContext mEglContext -> mEglContext
    org.cocos2d.opengl.GLSurfaceView this$0 -> this$0
    void start() -> start
    javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder) -> createSurface
    boolean swap() -> swap
    void destroySurface() -> destroySurface
    void finish() -> finish
    void throwEglException(java.lang.String) -> throwEglException
    boolean verifyContext() -> verifyContext
org.cocos2d.opengl.GLSurfaceView$GLThread -> org.cocos2d.opengl.GLSurfaceView$GLThread:
    boolean mShouldExit -> mShouldExit
    boolean mExited -> mExited
    boolean mPaused -> mPaused
    boolean mHasSurface -> mHasSurface
    boolean mWaitingForSurface -> mWaitingForSurface
    boolean mHaveEglContext -> mHaveEglContext
    boolean mHaveEglSurface -> mHaveEglSurface
    int mWidth -> mWidth
    int mHeight -> mHeight
    int mRenderMode -> mRenderMode
    boolean mRequestRender -> mRequestRender
    boolean mRenderComplete -> mRenderComplete
    java.util.ArrayList mEventQueue -> mEventQueue
    javax.microedition.khronos.opengles.GL10 mGL -> mGL
    boolean mHasFocus -> mHasFocus
    boolean mSafeMode -> mSafeMode
    org.cocos2d.opengl.GLSurfaceView$Renderer mRenderer -> mRenderer
    org.cocos2d.opengl.GLSurfaceView$EglHelper mEglHelper -> mEglHelper
    org.cocos2d.opengl.GLSurfaceView this$0 -> this$0
    void run() -> run
    void stopEglLocked() -> stopEglLocked
    void guardedRun() -> guardedRun
    void setRenderMode(int) -> setRenderMode
    int getRenderMode() -> getRenderMode
    void requestRender() -> requestRender
    void surfaceCreated() -> surfaceCreated
    void surfaceDestroyed() -> surfaceDestroyed
    void onPause() -> onPause
    void onResume() -> onResume
    void onWindowResize(int,int) -> onWindowResize
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void requestExitAndWait() -> requestExitAndWait
    void queueEvent(java.lang.Runnable) -> queueEvent
    void setSafeMode(boolean) -> setSafeMode
    void access$0(org.cocos2d.opengl.GLSurfaceView$GLThread,boolean) -> access$0
org.cocos2d.opengl.GLSurfaceView$GLThreadManager -> org.cocos2d.opengl.GLSurfaceView$GLThreadManager:
    boolean mGLESVersionCheckComplete -> mGLESVersionCheckComplete
    int mGLESVersion -> mGLESVersion
    boolean mGLESDriverCheckComplete -> mGLESDriverCheckComplete
    boolean mMultipleGLESContextsAllowed -> mMultipleGLESContextsAllowed
    int mGLContextCount -> mGLContextCount
    int kGLES_20 -> kGLES_20
    org.cocos2d.opengl.GLSurfaceView$GLThread mEglOwner -> mEglOwner
    void threadExiting(org.cocos2d.opengl.GLSurfaceView$GLThread) -> threadExiting
    boolean tryAcquireEglSurfaceLocked(org.cocos2d.opengl.GLSurfaceView$GLThread) -> tryAcquireEglSurfaceLocked
    void releaseEglSurfaceLocked(org.cocos2d.opengl.GLSurfaceView$GLThread) -> releaseEglSurfaceLocked
    void checkGLDriver(javax.microedition.khronos.opengles.GL10) -> checkGLDriver
    void checkGLESVersion() -> checkGLESVersion
org.cocos2d.opengl.GLSurfaceView$GLWrapper -> org.cocos2d.opengl.a:
    javax.microedition.khronos.opengles.GL wrap$40ce139f() -> a
org.cocos2d.opengl.GLSurfaceView$LogWriter -> org.cocos2d.opengl.GLSurfaceView$LogWriter:
    java.lang.StringBuilder mBuilder -> mBuilder
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> flushBuilder
org.cocos2d.opengl.GLSurfaceView$Renderer -> org.cocos2d.opengl.d:
    void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig) -> onSurfaceCreated
    void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int) -> onSurfaceChanged
    void onDrawFrame(javax.microedition.khronos.opengles.GL10) -> onDrawFrame
org.cocos2d.opengl.GLSurfaceView$SimpleEGLConfigChooser -> org.cocos2d.opengl.GLSurfaceView$SimpleEGLConfigChooser:
    org.cocos2d.opengl.GLSurfaceView this$0 -> this$0
org.cocos2d.opengl.TGA -> org.cocos2d.opengl.TGA:
    java.lang.String LOG_TAG -> LOG_TAG
    void loadHeader(java.io.InputStream,org.cocos2d.opengl.TGA$ImageTGA) -> loadHeader
    void loadImageData(java.io.InputStream,org.cocos2d.opengl.TGA$ImageTGA) -> loadImageData
    void loadRLEImageData(java.io.InputStream,org.cocos2d.opengl.TGA$ImageTGA) -> loadRLEImageData
    void flipImage(org.cocos2d.opengl.TGA$ImageTGA) -> flipImage
    void memcpy(byte[],int,byte[],int,int) -> memcpy
    org.cocos2d.opengl.TGA$ImageTGA load(java.io.InputStream) -> load
    void RGBtogreyscale(org.cocos2d.opengl.TGA$ImageTGA) -> RGBtogreyscale
    void destroy(org.cocos2d.opengl.TGA$ImageTGA) -> destroy
org.cocos2d.opengl.TGA$ImageTGA -> org.cocos2d.opengl.TGA$ImageTGA:
    org.cocos2d.opengl.TGA$TGAError status -> status
    int type -> type
    int pixelDepth -> pixelDepth
    int width -> width
    int height -> height
    byte[] imageData -> imageData
    int flipped -> flipped
org.cocos2d.opengl.TGA$TGAError -> org.cocos2d.opengl.TGA$TGAError:
    org.cocos2d.opengl.TGA$TGAError TGA_OK -> TGA_OK
    org.cocos2d.opengl.TGA$TGAError TGA_ERROR_FILE_OPEN -> TGA_ERROR_FILE_OPEN
    org.cocos2d.opengl.TGA$TGAError TGA_ERROR_READING_FILE -> TGA_ERROR_READING_FILE
    org.cocos2d.opengl.TGA$TGAError TGA_ERROR_INDEXED_COLOR -> TGA_ERROR_INDEXED_COLOR
    org.cocos2d.opengl.TGA$TGAError TGA_ERROR_MEMORY -> TGA_ERROR_MEMORY
    org.cocos2d.opengl.TGA$TGAError TGA_ERROR_COMPRESSED_FILE -> TGA_ERROR_COMPRESSED_FILE
    org.cocos2d.opengl.TGA$TGAError[] ENUM$VALUES -> ENUM$VALUES
    org.cocos2d.opengl.TGA$TGAError[] values() -> values
    org.cocos2d.opengl.TGA$TGAError valueOf(java.lang.String) -> valueOf
org.cocos2d.particlesystem.CCParticleExplosion -> org.cocos2d.particlesystem.i:
    org.cocos2d.particlesystem.CCParticleSystem node() -> a
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleFire -> org.cocos2d.particlesystem.k:
    org.cocos2d.particlesystem.CCParticleFire node() -> a
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleFireworks -> org.cocos2d.particlesystem.c:
    org.cocos2d.particlesystem.CCParticleSystem node() -> a
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleFlower -> org.cocos2d.particlesystem.g:
    org.cocos2d.particlesystem.CCParticleFlower node() -> a
    org.cocos2d.particlesystem.CCParticleFlower node$791a2f71() -> b
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleGalaxy -> org.cocos2d.particlesystem.b:
    org.cocos2d.particlesystem.CCParticleSystem node() -> a
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleMeteor -> org.cocos2d.particlesystem.d:
    org.cocos2d.particlesystem.CCParticleSystem node() -> a
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleRain -> org.cocos2d.particlesystem.j:
    org.cocos2d.particlesystem.CCParticleSystem node() -> a
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleSmoke -> org.cocos2d.particlesystem.h:
    org.cocos2d.particlesystem.CCParticleSystem node() -> a
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleSnow -> org.cocos2d.particlesystem.e:
    org.cocos2d.particlesystem.CCParticleSystem node() -> a
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleSpiral -> org.cocos2d.particlesystem.f:
    org.cocos2d.particlesystem.CCParticleSystem node() -> a
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleSun -> org.cocos2d.particlesystem.a:
    org.cocos2d.particlesystem.CCParticleSun node() -> a
    org.cocos2d.particlesystem.CCParticleSun node$4e063d22() -> b
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
org.cocos2d.particlesystem.CCParticleSystem -> org.cocos2d.particlesystem.CCParticleSystem:
    int kCCParticleDurationInfinity -> kCCParticleDurationInfinity
    int kCCParticleStartSizeEqualToEndSize -> kCCParticleStartSizeEqualToEndSize
    int kCCParticleStartRadiusEqualToEndRadius -> kCCParticleStartRadiusEqualToEndRadius
    int kParticleStartSizeEqualToEndSize -> kParticleStartSizeEqualToEndSize
    int kParticleDurationInfinity -> kParticleDurationInfinity
    int kCCParticleModeGravity -> kCCParticleModeGravity
    int kCCParticleModeRadius -> kCCParticleModeRadius
    int kCCPositionTypeFree -> kCCPositionTypeFree
    int kCCPositionTypeGrouped -> kCCPositionTypeGrouped
    int id -> id
    boolean active -> active
    float duration -> duration
    float elapsed -> elapsed
    float startSize -> startSize
    float startSizeVar -> startSizeVar
    float endSize -> endSize
    float endSizeVar -> endSizeVar
    float startSpin -> startSpin
    float startSpinVar -> startSpinVar
    float endSpin -> endSpin
    float endSpinVar -> endSpinVar
    org.cocos2d.types.CGPoint centerOfGravity -> centerOfGravity
    org.cocos2d.types.CGPoint source -> source
    org.cocos2d.types.CGPoint posVar -> posVar
    float angle -> angle
    float angleVar -> angleVar
    float speed -> speed
    float speedVar -> speedVar
    float tangentialAccel -> tangentialAccel
    float tangentialAccelVar -> tangentialAccelVar
    float radialAccel -> radialAccel
    float radialAccelVar -> radialAccelVar
    float size -> size
    float sizeVar -> sizeVar
    float life -> life
    float lifeVar -> lifeVar
    org.cocos2d.types.ccColor4F startColor -> startColor
    org.cocos2d.types.ccColor4F startColorVar -> startColorVar
    org.cocos2d.types.ccColor4F endColor -> endColor
    org.cocos2d.types.ccColor4F endColorVar -> endColorVar
    org.cocos2d.types.ccBlendFunc blendFunc -> blendFunc
    int positionType -> positionType
    boolean autoRemoveOnFinish_ -> autoRemoveOnFinish_
    org.cocos2d.particlesystem.CCParticleSystem$CCParticle[] particles -> particles
    int totalParticles -> totalParticles
    int particleCount -> particleCount
    boolean blendAdditive -> blendAdditive
    boolean colorModulate -> colorModulate
    float emissionRate -> emissionRate
    float emitCounter -> emitCounter
    org.cocos2d.opengl.CCTexture2D texture -> texture
    int emitterMode -> emitterMode
    org.cocos2d.particlesystem.CCParticleSystem$ModeA modeA -> modeA
    org.cocos2d.particlesystem.CCParticleSystem$ModeB modeB -> modeB
    org.cocos2d.types.ccPointSprite[] vertices -> vertices
    int verticesID -> verticesID
    int colorsID -> colorsID
    int particleIdx -> particleIdx
    int kPositionTypeFree -> kPositionTypeFree
    int kPositionTypeGrouped -> kPositionTypeGrouped
    int positionType_ -> positionType_
    boolean $assertionsDisabled -> $assertionsDisabled
    void setStartSize(float) -> setStartSize
    void setStartSizeVar(float) -> setStartSizeVar
    void setEndSize(float) -> setEndSize
    void setEndSizeVar(float) -> setEndSizeVar
    void setStartSpin(float) -> setStartSpin
    void setStartSpinVar(float) -> setStartSpinVar
    void setEndSpin(float) -> setEndSpin
    void setEndSpinVar(float) -> setEndSpinVar
    void setCenterOfGravity(org.cocos2d.types.CGPoint) -> setCenterOfGravity
    org.cocos2d.types.CGPoint getCenterOfGravity() -> getCenterOfGravity
    void setPosVar(org.cocos2d.types.CGPoint) -> setPosVar
    void setAngle(float) -> setAngle
    void setAngleVar(float) -> setAngleVar
    void setLifeVar(float) -> setLifeVar
    void setStartColor(org.cocos2d.types.ccColor4F) -> setStartColor
    org.cocos2d.types.ccColor4F getStartColor() -> getStartColor
    void setStartColorVar(org.cocos2d.types.ccColor4F) -> setStartColorVar
    org.cocos2d.types.ccColor4F getStartColorVar() -> getStartColorVar
    void setEndColor(org.cocos2d.types.ccColor4F) -> setEndColor
    void setEndColorVar(org.cocos2d.types.ccColor4F) -> setEndColorVar
    int getTotalParticles() -> getTotalParticles
    void setEmissionRate(float) -> setEmissionRate
    void setEmitterMode(int) -> setEmitterMode
    void setAutoRemoveOnFinish(boolean) -> setAutoRemoveOnFinish
    boolean isFull() -> isFull
    void setTangentialAccel(float) -> setTangentialAccel
    float getTangentialAccel() -> getTangentialAccel
    void setTangentialAccelVar(float) -> setTangentialAccelVar
    float getTangentialAccelVar() -> getTangentialAccelVar
    void setRadialAccel(float) -> setRadialAccel
    float getRadialAccel() -> getRadialAccel
    void setRadialAccelVar(float) -> setRadialAccelVar
    float getRadialAccelVar() -> getRadialAccelVar
    void setGravity(org.cocos2d.types.CGPoint) -> setGravity
    org.cocos2d.types.CGPoint getGravity() -> getGravity
    org.cocos2d.types.CGPoint gravity() -> gravity
    void setSpeed(float) -> setSpeed
    float getSpeed() -> getSpeed
    void setSpeedVar(float) -> setSpeedVar
    float getSpeedVar() -> getSpeedVar
    void setStartRadius(float) -> setStartRadius
    float startRadius() -> startRadius
    void setStartRadiusVar(float) -> setStartRadiusVar
    float startRadiusVar() -> startRadiusVar
    void setEndRadius(float) -> setEndRadius
    float endRadius() -> endRadius
    void setEndRadiusVar(float) -> setEndRadiusVar
    float endRadiusVar() -> endRadiusVar
    boolean getActive() -> getActive
    int getParticleCount() -> getParticleCount
    void setRotatePerSecond(float) -> setRotatePerSecond
    float rotatePerSecond() -> rotatePerSecond
    void setRotatePerSecondVar(float) -> setRotatePerSecondVar
    float rotatePerSecondVar() -> rotatePerSecondVar
    float getDuration() -> getDuration
    void setDuration(float) -> setDuration
    org.cocos2d.types.CGPoint getSource() -> getSource
    void setSource(org.cocos2d.types.CGPoint) -> setSource
    org.cocos2d.types.CGPoint getPosVar() -> getPosVar
    float getLife() -> getLife
    void setLife(float) -> setLife
    int getPositionType() -> getPositionType
    void setPositionType(int) -> setPositionType
    org.cocos2d.opengl.CCTexture2D getTexture() -> getTexture
    void setTexture(org.cocos2d.opengl.CCTexture2D) -> setTexture
    void initParticle(org.cocos2d.particlesystem.CCParticleSystem$CCParticle) -> initParticle
    void stopSystem() -> stopSystem
    void resetSystem() -> resetSystem
    org.cocos2d.particlesystem.CCParticleSystem particleWithFile(java.lang.String) -> particleWithFile
    boolean addParticle() -> addParticle
    void update(float) -> update
    void updateQuad(org.cocos2d.particlesystem.CCParticleSystem$CCParticle,org.cocos2d.types.CGPoint) -> updateQuad
    void postStep() -> postStep
    void setBlendAdditive(boolean) -> setBlendAdditive
    boolean getBlendAdditive() -> getBlendAdditive
org.cocos2d.particlesystem.CCParticleSystem$CCParticle -> org.cocos2d.particlesystem.CCParticleSystem$CCParticle:
    org.cocos2d.types.CGPoint pos -> pos
    org.cocos2d.types.CGPoint startPos -> startPos
    org.cocos2d.types.ccColor4F color -> color
    org.cocos2d.types.ccColor4F deltaColor -> deltaColor
    float size -> size
    float deltaSize -> deltaSize
    float rotation -> rotation
    float deltaRotation -> deltaRotation
    float timeToLive -> timeToLive
    org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeA modeA -> modeA
    org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeB modeB -> modeB
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeA -> org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeA:
    org.cocos2d.types.CGPoint dir -> dir
    float radialAccel -> radialAccel
    float tangentialAccel -> tangentialAccel
org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeB -> org.cocos2d.particlesystem.CCParticleSystem$CCParticle$ParticleModeB:
    float angle -> angle
    float degreesPerSecond -> degreesPerSecond
    float radius -> radius
    float deltaRadius -> deltaRadius
org.cocos2d.particlesystem.CCParticleSystem$ModeA -> org.cocos2d.particlesystem.CCParticleSystem$ModeA:
    org.cocos2d.types.CGPoint gravity -> gravity
    float speed -> speed
    float speedVar -> speedVar
    float tangentialAccel -> tangentialAccel
    float tangentialAccelVar -> tangentialAccelVar
    float radialAccel -> radialAccel
    float radialAccelVar -> radialAccelVar
    org.cocos2d.particlesystem.CCParticleSystem this$0 -> this$0
org.cocos2d.particlesystem.CCParticleSystem$ModeB -> org.cocos2d.particlesystem.CCParticleSystem$ModeB:
    float startRadius -> startRadius
    float startRadiusVar -> startRadiusVar
    float endRadius -> endRadius
    float endRadiusVar -> endRadiusVar
    float rotatePerSecond -> rotatePerSecond
    float rotatePerSecondVar -> rotatePerSecondVar
    org.cocos2d.particlesystem.CCParticleSystem this$0 -> this$0
org.cocos2d.particlesystem.CCPointParticleSystem -> org.cocos2d.particlesystem.CCPointParticleSystem:
    org.cocos2d.utils.FastFloatBuffer vertices -> vertices
    org.cocos2d.utils.FastFloatBuffer sizeBuffer -> sizeBuffer
    int[] verticesID -> verticesID
    boolean $assertionsDisabled -> $assertionsDisabled
    void finalize() -> finalize
    void updateQuad(org.cocos2d.particlesystem.CCParticleSystem$CCParticle,org.cocos2d.types.CGPoint) -> updateQuad
    void postStep() -> postStep
    void draw() -> draw
    void setStartSpin(float) -> setStartSpin
    void setStartSpinVar(float) -> setStartSpinVar
    void setEndSpin(float) -> setEndSpin
    void setEndSpinVar(float) -> setEndSpinVar
    void setStartSize(float) -> setStartSize
    void setEndSize(float) -> setEndSize
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
org.cocos2d.particlesystem.CCQuadParticleSystem -> org.cocos2d.particlesystem.CCQuadParticleSystem:
    org.cocos2d.utils.FastFloatBuffer texCoords -> texCoords
    org.cocos2d.utils.FastFloatBuffer vertices -> vertices
    org.cocos2d.utils.FastFloatBuffer colors -> colors
    java.nio.ShortBuffer indices -> indices
    int[] quadsIDs -> quadsIDs
    int QuadSize -> QuadSize
    boolean $assertionsDisabled -> $assertionsDisabled
    void finalize() -> finalize
    void initTexCoordsWithRect(org.cocos2d.types.CGRect) -> initTexCoordsWithRect
    void setTexture(org.cocos2d.opengl.CCTexture2D,org.cocos2d.types.CGRect) -> setTexture
    void setTexture(org.cocos2d.opengl.CCTexture2D) -> setTexture
    void setDisplayFrame(org.cocos2d.nodes.CCSpriteFrame) -> setDisplayFrame
    void initIndices() -> initIndices
    void updateQuad(org.cocos2d.particlesystem.CCParticleSystem$CCParticle,org.cocos2d.types.CGPoint) -> updateQuad
    void postStep() -> postStep
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    void setBlendFunc(org.cocos2d.types.ccBlendFunc) -> setBlendFunc
    org.cocos2d.types.ccBlendFunc getBlendFunc() -> getBlendFunc
org.cocos2d.particlesystem.CCQuadParticleSystem$1 -> org.cocos2d.particlesystem.CCQuadParticleSystem$1:
    org.cocos2d.particlesystem.CCQuadParticleSystem this$0 -> this$0
    void load(org.cocos2d.opengl.GLResourceHelper$Resource) -> load
org.cocos2d.particlesystem.CCQuadParticleSystem$2 -> org.cocos2d.particlesystem.CCQuadParticleSystem$2:
    org.cocos2d.particlesystem.CCQuadParticleSystem this$0 -> this$0
    void perform(javax.microedition.khronos.opengles.GL10) -> perform
org.cocos2d.protocols.CCKeyDelegateProtocol -> org.cocos2d.a.e:
    boolean ccKeyDown(int,android.view.KeyEvent) -> ccKeyDown
    boolean ccKeyUp(int,android.view.KeyEvent) -> ccKeyUp
org.cocos2d.protocols.CCLabelProtocol -> org.cocos2d.a.d:
    void setString(java.lang.CharSequence) -> setString
org.cocos2d.protocols.CCMotionEventProtocol -> org.cocos2d.a.b:
org.cocos2d.protocols.CCRGBAProtocol -> org.cocos2d.a.a:
    void setColor(org.cocos2d.types.ccColor3B) -> setColor
    org.cocos2d.types.ccColor3B getColor() -> getColor
    int getOpacity() -> getOpacity
    void setOpacity(int) -> setOpacity
    void setOpacityModifyRGB(boolean) -> setOpacityModifyRGB
org.cocos2d.protocols.CCTouchDelegateProtocol -> org.cocos2d.a.c:
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesMoved(android.view.MotionEvent) -> ccTouchesMoved
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
    boolean ccTouchesCancelled(android.view.MotionEvent) -> ccTouchesCancelled
org.cocos2d.sound.SoundEngine -> org.cocos2d.sound.SoundEngine:
    org.cocos2d.utils.collections.IntMap effectsMap -> effectsMap
    org.cocos2d.utils.collections.IntMap streamsMap -> streamsMap
    org.cocos2d.utils.collections.IntMap soundsMap -> soundsMap
    android.media.SoundPool sp -> sp
    int lastSndId -> lastSndId
    java.lang.Float prevEffectsVolume -> prevEffectsVolume
    java.lang.Float prevSoundsVolume -> prevSoundsVolume
    java.lang.Float effectsVolume -> effectsVolume
    java.lang.Float soundsVolume -> soundsVolume
    boolean mute -> mute
    org.cocos2d.sound.SoundEngine _sharedEngine -> _sharedEngine
    org.cocos2d.sound.SoundEngine sharedEngine() -> sharedEngine
    void purgeSharedEngine() -> purgeSharedEngine
    void setEffectsVolume(java.lang.Float) -> setEffectsVolume
    java.lang.Float getEffectsVolume() -> getEffectsVolume
    void setSoundVolume(java.lang.Float) -> setSoundVolume
    java.lang.Float getSoundsVolume() -> getSoundsVolume
    void mute() -> mute
    void unmute() -> unmute
    boolean isMute() -> isMute
    void preloadEffect(android.content.Context,int) -> preloadEffect
    void playEffect(android.content.Context,int) -> playEffect
    void stopEffect(android.content.Context,int) -> stopEffect
    void preloadSound(android.content.Context,int) -> preloadSound
    void playSound(android.content.Context,int,boolean) -> playSound
    void pauseSound() -> pauseSound
    void resumeSound() -> resumeSound
    void realesSound(int) -> realesSound
    void realesAllSounds() -> realesAllSounds
    void realesAllEffects() -> realesAllEffects
org.cocos2d.tests.ActionManagerTest -> org.cocos2d.tests.ActionManagerTest:
    int kTagNode -> kTagNode
    int kTagGrossini -> kTagGrossini
    int kTagSister -> kTagSister
    int kTagSlider -> kTagSlider
    int kTagSequence -> kTagSequence
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.ActionManagerTest$ActionManagerDemo -> org.cocos2d.tests.ActionManagerTest$ActionManagerDemo:
    org.cocos2d.opengl.CCTextureAtlas atlas -> atlas
    void restartCallback(java.lang.Object) -> restartCallback
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ActionManagerTest$CrashTest -> org.cocos2d.tests.bt:
    java.lang.String title() -> title
org.cocos2d.tests.ActionManagerTest$Issue835 -> org.cocos2d.tests.ee:
    void onEnter() -> onEnter
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ActionManagerTest$LogicTest -> org.cocos2d.tests.az:
    java.lang.String title() -> title
org.cocos2d.tests.ActionManagerTest$PauseTest -> org.cocos2d.tests.bj:
    void onEnter() -> onEnter
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ActionManagerTest$RemoveTest -> org.cocos2d.tests.ei:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ActionsTest -> org.cocos2d.tests.ActionsTest:
    java.lang.String LOG_TAG -> LOG_TAG
    int kTagAnimationDance -> kTagAnimationDance
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
    java.lang.String access$0() -> access$0
org.cocos2d.tests.ActionsTest$ActionAnimate -> org.cocos2d.tests.k:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionBezier -> org.cocos2d.tests.ff:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionBlink -> org.cocos2d.tests.et:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionCallFunc -> org.cocos2d.tests.cu:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionCallFuncND -> org.cocos2d.tests.dg:
    void onEnter() -> onEnter
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ActionsTest$ActionDelayTime -> org.cocos2d.tests.d:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionDemo -> org.cocos2d.tests.ActionsTest$ActionDemo:
    org.cocos2d.nodes.CCSprite grossini -> grossini
    org.cocos2d.nodes.CCSprite tamara -> tamara
    org.cocos2d.nodes.CCSprite kathia -> kathia
    void restartCallback(java.lang.Object) -> restartCallback
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    void alignSpritesLeft(int) -> alignSpritesLeft
    void centerSprites(int) -> centerSprites
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ActionsTest$ActionDemo$1 -> org.cocos2d.tests.ActionsTest$ActionDemo$1:
    org.cocos2d.tests.ActionsTest$ActionDemo this$1 -> this$1
    android.graphics.Bitmap val$bmpCopy -> val$bmpCopy
    void load(org.cocos2d.opengl.GLResourceHelper$Resource) -> load
org.cocos2d.tests.ActionsTest$ActionFade -> org.cocos2d.tests.p:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionFollow -> org.cocos2d.tests.ao:
    void onEnter() -> onEnter
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ActionsTest$ActionJump -> org.cocos2d.tests.fh:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionManual -> org.cocos2d.tests.cp:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionMove -> org.cocos2d.tests.dz:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionOrbit -> org.cocos2d.tests.ej:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionProperty -> org.cocos2d.tests.dd:
    void onEnter() -> onEnter
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ActionsTest$ActionRepeat -> org.cocos2d.tests.em:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionRepeatForever -> org.cocos2d.tests.eo:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionReverse -> org.cocos2d.tests.ab:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionReverseSequence -> org.cocos2d.tests.o:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionReverseSequence2 -> org.cocos2d.tests.ef:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionRotate -> org.cocos2d.tests.cq:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionRotateJerk -> org.cocos2d.tests.fp:
    void onEnter() -> onEnter
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ActionsTest$ActionRotateToRepeat -> org.cocos2d.tests.ev:
    void onEnter() -> onEnter
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ActionsTest$ActionScale -> org.cocos2d.tests.ak:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionSequence -> org.cocos2d.tests.bz:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionSequence2 -> org.cocos2d.tests.m:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionSpawn -> org.cocos2d.tests.bk:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ActionsTest$ActionTint -> org.cocos2d.tests.ez:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.AtlasTest -> org.cocos2d.tests.AtlasTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    int kTagTileMap -> kTagTileMap
    int kTagSpriteManager -> kTagSpriteManager
    int kTagAnimation1 -> kTagAnimation1
    int kTagBitmapAtlas1 -> kTagBitmapAtlas1
    int kTagBitmapAtlas2 -> kTagBitmapAtlas2
    int kTagBitmapAtlas3 -> kTagBitmapAtlas3
    int kTagSprite1 -> kTagSprite1
    int kTagSprite2 -> kTagSprite2
    int kTagSprite3 -> kTagSprite3
    int kTagSprite4 -> kTagSprite4
    int kTagSprite5 -> kTagSprite5
    int kTagSprite6 -> kTagSprite6
    int kTagSprite7 -> kTagSprite7
    int kTagSprite8 -> kTagSprite8
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.AtlasTest$Atlas1 -> org.cocos2d.tests.AtlasTest$Atlas1:
    org.cocos2d.opengl.CCTextureAtlas textureAtlas -> textureAtlas
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.AtlasTest$Atlas3 -> org.cocos2d.tests.AtlasTest$Atlas3:
    float time -> time
    void step(float) -> step
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.AtlasTest$Atlas3$1 -> org.cocos2d.tests.AtlasTest$Atlas3$1:
    org.cocos2d.tests.AtlasTest$Atlas3 this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.AtlasTest$Atlas4 -> org.cocos2d.tests.AtlasTest$Atlas4:
    float time -> time
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    void step(float) -> step
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.AtlasTest$Atlas4$1 -> org.cocos2d.tests.AtlasTest$Atlas4$1:
    org.cocos2d.tests.AtlasTest$Atlas4 this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.AtlasTest$Atlas5 -> org.cocos2d.tests.cs:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.AtlasTest$Atlas6 -> org.cocos2d.tests.ct:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.AtlasTest$AtlasBitmapColor -> org.cocos2d.tests.dx:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.AtlasTest$AtlasDemo -> org.cocos2d.tests.AtlasTest$AtlasDemo:
    org.cocos2d.opengl.CCTextureAtlas atlas -> atlas
    void restartCallback(java.lang.Object) -> restartCallback
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.AtlasTest$AtlasFastBitmap -> org.cocos2d.tests.cf:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest -> org.cocos2d.tests.AtlasTest$LabelAtlasColorTest:
    float time -> time
    void step(float) -> step
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.AtlasTest$LabelAtlasColorTest$1 -> org.cocos2d.tests.AtlasTest$LabelAtlasColorTest$1:
    org.cocos2d.tests.AtlasTest$LabelAtlasColorTest this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.AtlasTest$LabelAtlasTest -> org.cocos2d.tests.AtlasTest$LabelAtlasTest:
    float time -> time
    void step(float) -> step
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.AtlasTest$LabelAtlasTest$1 -> org.cocos2d.tests.AtlasTest$LabelAtlasTest$1:
    org.cocos2d.tests.AtlasTest$LabelAtlasTest this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.Box2dTest -> org.cocos2d.tests.Box2dTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
org.cocos2d.tests.Box2dTest$Box2DTestLayer -> org.cocos2d.tests.Box2dTest$Box2DTestLayer:
    int kTagTileMap -> kTagTileMap
    int kTagSpriteManager -> kTagSpriteManager
    int kTagAnimation1 -> kTagAnimation1
    float PTM_RATIO -> PTM_RATIO
    float BUFFER -> BUFFER
    float FPS -> FPS
    float rdelta -> rdelta
    com.badlogic.gdx.physics.box2d.World bxWorld -> bxWorld
    org.cocos2d.actions.UpdateCallback tickCallback -> tickCallback
    float prevX -> prevX
    float prevY -> prevY
    com.badlogic.gdx.math.Vector2 gravity -> gravity
    void onEnter() -> onEnter
    void onExit() -> onExit
    void addNewSpriteWithCoords(org.cocos2d.types.CGPoint) -> addNewSpriteWithCoords
    void tick(float) -> tick
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    void ccAccelerometerChanged(float,float,float) -> ccAccelerometerChanged
org.cocos2d.tests.Box2dTest$Box2DTestLayer$1 -> org.cocos2d.tests.Box2dTest$Box2DTestLayer$1:
    org.cocos2d.tests.Box2dTest$Box2DTestLayer this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.ClickAndMoveTest -> org.cocos2d.tests.ClickAndMoveTest:
    org.cocos2d.tests.ClickAndMoveTest app -> app
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
org.cocos2d.tests.ClickAndMoveTest$MainLayer -> org.cocos2d.tests.ClickAndMoveTest$MainLayer:
    int kTagSprite -> kTagSprite
    org.cocos2d.actions.CCProgressTimer progressTimer -> progressTimer
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
org.cocos2d.tests.CocosNodeTest -> org.cocos2d.tests.CocosNodeTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int kTagSprite1 -> kTagSprite1
    int kTagSprite2 -> kTagSprite2
    int kTagSprite3 -> kTagSprite3
    int kTagSlider -> kTagSlider
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.CocosNodeTest$CameraCenterTest -> org.cocos2d.tests.ar:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.CocosNodeTest$CameraOrbitTest -> org.cocos2d.tests.cr:
    void onEnter() -> onEnter
    void onExit() -> onExit
    java.lang.String title() -> title
org.cocos2d.tests.CocosNodeTest$CameraZoomTest -> org.cocos2d.tests.CocosNodeTest$CameraZoomTest:
    float z -> z
    void onEnter() -> onEnter
    void onExit() -> onExit
    void updateEye(float) -> updateEye
    java.lang.String title() -> title
org.cocos2d.tests.CocosNodeTest$CameraZoomTest$1 -> org.cocos2d.tests.CocosNodeTest$CameraZoomTest$1:
    org.cocos2d.tests.CocosNodeTest$CameraZoomTest this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.CocosNodeTest$CustomNode -> org.cocos2d.tests.aq:
org.cocos2d.tests.CocosNodeTest$NodeToWorld -> org.cocos2d.tests.bm:
    java.lang.String title() -> title
org.cocos2d.tests.CocosNodeTest$SchedulerTest1 -> org.cocos2d.tests.bs:
    java.lang.String title() -> title
org.cocos2d.tests.CocosNodeTest$StressTest1 -> org.cocos2d.tests.de:
    java.lang.String title() -> title
org.cocos2d.tests.CocosNodeTest$StressTest2 -> org.cocos2d.tests.dh:
    java.lang.String title() -> title
org.cocos2d.tests.CocosNodeTest$Test2 -> org.cocos2d.tests.w:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.CocosNodeTest$Test4 -> org.cocos2d.tests.y:
    java.lang.String title() -> title
org.cocos2d.tests.CocosNodeTest$Test5 -> org.cocos2d.tests.z:
    java.lang.String title() -> title
org.cocos2d.tests.CocosNodeTest$Test6 -> org.cocos2d.tests.u:
    java.lang.String title() -> title
org.cocos2d.tests.CocosNodeTest$TestDemo -> org.cocos2d.tests.as:
    void restartCallback(java.lang.Object) -> restartCallback
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.DrawPrimitivesTest -> org.cocos2d.tests.DrawPrimitivesTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.DrawPrimitivesTest$Test1 -> org.cocos2d.tests.en:
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
org.cocos2d.tests.DrawPrimitivesTest$TestDemo -> org.cocos2d.tests.at:
org.cocos2d.tests.EaseActionsTest -> org.cocos2d.tests.EaseActionsTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    int kTagAction1 -> kTagAction1
    int kTagAction2 -> kTagAction2
    int kTagSlider -> kTagSlider
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.EaseActionsTest$SpeedTest -> org.cocos2d.tests.bn:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteDemo -> org.cocos2d.tests.EaseActionsTest$SpriteDemo:
    org.cocos2d.nodes.CCSprite grossini -> grossini
    org.cocos2d.nodes.CCSprite tamara -> tamara
    org.cocos2d.nodes.CCSprite kathia -> kathia
    void restartCallback(java.lang.Object) -> restartCallback
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    void positionForTwo() -> positionForTwo
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEase -> org.cocos2d.tests.cb:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseBack -> org.cocos2d.tests.bg:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseBackInOut -> org.cocos2d.tests.f:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseBounce -> org.cocos2d.tests.r:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseBounceInOut -> org.cocos2d.tests.dt:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseElastic -> org.cocos2d.tests.j:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseElasticInOut -> org.cocos2d.tests.c:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseExponential -> org.cocos2d.tests.er:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseExponentialInOut -> org.cocos2d.tests.ae:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseInOut -> org.cocos2d.tests.fs:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseSine -> org.cocos2d.tests.ch:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EaseActionsTest$SpriteEaseSineInOut -> org.cocos2d.tests.i:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.EffectsAdvancedTest -> org.cocos2d.tests.EffectsAdvancedTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    int kTagTextLayer -> kTagTextLayer
    int kTagSprite1 -> kTagSprite1
    int kTagSprite2 -> kTagSprite2
    int kTagBackground -> kTagBackground
    int kTagLabel -> kTagLabel
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.EffectsAdvancedTest$Effect1 -> org.cocos2d.tests.fb:
    void onEnter() -> onEnter
    java.lang.String title() -> a
org.cocos2d.tests.EffectsAdvancedTest$Effect2 -> org.cocos2d.tests.fd:
    void onEnter() -> onEnter
    java.lang.String title() -> a
org.cocos2d.tests.EffectsAdvancedTest$Effect3 -> org.cocos2d.tests.fc:
    void onEnter() -> onEnter
    java.lang.String title() -> a
org.cocos2d.tests.EffectsAdvancedTest$Effect4 -> org.cocos2d.tests.fg:
    void onEnter() -> onEnter
    java.lang.String title() -> a
org.cocos2d.tests.EffectsAdvancedTest$Effect5 -> org.cocos2d.tests.fe:
    void onEnter() -> onEnter
    java.lang.String title() -> a
org.cocos2d.tests.EffectsAdvancedTest$Issue631 -> org.cocos2d.tests.ce:
    void onEnter() -> onEnter
    java.lang.String title() -> a
    java.lang.String subtitle() -> b
org.cocos2d.tests.EffectsAdvancedTest$TextLayer -> org.cocos2d.tests.fr:
    java.lang.String title() -> a
    java.lang.String subtitle() -> b
org.cocos2d.tests.EffectsTest -> org.cocos2d.tests.EffectsTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int actionIdx -> actionIdx
    java.lang.Class[] actionList -> actionList
    java.lang.String[] effectsList -> effectsList
    int kTagTextLayer -> kTagTextLayer
    int kTagBackground -> kTagBackground
    int kTagLabel -> kTagLabel
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    java.lang.Class nextAction() -> nextAction
    java.lang.Class backAction() -> backAction
    java.lang.Class restartAction() -> restartAction
org.cocos2d.tests.EffectsTest$FadeOutBLTilesDemo -> org.cocos2d.tests.dm:
org.cocos2d.tests.EffectsTest$FadeOutDownTilesDemo -> org.cocos2d.tests.cz:
org.cocos2d.tests.EffectsTest$FadeOutTRTilesDemo -> org.cocos2d.tests.es:
org.cocos2d.tests.EffectsTest$FadeOutUpTilesDemo -> org.cocos2d.tests.du:
org.cocos2d.tests.EffectsTest$FlipX3DDemo -> org.cocos2d.tests.fq:
org.cocos2d.tests.EffectsTest$FlipY3DDemo -> org.cocos2d.tests.by:
org.cocos2d.tests.EffectsTest$JumpTiles3DDemo -> org.cocos2d.tests.dc:
org.cocos2d.tests.EffectsTest$Lens3DDemo -> org.cocos2d.tests.ai:
org.cocos2d.tests.EffectsTest$LiquidDemo -> org.cocos2d.tests.ap:
org.cocos2d.tests.EffectsTest$PageTurn3DDemo -> org.cocos2d.tests.af:
org.cocos2d.tests.EffectsTest$Ripple3DDemo -> org.cocos2d.tests.g:
org.cocos2d.tests.EffectsTest$Shaky3DDemo -> org.cocos2d.tests.aw:
org.cocos2d.tests.EffectsTest$ShakyTiles3DDemo -> org.cocos2d.tests.eg:
org.cocos2d.tests.EffectsTest$ShatteredTiles3DDemo -> org.cocos2d.tests.ea:
org.cocos2d.tests.EffectsTest$ShuffleTilesDemo -> org.cocos2d.tests.ca:
org.cocos2d.tests.EffectsTest$SplitColsDemo -> org.cocos2d.tests.ec:
org.cocos2d.tests.EffectsTest$SplitRowsDemo -> org.cocos2d.tests.df:
org.cocos2d.tests.EffectsTest$TextLayer -> org.cocos2d.tests.eu:
org.cocos2d.tests.EffectsTest$TextLayer$1 -> org.cocos2d.tests.EffectsTest$TextLayer$1:
    org.cocos2d.tests.EffectsTest$TextLayer this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.EffectsTest$TurnOffTilesDemo -> org.cocos2d.tests.ag:
org.cocos2d.tests.EffectsTest$TwirlDemo -> org.cocos2d.tests.bp:
org.cocos2d.tests.EffectsTest$Waves3DDemo -> org.cocos2d.tests.ft:
org.cocos2d.tests.EffectsTest$WavesDemo -> org.cocos2d.tests.v:
org.cocos2d.tests.EffectsTest$WavesTiles3DDemo -> org.cocos2d.tests.do:
org.cocos2d.tests.FontTest -> org.cocos2d.tests.FontTest:
    int kTagMenu -> kTagMenu
    int kTagMenu0 -> kTagMenu0
    int kTagMenu1 -> kTagMenu1
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int kTagSpriteManager -> kTagSpriteManager
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
org.cocos2d.tests.FontTest$Layer1 -> org.cocos2d.tests.FontTest$Layer1:
    org.cocos2d.menus.CCMenuItem disabledItem -> disabledItem
    void menuCallback(java.lang.Object) -> menuCallback
    void menuCallbackConfig(java.lang.Object) -> menuCallbackConfig
    void menuCallbackDisabled(java.lang.Object) -> menuCallbackDisabled
    void menuCallbackEnable(java.lang.Object) -> menuCallbackEnable
    void menuCallback2(java.lang.Object) -> menuCallback2
    void onQuit(java.lang.Object) -> onQuit
org.cocos2d.tests.FontTest$Layer2 -> org.cocos2d.tests.FontTest$Layer2:
    org.cocos2d.types.CGPoint centeredMenu -> centeredMenu
    boolean alignedH -> alignedH
    void alignMenusH() -> alignMenusH
    void alignMenusV() -> alignMenusV
    void menuCallbackBack(java.lang.Object) -> menuCallbackBack
    void menuCallbackOpacity(java.lang.Object) -> menuCallbackOpacity
    void menuCallbackAlign(java.lang.Object) -> menuCallbackAlign
org.cocos2d.tests.FontTest$Layer3 -> org.cocos2d.tests.FontTest$Layer3:
    org.cocos2d.menus.CCMenuItem disabledItem -> disabledItem
    void menuCallback(java.lang.Object) -> menuCallback
    void menuCallback2(java.lang.Object) -> menuCallback2
    void menuCallback3(java.lang.Object) -> menuCallback3
org.cocos2d.tests.FontTest$Layer4 -> org.cocos2d.tests.bv:
org.cocos2d.tests.MenuTest -> org.cocos2d.tests.MenuTest:
    int kTagMenu -> kTagMenu
    int kTagMenu0 -> kTagMenu0
    int kTagMenu1 -> kTagMenu1
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int kTagSpriteManager -> kTagSpriteManager
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
org.cocos2d.tests.MenuTest$Layer1 -> org.cocos2d.tests.MenuTest$Layer1:
    org.cocos2d.menus.CCMenuItem disabledItem -> disabledItem
    void menuCallback(java.lang.Object) -> menuCallback
    void menuCallbackConfig(java.lang.Object) -> menuCallbackConfig
    void menuCallbackDisabled(java.lang.Object) -> menuCallbackDisabled
    void menuCallbackEnable(java.lang.Object) -> menuCallbackEnable
    void menuCallback2(java.lang.Object) -> menuCallback2
    void onQuit(java.lang.Object) -> onQuit
org.cocos2d.tests.MenuTest$Layer2 -> org.cocos2d.tests.MenuTest$Layer2:
    org.cocos2d.types.CGPoint centeredMenu -> centeredMenu
    boolean alignedH -> alignedH
    void alignMenusH() -> alignMenusH
    void alignMenusV() -> alignMenusV
    void menuCallbackBack(java.lang.Object) -> menuCallbackBack
    void menuCallbackOpacity(java.lang.Object) -> menuCallbackOpacity
    void menuCallbackAlign(java.lang.Object) -> menuCallbackAlign
org.cocos2d.tests.MenuTest$Layer3 -> org.cocos2d.tests.MenuTest$Layer3:
    org.cocos2d.menus.CCMenuItem disabledItem -> disabledItem
    void menuCallback(java.lang.Object) -> menuCallback
    void menuCallback2(java.lang.Object) -> menuCallback2
    void menuCallback3(java.lang.Object) -> menuCallback3
org.cocos2d.tests.MenuTest$Layer4 -> org.cocos2d.tests.ci:
org.cocos2d.tests.MotionStreakTest -> org.cocos2d.tests.MotionStreakTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int kTagLabel -> kTagLabel
    int kTagSprite1 -> kTagSprite1
    int kTagSprite2 -> kTagSprite2
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.MotionStreakTest$MotionStreakTestLayer -> org.cocos2d.tests.bi:
    void restartCallback(java.lang.Object) -> restartCallback
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    java.lang.String title() -> title
org.cocos2d.tests.MotionStreakTest$Test1 -> org.cocos2d.tests.MotionStreakTest$Test1:
    org.cocos2d.nodes.CCNode root -> root
    org.cocos2d.nodes.CCNode target -> target
    org.cocos2d.nodes.CCMotionStreak streak -> streak
    void onEnter() -> onEnter
    void onUpdate(float) -> onUpdate
    java.lang.String title() -> title
org.cocos2d.tests.MotionStreakTest$Test1$1 -> org.cocos2d.tests.MotionStreakTest$Test1$1:
    org.cocos2d.tests.MotionStreakTest$Test1 this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.MotionStreakTest$Test2 -> org.cocos2d.tests.MotionStreakTest$Test2:
    org.cocos2d.nodes.CCNode root -> root
    org.cocos2d.nodes.CCNode target -> target
    org.cocos2d.nodes.CCMotionStreak streak -> streak
    void onEnter() -> onEnter
    boolean ccTouchesMoved(android.view.MotionEvent) -> ccTouchesMoved
    java.lang.String title() -> title
org.cocos2d.tests.ParallaxTest -> org.cocos2d.tests.ParallaxTest:
    boolean DEBUG -> DEBUG
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.ParallaxTest$Parallax1 -> org.cocos2d.tests.cw:
    java.lang.String title() -> title
org.cocos2d.tests.ParallaxTest$Parallax2 -> org.cocos2d.tests.ParallaxTest$Parallax2:
    org.cocos2d.types.CGPoint previousLocation -> previousLocation
    void registerWithTouchDispatcher() -> registerWithTouchDispatcher
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
    boolean ccTouchesCancelled(android.view.MotionEvent) -> ccTouchesCancelled
    boolean ccTouchesMoved(android.view.MotionEvent) -> ccTouchesMoved
    java.lang.String title() -> title
org.cocos2d.tests.ParallaxTest$ParallaxDemo -> org.cocos2d.tests.ParallaxTest$ParallaxDemo:
    org.cocos2d.opengl.CCTextureAtlas atlas -> atlas
    int kTagNode -> kTagNode
    int kTagGrossini -> kTagGrossini
    void restartCallback(java.lang.Object) -> restartCallback
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest -> org.cocos2d.tests.ParticleTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.ParticleTest$DemoBigFlower -> org.cocos2d.tests.au:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoExplosion -> org.cocos2d.tests.ParticleTest$DemoExplosion:
    int kTagLabelAtlas -> kTagLabelAtlas
    int kTagEmitter -> kTagEmitter
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoFire -> org.cocos2d.tests.e:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoFirework -> org.cocos2d.tests.ParticleTest$DemoFirework:
    int kTagLabelAtlas -> kTagLabelAtlas
    int kTagEmitter -> kTagEmitter
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoFlower -> org.cocos2d.tests.fn:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoGalaxy -> org.cocos2d.tests.ds:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoMeteor -> org.cocos2d.tests.br:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoModernArt -> org.cocos2d.tests.cg:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoRain -> org.cocos2d.tests.cy:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoRing -> org.cocos2d.tests.eh:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoRotFlower -> org.cocos2d.tests.dy:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoSmoke -> org.cocos2d.tests.dw:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoSnow -> org.cocos2d.tests.fl:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoSpiral -> org.cocos2d.tests.cl:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$DemoSun -> org.cocos2d.tests.db:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$Issue870 -> org.cocos2d.tests.ParticleTest$Issue870:
    int index -> index
    void onEnter() -> onEnter
    void updateQuads(float) -> updateQuads
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ParticleTest$ParallaxParticle -> org.cocos2d.tests.b:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$ParticleDemo -> org.cocos2d.tests.ParticleTest$ParticleDemo:
    org.cocos2d.opengl.CCTextureAtlas atlas -> atlas
    int kTagLabelAtlas -> kTagLabelAtlas
    org.cocos2d.particlesystem.CCParticleSystem emitter -> emitter
    org.cocos2d.nodes.CCSprite background -> background
    org.cocos2d.utils.javolution.TextBuilder particleCountString -> particleCountString
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesMoved(android.view.MotionEvent) -> ccTouchesMoved
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
    org.cocos2d.utils.javolution.TextBuilder getParticleCountString(int) -> getParticleCountString
    void update(float) -> update
    void toggleCallback(java.lang.Object) -> toggleCallback
    void restartCallback(java.lang.Object) -> restartCallback
    void setEmitterPosition() -> setEmitterPosition
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.ParticleTest$RadiusMode1 -> org.cocos2d.tests.dl:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.ParticleTest$RadiusMode2 -> org.cocos2d.tests.dk:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.RotateWorldTest -> org.cocos2d.tests.RotateWorldTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
org.cocos2d.tests.RotateWorldTest$MainLayer -> org.cocos2d.tests.eb:
org.cocos2d.tests.RotateWorldTest$SpriteLayer -> org.cocos2d.tests.fj:
org.cocos2d.tests.SceneTest -> org.cocos2d.tests.SceneTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    void onCreate(android.os.Bundle) -> onCreate
    void applicationDidFinishLaunching(android.content.Context,android.view.View) -> applicationDidFinishLaunching
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
org.cocos2d.tests.SceneTest$Layer1 -> org.cocos2d.tests.dr:
org.cocos2d.tests.SchedulerTest -> org.cocos2d.tests.SchedulerTest:
    java.lang.String LOG_TAG -> LOG_TAG
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int kTagAnimationDance -> kTagAnimationDance
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.SchedulerTest$SchedulerAutoremove -> org.cocos2d.tests.SchedulerTest$SchedulerAutoremove:
    float accum -> accum
    void tick(float) -> tick
    void autoremove(float) -> autoremove
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume -> org.cocos2d.tests.an:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$1 -> org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$1:
    org.cocos2d.tests.SchedulerTest$SchedulerPauseResume this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$2 -> org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$2:
    org.cocos2d.tests.SchedulerTest$SchedulerPauseResume this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$3 -> org.cocos2d.tests.SchedulerTest$SchedulerPauseResume$3:
    org.cocos2d.tests.SchedulerTest$SchedulerPauseResume this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.SchedulerTest$SchedulerSchedulesAndRemove -> org.cocos2d.tests.ey:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.SchedulerTest$SchedulerTestLayer -> org.cocos2d.tests.av:
    void restartCallback(java.lang.Object) -> restartCallback
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.SchedulerTest$SchedulerUnscheduleAll -> org.cocos2d.tests.fk:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.SchedulerTest$SchedulerUnscheduleAllHard -> org.cocos2d.tests.fa:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.SchedulerTest$SchedulerUpdate -> org.cocos2d.tests.dn:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom -> org.cocos2d.tests.bu:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
    void update(float) -> update
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$1 -> org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$1:
    org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$2 -> org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom$2:
    org.cocos2d.tests.SchedulerTest$SchedulerUpdateAndCustom this$1 -> this$1
    void update(float) -> update
org.cocos2d.tests.SchedulerTest$SchedulerUpdateFromCustom -> org.cocos2d.tests.cm:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
    void update(float) -> update
org.cocos2d.tests.SchedulerTest$TestNode -> org.cocos2d.tests.SchedulerTest$TestNode:
    java.lang.String string_ -> string_
    void update(float) -> update
org.cocos2d.tests.SpritesTest -> org.cocos2d.tests.SpritesTest:
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int kTagAnimationDance -> kTagAnimationDance
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
org.cocos2d.tests.SpritesTest$SpriteAnimate -> org.cocos2d.tests.aj:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteBezier -> org.cocos2d.tests.a:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteBlink -> org.cocos2d.tests.x:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteCallFunc -> org.cocos2d.tests.bq:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteDelayTime -> org.cocos2d.tests.ex:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteDemo -> org.cocos2d.tests.SpritesTest$SpriteDemo:
    org.cocos2d.nodes.CCSprite grossini -> grossini
    org.cocos2d.nodes.CCSprite tamara -> tamara
    void restartCallback(java.lang.Object) -> restartCallback
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    void centerSprites() -> centerSprites
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteFade -> org.cocos2d.tests.ac:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteJump -> org.cocos2d.tests.aa:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteManual -> org.cocos2d.tests.co:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteMove -> org.cocos2d.tests.bo:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteOrbit -> org.cocos2d.tests.fi:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteRepeat -> org.cocos2d.tests.ay:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteReverse -> org.cocos2d.tests.cv:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteReverseSequence -> org.cocos2d.tests.q:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteReverseSequence2 -> org.cocos2d.tests.fm:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteRotate -> org.cocos2d.tests.dq:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteScale -> org.cocos2d.tests.bb:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteSequence -> org.cocos2d.tests.al:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteSpawn -> org.cocos2d.tests.bx:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.SpritesTest$SpriteTint -> org.cocos2d.tests.l:
    void onEnter() -> onEnter
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest -> org.cocos2d.tests.TileMapTest:
    java.lang.String LOG_TAG -> LOG_TAG
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    int kTagTileMap -> kTagTileMap
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    org.cocos2d.layers.CCLayer nextAction() -> nextAction
    org.cocos2d.layers.CCLayer backAction() -> backAction
    org.cocos2d.layers.CCLayer restartAction() -> restartAction
org.cocos2d.tests.TileMapTest$TMXHexTest -> org.cocos2d.tests.fo:
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TMXIsoMoveLayer -> org.cocos2d.tests.h:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TMXIsoObjectsTest -> org.cocos2d.tests.dv:
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TMXIsoTest -> org.cocos2d.tests.ba:
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TMXIsoTest1 -> org.cocos2d.tests.dj:
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TMXIsoTest2 -> org.cocos2d.tests.di:
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TMXIsoVertexZ -> org.cocos2d.tests.TileMapTest$TMXIsoVertexZ:
    org.cocos2d.nodes.CCSprite tamara -> tamara
    void repositionSprite(float) -> repositionSprite
    void onEnter() -> onEnter
    void onExit() -> onExit
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TMXIsoZorder -> org.cocos2d.tests.TileMapTest$TMXIsoZorder:
    org.cocos2d.nodes.CCSprite tamara -> tamara
    void repositionSprite(float) -> repositionSprite
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TMXOrthoMoveLayer -> org.cocos2d.tests.ed:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TMXOrthoObjectsTest -> org.cocos2d.tests.t:
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TMXOrthoTest -> org.cocos2d.tests.ah:
    void onEnter() -> onEnter
    void onExit() -> onExit
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TMXOrthoTest2 -> org.cocos2d.tests.be:
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TMXOrthoTest3 -> org.cocos2d.tests.bf:
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TMXOrthoTest4 -> org.cocos2d.tests.bd:
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TMXOrthoVertexZ -> org.cocos2d.tests.TileMapTest$TMXOrthoVertexZ:
    org.cocos2d.nodes.CCSprite tamara -> tamara
    void repositionSprite(float) -> repositionSprite
    void onEnter() -> onEnter
    void onExit() -> onExit
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TMXOrthoZorder -> org.cocos2d.tests.TileMapTest$TMXOrthoZorder:
    org.cocos2d.nodes.CCSprite tamara -> tamara
    void repositionSprite(float) -> repositionSprite
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TMXReadWriteTest -> org.cocos2d.tests.TileMapTest$TMXReadWriteTest:
    int gid -> gid
    int gid2 -> gid2
    void removeSprite(java.lang.Object) -> removeSprite
    void updateCol(float) -> updateCol
    void repaintWithGID(float) -> repaintWithGID
    void removeTiles(float) -> removeTiles
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TMXResizeTest -> org.cocos2d.tests.ew:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TMXTilePropertyTest -> org.cocos2d.tests.dp:
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TMXTilesetTest -> org.cocos2d.tests.n:
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TMXUncompressedTest -> org.cocos2d.tests.ek:
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TileDemo -> org.cocos2d.tests.TileMapTest$TileDemo:
    org.cocos2d.opengl.CCTextureAtlas atlas -> atlas
    void registerWithTouchDispatcher() -> registerWithTouchDispatcher
    boolean ccTouchesBegan(android.view.MotionEvent) -> ccTouchesBegan
    boolean ccTouchesEnded(android.view.MotionEvent) -> ccTouchesEnded
    boolean ccTouchesCancelled(android.view.MotionEvent) -> ccTouchesCancelled
    boolean ccTouchesMoved(android.view.MotionEvent) -> ccTouchesMoved
    void restartCallback(java.lang.Object) -> restartCallback
    void nextCallback(java.lang.Object) -> nextCallback
    void backCallback(java.lang.Object) -> backCallback
    java.lang.String title() -> title
    java.lang.String subtitle() -> subtitle
org.cocos2d.tests.TileMapTest$TileMapEditTest -> org.cocos2d.tests.ck:
    java.lang.String title() -> title
org.cocos2d.tests.TileMapTest$TileMapTest1 -> org.cocos2d.tests.bc:
    java.lang.String title() -> title
org.cocos2d.tests.TransitionsTest -> org.cocos2d.tests.TransitionsTest:
    java.lang.String LOG_TAG -> LOG_TAG
    org.cocos2d.opengl.CCGLSurfaceView mGLSurfaceView -> mGLSurfaceView
    float TRANSITION_DURATION -> TRANSITION_DURATION
    int sceneIdx -> sceneIdx
    java.lang.Class[] transitions -> transitions
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onPause() -> onPause
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    java.lang.Class nextTransition() -> nextTransition
    java.lang.Class backTransition() -> backTransition
    java.lang.Class restartTransition() -> restartTransition
org.cocos2d.tests.TransitionsTest$FadeWhiteTransition -> org.cocos2d.tests.bl:
org.cocos2d.tests.TransitionsTest$FlipAngularLeftOver -> org.cocos2d.tests.bh:
org.cocos2d.tests.TransitionsTest$FlipAngularRightOver -> org.cocos2d.tests.cc:
org.cocos2d.tests.TransitionsTest$FlipXLeftOver -> org.cocos2d.tests.cd:
org.cocos2d.tests.TransitionsTest$FlipXRightOver -> org.cocos2d.tests.da:
org.cocos2d.tests.TransitionsTest$FlipYDownOver -> org.cocos2d.tests.bw:
org.cocos2d.tests.TransitionsTest$FlipYUpOver -> org.cocos2d.tests.cx:
org.cocos2d.tests.TransitionsTest$PageTransitionBackward -> org.cocos2d.tests.ad:
org.cocos2d.tests.TransitionsTest$PageTransitionForward -> org.cocos2d.tests.ax:
org.cocos2d.tests.TransitionsTest$TestLayer -> org.cocos2d.tests.el:
    void onEnter() -> onEnter
    void onEnterTransitionDidFinish() -> onEnterTransitionDidFinish
    void onExit() -> onExit
    void finalize() -> finalize
org.cocos2d.tests.TransitionsTest$ZoomFlipAngularLeftOver -> org.cocos2d.tests.cj:
org.cocos2d.tests.TransitionsTest$ZoomFlipAngularRightOver -> org.cocos2d.tests.am:
org.cocos2d.tests.TransitionsTest$ZoomFlipXLeftOver -> org.cocos2d.tests.eq:
org.cocos2d.tests.TransitionsTest$ZoomFlipXRightOver -> org.cocos2d.tests.cn:
org.cocos2d.tests.TransitionsTest$ZoomFlipYDownOver -> org.cocos2d.tests.s:
org.cocos2d.tests.TransitionsTest$ZoomFlipYUpOver -> org.cocos2d.tests.ep:
org.cocos2d.transitions.CCCrossFadeTransition -> org.cocos2d.transitions.v:
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    void onEnter() -> onEnter
    void onExit() -> onExit
org.cocos2d.transitions.CCFadeBLTransition -> org.cocos2d.transitions.q:
    org.cocos2d.actions.interval.CCIntervalAction action(org.cocos2d.types.ccGridSize) -> a
org.cocos2d.transitions.CCFadeDownTransition -> org.cocos2d.transitions.n:
    org.cocos2d.actions.interval.CCIntervalAction action(org.cocos2d.types.ccGridSize) -> a
org.cocos2d.transitions.CCFadeTRTransition -> org.cocos2d.transitions.x:
    void sceneOrder() -> sceneOrder
    void onEnter() -> onEnter
    org.cocos2d.actions.interval.CCIntervalAction action(org.cocos2d.types.ccGridSize) -> a
org.cocos2d.transitions.CCFadeTransition -> org.cocos2d.transitions.CCFadeTransition:
    org.cocos2d.types.ccColor4B color -> color
    org.cocos2d.transitions.CCFadeTransition transition(float,org.cocos2d.layers.CCScene,org.cocos2d.types.ccColor3B) -> transition
    org.cocos2d.transitions.CCFadeTransition transition(float,org.cocos2d.layers.CCScene) -> transition
    void onEnter() -> onEnter
    void onExit() -> onExit
    org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene) -> transition
org.cocos2d.transitions.CCFadeUpTransition -> org.cocos2d.transitions.i:
    org.cocos2d.actions.interval.CCIntervalAction action(org.cocos2d.types.ccGridSize) -> a
org.cocos2d.transitions.CCFlipAngularTransition -> org.cocos2d.transitions.t:
    void onEnter() -> onEnter
org.cocos2d.transitions.CCFlipXTransition -> org.cocos2d.transitions.s:
    void onEnter() -> onEnter
org.cocos2d.transitions.CCFlipYTransition -> org.cocos2d.transitions.c:
    void onEnter() -> onEnter
org.cocos2d.transitions.CCJumpZoomTransition -> org.cocos2d.transitions.j:
    void onEnter() -> onEnter
org.cocos2d.transitions.CCMoveInBTransition -> org.cocos2d.transitions.d:
    void initScenes() -> a
org.cocos2d.transitions.CCMoveInLTransition -> org.cocos2d.transitions.p:
    void onEnter() -> onEnter
    void initScenes() -> a
org.cocos2d.transitions.CCMoveInRTransition -> org.cocos2d.transitions.a:
    void initScenes() -> a
org.cocos2d.transitions.CCMoveInTTransition -> org.cocos2d.transitions.e:
    void initScenes() -> a
org.cocos2d.transitions.CCOrientedTransitionScene -> org.cocos2d.transitions.CCOrientedTransitionScene:
    int orientation -> orientation
    org.cocos2d.transitions.CCOrientedTransitionScene transition(float,org.cocos2d.layers.CCScene,int) -> transition
org.cocos2d.transitions.CCPageTurnTransition -> org.cocos2d.transitions.CCPageTurnTransition:
    boolean back_ -> back_
    org.cocos2d.transitions.CCPageTurnTransition transition(float,org.cocos2d.layers.CCScene,boolean) -> transition
    org.cocos2d.transitions.CCPageTurnTransition transition(float,org.cocos2d.layers.CCScene) -> transition
    void sceneOrder() -> sceneOrder
    void onEnter() -> onEnter
    org.cocos2d.actions.interval.CCIntervalAction action(org.cocos2d.types.ccGridSize) -> action
    org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene) -> transition
org.cocos2d.transitions.CCRadialCCWTransition -> org.cocos2d.transitions.CCRadialCCWTransition:
    int kSceneRadial -> kSceneRadial
    org.cocos2d.transitions.CCRadialCCWTransition transition(float,org.cocos2d.layers.CCScene) -> transition
    void sceneOrder() -> sceneOrder
    int radialType() -> radialType
    void onEnter() -> onEnter
    void onExit() -> onExit
    org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene) -> transition
org.cocos2d.transitions.CCRadialCWTransition -> org.cocos2d.transitions.o:
    int radialType() -> radialType
org.cocos2d.transitions.CCRotoZoomTransition -> org.cocos2d.transitions.m:
    void onEnter() -> onEnter
org.cocos2d.transitions.CCShrinkGrowTransition -> org.cocos2d.transitions.r:
    void onEnter() -> onEnter
org.cocos2d.transitions.CCSlideInBTransition -> org.cocos2d.transitions.h:
    void sceneOrder() -> sceneOrder
    void initScenes() -> initScenes
    org.cocos2d.actions.interval.CCIntervalAction action() -> action
org.cocos2d.transitions.CCSlideInLTransition -> org.cocos2d.transitions.CCSlideInLTransition:
    float ADJUST_FACTOR -> ADJUST_FACTOR
    org.cocos2d.transitions.CCSlideInLTransition transition(float,org.cocos2d.layers.CCScene) -> transition
    void onEnter() -> onEnter
    void sceneOrder() -> sceneOrder
    void initScenes() -> initScenes
    org.cocos2d.actions.interval.CCIntervalAction action() -> action
    org.cocos2d.actions.interval.CCIntervalAction easeAction(org.cocos2d.actions.interval.CCIntervalAction) -> easeAction
    org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene) -> transition
org.cocos2d.transitions.CCSlideInRTransition -> org.cocos2d.transitions.f:
    void sceneOrder() -> sceneOrder
    void initScenes() -> initScenes
    org.cocos2d.actions.interval.CCIntervalAction action() -> action
org.cocos2d.transitions.CCSlideInTTransition -> org.cocos2d.transitions.l:
    void sceneOrder() -> sceneOrder
    void initScenes() -> initScenes
    org.cocos2d.actions.interval.CCIntervalAction action() -> action
org.cocos2d.transitions.CCSplitColsTransition -> org.cocos2d.transitions.u:
    void onEnter() -> onEnter
    org.cocos2d.actions.interval.CCIntervalAction action() -> a
org.cocos2d.transitions.CCSplitRowsTransition -> org.cocos2d.transitions.k:
    org.cocos2d.actions.interval.CCIntervalAction action() -> a
org.cocos2d.transitions.CCTransitionScene -> org.cocos2d.transitions.CCTransitionScene:
    int kSceneFade -> kSceneFade
    org.cocos2d.layers.CCScene inScene -> inScene
    org.cocos2d.layers.CCScene outScene -> outScene
    float duration -> duration
    boolean inSceneOnTop -> inSceneOnTop
    boolean sendCleanupToScene -> sendCleanupToScene
    org.cocos2d.actions.UpdateCallback setNewSceneCallback -> setNewSceneCallback
    boolean $assertionsDisabled -> $assertionsDisabled
    org.cocos2d.transitions.CCTransitionScene transition(float,org.cocos2d.layers.CCScene) -> transition
    void sceneOrder() -> sceneOrder
    void draw(javax.microedition.khronos.opengles.GL10) -> draw
    void finish() -> finish
    void setNewScene(float) -> setNewScene
    void hideOutShowIn() -> hideOutShowIn
    void onEnter() -> onEnter
    void onExit() -> onExit
    void onEnterTransitionDidFinish() -> onEnterTransitionDidFinish
    void cleanup() -> cleanup
org.cocos2d.transitions.CCTransitionScene$1 -> org.cocos2d.transitions.CCTransitionScene$1:
    org.cocos2d.transitions.CCTransitionScene this$0 -> this$0
    void update(float) -> update
org.cocos2d.transitions.CCTransitionScene$TransitionWithInvalidSceneException -> org.cocos2d.transitions.CCTransitionScene$TransitionWithInvalidSceneException:
    long serialVersionUID -> serialVersionUID
org.cocos2d.transitions.CCTurnOffTilesTransition -> org.cocos2d.transitions.w:
    void sceneOrder() -> sceneOrder
    void onEnter() -> onEnter
org.cocos2d.transitions.CCZoomFlipAngularTransition -> org.cocos2d.transitions.y:
    void onEnter() -> onEnter
org.cocos2d.transitions.CCZoomFlipXTransition -> org.cocos2d.transitions.b:
    void onEnter() -> onEnter
org.cocos2d.transitions.CCZoomFlipYTransition -> org.cocos2d.transitions.g:
    void onEnter() -> onEnter
org.cocos2d.types.CCBezierConfig -> org.cocos2d.types.CCBezierConfig:
    org.cocos2d.types.CGPoint endPosition -> endPosition
    org.cocos2d.types.CGPoint controlPoint_1 -> controlPoint_1
    org.cocos2d.types.CGPoint controlPoint_2 -> controlPoint_2
    float bezierAt(float,float,float,float,float) -> bezierAt
org.cocos2d.types.CCPointSize -> org.cocos2d.types.CCPointSize:
    float size -> size
org.cocos2d.types.CCTexParams -> org.cocos2d.types.CCTexParams:
    int minFilter -> minFilter
    int magFilter -> magFilter
    int wrapS -> wrapS
    int wrapT -> wrapT
    org.cocos2d.types.CCTexParams copy() -> copy
    void set(int,int,int,int) -> set
    void set(org.cocos2d.types.CCTexParams) -> set
org.cocos2d.types.CCVertex3D -> org.cocos2d.types.CCVertex3D:
    float x -> x
    float y -> y
    float z -> z
org.cocos2d.types.CGAffineTransform -> org.cocos2d.types.CGAffineTransform:
    long serialVersionUID -> serialVersionUID
    int TYPE_IDENTITY -> TYPE_IDENTITY
    int TYPE_TRANSLATION -> TYPE_TRANSLATION
    int TYPE_UNIFORM_SCALE -> TYPE_UNIFORM_SCALE
    int TYPE_GENERAL_SCALE -> TYPE_GENERAL_SCALE
    int TYPE_QUADRANT_ROTATION -> TYPE_QUADRANT_ROTATION
    int TYPE_GENERAL_ROTATION -> TYPE_GENERAL_ROTATION
    int TYPE_GENERAL_TRANSFORM -> TYPE_GENERAL_TRANSFORM
    int TYPE_FLIP -> TYPE_FLIP
    int TYPE_MASK_SCALE -> TYPE_MASK_SCALE
    int TYPE_MASK_ROTATION -> TYPE_MASK_ROTATION
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    double ZERO -> ZERO
    double m00 -> m00
    double m10 -> m10
    double m01 -> m01
    double m11 -> m11
    double m02 -> m02
    double m12 -> m12
    int type -> type
    org.cocos2d.types.CGAffineTransform identity() -> identity
    org.cocos2d.types.CGAffineTransform make(double,double,double,double,double,double) -> make
    int getType() -> getType
    double getScaleX() -> getScaleX
    double getScaleY() -> getScaleY
    double getShearX() -> getShearX
    double getShearY() -> getShearY
    double getTranslateX() -> getTranslateX
    double getTranslateY() -> getTranslateY
    boolean isIdentity() -> isIdentity
    void getMatrix(double[]) -> getMatrix
    double getDeterminant() -> getDeterminant
    void setTransform(double,double,double,double,double,double) -> setTransform
    void setTransform(org.cocos2d.types.CGAffineTransform) -> setTransform
    void setToIdentity() -> setToIdentity
    void setToTranslation(double,double) -> setToTranslation
    void setToScale(double,double) -> setToScale
    void setToShear(double,double) -> setToShear
    void setToRotation(double) -> setToRotation
    void setToRotation(double,double,double) -> setToRotation
    org.cocos2d.types.CGAffineTransform makeTranslation(double,double) -> makeTranslation
    org.cocos2d.types.CGAffineTransform makeScale(double,double) -> makeScale
    org.cocos2d.types.CGAffineTransform makeShear(double,double) -> makeShear
    org.cocos2d.types.CGAffineTransform makeRotation(double) -> makeRotation
    org.cocos2d.types.CGAffineTransform makeRotation(double,double,double) -> makeRotation
    org.cocos2d.types.CGAffineTransform getTransformTranslate(double,double) -> getTransformTranslate
    org.cocos2d.types.CGAffineTransform getTransformScale(double,double) -> getTransformScale
    void shear(double,double) -> shear
    org.cocos2d.types.CGAffineTransform getTransformRotate(double) -> getTransformRotate
    void rotate(double,double,double) -> rotate
    org.cocos2d.types.CGAffineTransform multiply(org.cocos2d.types.CGAffineTransform,org.cocos2d.types.CGAffineTransform) -> multiply
    org.cocos2d.types.CGAffineTransform getTransformConcat(org.cocos2d.types.CGAffineTransform) -> getTransformConcat
    org.cocos2d.types.CGAffineTransform preConcatenate(org.cocos2d.types.CGAffineTransform) -> preConcatenate
    org.cocos2d.types.CGAffineTransform getTransformInvert() -> getTransformInvert
    org.cocos2d.types.CGPoint applyTransform(org.cocos2d.types.CGPoint) -> applyTransform
    void transform(org.cocos2d.types.CGPoint[],int,org.cocos2d.types.CGPoint[],int,int) -> transform
    void transform(double[],int,double[],int,int) -> transform
    void transform(float[],int,float[],int,int) -> transform
    void transform(float[],int,double[],int,int) -> transform
    void transform(double[],int,float[],int,int) -> transform
    org.cocos2d.types.CGPoint deltaTransform(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> deltaTransform
    void deltaTransform(double[],int,double[],int,int) -> deltaTransform
    org.cocos2d.types.CGPoint inverseTransform(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> inverseTransform
    void inverseTransform(double[],int,double[],int,int) -> inverseTransform
    void set(double,double,double,double,double,double) -> set
    void translate(double,double) -> translate
    void rotate(double) -> rotate
    void scale(double,double) -> scale
    void multiply(org.cocos2d.types.CGAffineTransform) -> multiply
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    void CGAffineToGL(org.cocos2d.types.CGAffineTransform,float[]) -> CGAffineToGL
    void GLToCGAffine(float[],org.cocos2d.types.CGAffineTransform) -> GLToCGAffine
org.cocos2d.types.CGPoint -> org.cocos2d.types.CGPoint:
    float kCGPointEpsilon -> kCGPointEpsilon
    float x -> x
    float y -> y
    org.cocos2d.types.CGPoint ZERO_POINT -> ZERO_POINT
    org.cocos2d.types.CGPoint getZero() -> getZero
    org.cocos2d.types.CGPoint zero() -> zero
    org.cocos2d.types.CGPoint make(float,float) -> make
    void set(float,float) -> set
    void set(org.cocos2d.types.CGPoint) -> set
    java.lang.String toString() -> toString
    boolean equalToPoint(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> equalToPoint
    org.cocos2d.types.CGPoint applyAffineTransform(org.cocos2d.types.CGPoint,org.cocos2d.types.CGAffineTransform) -> applyAffineTransform
    org.cocos2d.types.CGPoint ccp(float,float) -> ccp
    org.cocos2d.types.CGPoint ccpNeg(org.cocos2d.types.CGPoint) -> ccpNeg
    org.cocos2d.types.CGPoint ccpAdd(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpAdd
    org.cocos2d.types.CGPoint ccpSub(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpSub
    org.cocos2d.types.CGPoint ccpMult(org.cocos2d.types.CGPoint,float) -> ccpMult
    org.cocos2d.types.CGPoint ccpMidpoint(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpMidpoint
    float ccpDot(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpDot
    float ccpCross(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpCross
    org.cocos2d.types.CGPoint ccpPerp(org.cocos2d.types.CGPoint) -> ccpPerp
    org.cocos2d.types.CGPoint ccpRPerp(org.cocos2d.types.CGPoint) -> ccpRPerp
    org.cocos2d.types.CGPoint ccpProject(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpProject
    org.cocos2d.types.CGPoint ccpRotate(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpRotate
    org.cocos2d.types.CGPoint ccpUnrotate(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpUnrotate
    float ccpLengthSQ(org.cocos2d.types.CGPoint) -> ccpLengthSQ
    float ccpLength(org.cocos2d.types.CGPoint) -> ccpLength
    float ccpDistance(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpDistance
    org.cocos2d.types.CGPoint ccpNormalize(org.cocos2d.types.CGPoint) -> ccpNormalize
    org.cocos2d.types.CGPoint ccpForAngle(float) -> ccpForAngle
    float ccpToAngle(org.cocos2d.types.CGPoint) -> ccpToAngle
    float ccpCalcRotate(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpCalcRotate
    float ccpAngle(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpAngle
    org.cocos2d.types.CGPoint ccpLerp(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,float) -> ccpLerp
    float clampf(float,float,float) -> clampf
    org.cocos2d.types.CGPoint ccpClamp(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpClamp
    org.cocos2d.types.CGPoint ccpFromSize(org.cocos2d.types.CGSize) -> ccpFromSize
    boolean ccpFuzzyEqual(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,float) -> ccpFuzzyEqual
    org.cocos2d.types.CGPoint ccpCompMult(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpCompMult
    float ccpAngleSigned(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpAngleSigned
    org.cocos2d.types.CGPoint ccpRotateByAngle(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,float) -> ccpRotateByAngle
    boolean ccpLineIntersect(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> ccpLineIntersect
org.cocos2d.types.CGRect -> org.cocos2d.types.CGRect:
    org.cocos2d.types.CGPoint origin -> origin
    org.cocos2d.types.CGSize size -> size
    org.cocos2d.types.CGRect ZERO_RECT -> ZERO_RECT
    org.cocos2d.types.CGRect sRect -> sRect
    org.cocos2d.types.CGRect rRect -> rRect
    int[] $SWITCH_TABLE$org$cocos2d$types$CGRect$Edge -> $SWITCH_TABLE$org$cocos2d$types$CGRect$Edge
    org.cocos2d.types.CGRect getZero() -> getZero
    org.cocos2d.types.CGRect zero() -> zero
    org.cocos2d.types.CGRect make(org.cocos2d.types.CGPoint,org.cocos2d.types.CGSize) -> make
    org.cocos2d.types.CGRect make(float,float,float,float) -> make
    org.cocos2d.types.CGRect make(org.cocos2d.types.CGRect) -> make
    void set(org.cocos2d.types.CGRect) -> set
    void set(float,float,float,float) -> set
    boolean contains(float,float) -> contains
    java.lang.String toString() -> toString
    boolean equalToRect(org.cocos2d.types.CGRect,org.cocos2d.types.CGRect) -> equalToRect
    boolean containsPoint(org.cocos2d.types.CGRect,org.cocos2d.types.CGPoint) -> containsPoint
    boolean containsRect(org.cocos2d.types.CGRect,org.cocos2d.types.CGRect) -> containsRect
    boolean intersects(org.cocos2d.types.CGRect,org.cocos2d.types.CGRect) -> intersects
    org.cocos2d.types.CGRect applyAffineTransform(org.cocos2d.types.CGRect,org.cocos2d.types.CGAffineTransform) -> applyAffineTransform
    float maxX(org.cocos2d.types.CGRect) -> maxX
    float maxY(org.cocos2d.types.CGRect) -> maxY
    float midX(org.cocos2d.types.CGRect) -> midX
    float midY(org.cocos2d.types.CGRect) -> midY
    float minX(org.cocos2d.types.CGRect) -> minX
    float minY(org.cocos2d.types.CGRect) -> minY
    float width(org.cocos2d.types.CGRect) -> width
    float height(org.cocos2d.types.CGRect) -> height
    boolean isEmptyRect(org.cocos2d.types.CGRect) -> isEmptyRect
    void divideRect(org.cocos2d.types.CGRect,org.cocos2d.types.CGRect[],org.cocos2d.types.CGRect[],float,org.cocos2d.types.CGRect$Edge) -> divideRect
    int[] $SWITCH_TABLE$org$cocos2d$types$CGRect$Edge() -> $SWITCH_TABLE$org$cocos2d$types$CGRect$Edge
org.cocos2d.types.CGRect$Edge -> org.cocos2d.types.CGRect$Edge:
    org.cocos2d.types.CGRect$Edge MinXEdge -> MinXEdge
    org.cocos2d.types.CGRect$Edge MinYEdge -> MinYEdge
    org.cocos2d.types.CGRect$Edge MaxXEdge -> MaxXEdge
    org.cocos2d.types.CGRect$Edge MaxYEdge -> MaxYEdge
    org.cocos2d.types.CGRect$Edge[] ENUM$VALUES -> ENUM$VALUES
    org.cocos2d.types.CGRect$Edge[] values() -> values
    org.cocos2d.types.CGRect$Edge valueOf(java.lang.String) -> valueOf
org.cocos2d.types.CGSize -> org.cocos2d.types.CGSize:
    float width -> width
    float height -> height
    org.cocos2d.types.CGSize ZERO_SIZE -> ZERO_SIZE
    org.cocos2d.types.CGSize make(float,float) -> make
    org.cocos2d.types.CGSize zero() -> zero
    void set(org.cocos2d.types.CGSize) -> set
    void set(float,float) -> set
    org.cocos2d.types.CGSize getZero() -> getZero
    float getWidth() -> getWidth
    float getHeight() -> getHeight
    boolean equalToSize(org.cocos2d.types.CGSize,org.cocos2d.types.CGSize) -> equalToSize
    java.lang.String toString() -> toString
org.cocos2d.types.HashCode -> org.cocos2d.types.HashCode:
    org.cocos2d.types.HashCode hashCode -> hashCode
    int hashCode() -> hashCode
    org.cocos2d.types.HashCode append(int) -> append
    org.cocos2d.types.HashCode append(long) -> append
    org.cocos2d.types.HashCode append(float) -> append
    org.cocos2d.types.HashCode append(double) -> append
    org.cocos2d.types.HashCode append(boolean) -> append
    org.cocos2d.types.HashCode append(java.lang.Object) -> append
org.cocos2d.types.NoninvertibleTransformException -> org.cocos2d.types.NoninvertibleTransformException:
    long serialVersionUID -> serialVersionUID
org.cocos2d.types.ccBlendFunc -> org.cocos2d.types.ccBlendFunc:
    int src -> src
    int dst -> dst
    void setSrc(int) -> setSrc
    int getSrc() -> getSrc
    void setDst(int) -> setDst
    int getDst() -> getDst
    java.lang.String toString() -> toString
org.cocos2d.types.ccColor3B -> org.cocos2d.types.ccColor3B:
    int size -> size
    org.cocos2d.types.ccColor3B ccWHITE -> ccWHITE
    org.cocos2d.types.ccColor3B ccYELLOW -> ccYELLOW
    org.cocos2d.types.ccColor3B ccBLUE -> ccBLUE
    org.cocos2d.types.ccColor3B ccGREEN -> ccGREEN
    org.cocos2d.types.ccColor3B ccRED -> ccRED
    org.cocos2d.types.ccColor3B ccMAGENTA -> ccMAGENTA
    org.cocos2d.types.ccColor3B ccBLACK -> ccBLACK
    org.cocos2d.types.ccColor3B ccORANGE -> ccORANGE
    org.cocos2d.types.ccColor3B ccGRAY -> ccGRAY
    int r -> r
    int g -> g
    int b -> b
    void set(org.cocos2d.types.ccColor3B) -> set
    byte[] toByteArray() -> toByteArray
    org.cocos2d.types.ccColor3B ccc3(int,int,int) -> ccc3
    java.lang.String toString() -> toString
org.cocos2d.types.ccColor4B -> org.cocos2d.types.ccColor4B:
    int size -> size
    int r -> r
    int g -> g
    int b -> b
    int a -> a
    byte[] toByteArray() -> toByteArray
    float[] toFloatArray() -> toFloatArray
    org.cocos2d.types.ccColor4B ccc4(int,int,int,int) -> ccc4
    java.lang.String toString() -> toString
org.cocos2d.types.ccColor4F -> org.cocos2d.types.ccColor4F:
    float r -> r
    float g -> g
    float b -> b
    float a -> a
    float[] toFloatArray() -> toFloatArray
    org.cocos2d.types.ccColor4F ccc4FFromccc3B(org.cocos2d.types.ccColor3B) -> ccc4FFromccc3B
    org.cocos2d.types.ccColor4F ccc4FFromccc4B(org.cocos2d.types.ccColor4B) -> ccc4FFromccc4B
    boolean ccc4FEqual(org.cocos2d.types.ccColor4F,org.cocos2d.types.ccColor4F) -> ccc4FEqual
    java.lang.String toString() -> toString
org.cocos2d.types.ccGridSize -> org.cocos2d.types.ccGridSize:
    int x -> x
    int y -> y
    org.cocos2d.types.ccGridSize ccg(int,int) -> ccg
org.cocos2d.types.ccPointSprite -> org.cocos2d.types.ccPointSprite:
    float x -> x
    float y -> y
    org.cocos2d.types.ccColor4F colors -> colors
    int spriteSize -> spriteSize
org.cocos2d.types.ccQuad2 -> org.cocos2d.types.ccQuad2:
    int size -> size
    float tl_x -> tl_x
    float tl_y -> tl_y
    float tr_x -> tr_x
    float tr_y -> tr_y
    float bl_x -> bl_x
    float bl_y -> bl_y
    float br_x -> br_x
    float br_y -> br_y
    float[] toFloatArray() -> toFloatArray
    java.lang.String toString() -> toString
org.cocos2d.types.ccQuad3 -> org.cocos2d.types.ccQuad3:
    int size -> size
    float bl_x -> bl_x
    float bl_y -> bl_y
    float bl_z -> bl_z
    float br_x -> br_x
    float br_y -> br_y
    float br_z -> br_z
    float tl_x -> tl_x
    float tl_y -> tl_y
    float tl_z -> tl_z
    float tr_x -> tr_x
    float tr_y -> tr_y
    float tr_z -> tr_z
    float[] toFloatArray() -> toFloatArray
    java.lang.String toString() -> toString
org.cocos2d.types.ccTex2F -> org.cocos2d.types.ccTex2F:
    float u -> u
    float v -> v
    float[] toFloatArray() -> toFloatArray
org.cocos2d.types.ccV2F_C4F_T2F -> org.cocos2d.types.ccV2F_C4F_T2F:
    org.cocos2d.types.CGPoint vertices -> vertices
    org.cocos2d.types.ccColor4F colors -> colors
    org.cocos2d.types.ccTex2F texCoords -> texCoords
org.cocos2d.types.ccV2F_C4F_T2F_Quad -> org.cocos2d.types.ccV2F_C4F_T2F_Quad:
    org.cocos2d.types.ccV2F_C4F_T2F bl -> bl
    org.cocos2d.types.ccV2F_C4F_T2F br -> br
    org.cocos2d.types.ccV2F_C4F_T2F tl -> tl
    org.cocos2d.types.ccV2F_C4F_T2F tr -> tr
org.cocos2d.types.ccV3F_C4B_T2F -> org.cocos2d.types.ccV3F_C4B_T2F:
    org.cocos2d.types.ccVertex3F vertices -> vertices
    org.cocos2d.types.ccColor4B colors -> colors
    org.cocos2d.types.ccTex2F texCoords -> texCoords
org.cocos2d.types.ccV3F_C4B_T2F_Quad -> org.cocos2d.types.ccV3F_C4B_T2F_Quad:
    org.cocos2d.types.ccV3F_C4B_T2F tl -> tl
    org.cocos2d.types.ccV3F_C4B_T2F bl -> bl
    org.cocos2d.types.ccV3F_C4B_T2F tr -> tr
    org.cocos2d.types.ccV3F_C4B_T2F br -> br
org.cocos2d.types.ccVertex2F -> org.cocos2d.types.ccVertex2F:
    org.cocos2d.types.CGPoint pnt -> pnt
    void setCGPoint(org.cocos2d.types.CGPoint) -> setCGPoint
org.cocos2d.types.ccVertex3F -> org.cocos2d.types.ccVertex3F:
    float x -> x
    float y -> y
    float z -> z
org.cocos2d.types.util.CGPointUtil -> org.cocos2d.types.util.b:
    void mult(org.cocos2d.types.CGPoint,float) -> a
    void applyAffineTransform(float,float,org.cocos2d.types.CGAffineTransform,org.cocos2d.types.CGPoint) -> a
    void zero(org.cocos2d.types.CGPoint) -> a
    void add(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> a
    void sub(org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint,org.cocos2d.types.CGPoint) -> a
org.cocos2d.types.util.PoolHolder -> org.cocos2d.types.util.PoolHolder:
    java.lang.ThreadLocal instance -> instance
    org.cocos2d.utils.pool.ObjectPool objectPool -> objectPool
    org.cocos2d.utils.pool.OneClassPool pointPool -> pointPool
    org.cocos2d.utils.pool.OneClassPool ccQuad2Pool -> ccQuad2Pool
    org.cocos2d.utils.pool.OneClassPool ccQuad3Pool -> ccQuad3Pool
    org.cocos2d.utils.pool.OneClassPool rectPool -> rectPool
    org.cocos2d.utils.pool.OneClassPool affineTransformPool -> affineTransformPool
    org.cocos2d.types.util.PoolHolder getInstance() -> getInstance
    org.cocos2d.utils.pool.ObjectPool getObjectPool() -> getObjectPool
    org.cocos2d.utils.pool.OneClassPool getCGPointPool() -> getCGPointPool
    org.cocos2d.utils.pool.OneClassPool getccQuad2Pool() -> getccQuad2Pool
    org.cocos2d.utils.pool.OneClassPool getccQuad3Pool() -> getccQuad3Pool
    org.cocos2d.utils.pool.OneClassPool getCGRectPool() -> getCGRectPool
    org.cocos2d.utils.pool.OneClassPool getCGAffineTransformPool() -> getCGAffineTransformPool
org.cocos2d.types.util.PoolHolder$1 -> org.cocos2d.types.util.c:
    java.lang.Object initialValue() -> initialValue
org.cocos2d.types.util.PoolHolder$2 -> org.cocos2d.types.util.PoolHolder$2:
    org.cocos2d.types.util.PoolHolder this$0 -> this$0
    org.cocos2d.types.CGPoint allocate() -> allocate
    java.lang.Object allocate() -> allocate
org.cocos2d.types.util.PoolHolder$3 -> org.cocos2d.types.util.PoolHolder$3:
    org.cocos2d.types.util.PoolHolder this$0 -> this$0
    org.cocos2d.types.ccQuad2 allocate() -> allocate
    java.lang.Object allocate() -> allocate
org.cocos2d.types.util.PoolHolder$4 -> org.cocos2d.types.util.PoolHolder$4:
    org.cocos2d.types.util.PoolHolder this$0 -> this$0
    org.cocos2d.types.ccQuad3 allocate() -> allocate
    java.lang.Object allocate() -> allocate
org.cocos2d.types.util.PoolHolder$5 -> org.cocos2d.types.util.PoolHolder$5:
    org.cocos2d.types.util.PoolHolder this$0 -> this$0
    org.cocos2d.types.CGRect allocate() -> allocate
    java.lang.Object allocate() -> allocate
org.cocos2d.types.util.PoolHolder$6 -> org.cocos2d.types.util.PoolHolder$6:
    org.cocos2d.types.util.PoolHolder this$0 -> this$0
    org.cocos2d.types.CGAffineTransform allocate() -> allocate
    java.lang.Object allocate() -> allocate
org.cocos2d.types.util.ccColor4FUtil -> org.cocos2d.types.util.a:
    void set(org.cocos2d.types.ccColor4F,float,float,float,float) -> a
org.cocos2d.utils.Base64 -> org.cocos2d.utils.Base64:
    int NO_OPTIONS -> NO_OPTIONS
    int ENCODE -> ENCODE
    int DECODE -> DECODE
    int GZIP -> GZIP
    int DONT_GUNZIP -> DONT_GUNZIP
    int DO_BREAK_LINES -> DO_BREAK_LINES
    int URL_SAFE -> URL_SAFE
    int ORDERED -> ORDERED
    int MAX_LINE_LENGTH -> MAX_LINE_LENGTH
    byte EQUALS_SIGN -> EQUALS_SIGN
    byte NEW_LINE -> NEW_LINE
    java.lang.String PREFERRED_ENCODING -> PREFERRED_ENCODING
    byte WHITE_SPACE_ENC -> WHITE_SPACE_ENC
    byte EQUALS_SIGN_ENC -> EQUALS_SIGN_ENC
    byte[] _STANDARD_ALPHABET -> _STANDARD_ALPHABET
    byte[] _STANDARD_DECODABET -> _STANDARD_DECODABET
    byte[] _URL_SAFE_ALPHABET -> _URL_SAFE_ALPHABET
    byte[] _URL_SAFE_DECODABET -> _URL_SAFE_DECODABET
    byte[] _ORDERED_ALPHABET -> _ORDERED_ALPHABET
    byte[] _ORDERED_DECODABET -> _ORDERED_DECODABET
    boolean $assertionsDisabled -> $assertionsDisabled
    byte[] getAlphabet(int) -> getAlphabet
    byte[] getDecodabet(int) -> getDecodabet
    byte[] encode3to4(byte[],byte[],int,int) -> encode3to4
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> encode3to4
    void encode(java.nio.ByteBuffer,java.nio.ByteBuffer) -> encode
    void encode(java.nio.ByteBuffer,java.nio.CharBuffer) -> encode
    java.lang.String encodeObject(java.io.Serializable) -> encodeObject
    java.lang.String encodeObject(java.io.Serializable,int) -> encodeObject
    java.lang.String encodeBytes(byte[]) -> encodeBytes
    java.lang.String encodeBytes(byte[],int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int) -> encodeBytes
    java.lang.String encodeBytes(byte[],int,int,int) -> encodeBytes
    byte[] encodeBytesToBytes(byte[]) -> encodeBytesToBytes
    byte[] encodeBytesToBytes(byte[],int,int,int) -> encodeBytesToBytes
    int decode4to3(byte[],int,byte[],int,int) -> decode4to3
    byte[] decode(byte[]) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(java.lang.String,int) -> decode
    java.lang.Object decodeToObject(java.lang.String) -> decodeToObject
    java.lang.Object decodeToObject(java.lang.String,int,java.lang.ClassLoader) -> decodeToObject
    void encodeToFile(byte[],java.lang.String) -> encodeToFile
    void decodeToFile(java.lang.String,java.lang.String) -> decodeToFile
    byte[] decodeFromFile(java.lang.String) -> decodeFromFile
    java.lang.String encodeFromFile(java.lang.String) -> encodeFromFile
    void encodeFileToFile(java.lang.String,java.lang.String) -> encodeFileToFile
    void decodeFileToFile(java.lang.String,java.lang.String) -> decodeFileToFile
    byte[] access$0(int) -> access$0
    byte[] access$1(byte[],int,int,byte[],int,int) -> access$1
    int access$2(byte[],int,byte[],int,int) -> access$2
    byte[] access$3(byte[],byte[],int,int) -> access$3
org.cocos2d.utils.Base64$1 -> org.cocos2d.utils.Base64$1:
    java.lang.ClassLoader val$loader -> val$loader
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
org.cocos2d.utils.Base64$InputStream -> org.cocos2d.utils.Base64$InputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int numSigBytes -> numSigBytes
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    int options -> options
    byte[] decodabet -> decodabet
    int read() -> read
    int read(byte[],int,int) -> read
org.cocos2d.utils.Base64$OutputStream -> org.cocos2d.utils.Base64$OutputStream:
    boolean encode -> encode
    int position -> position
    byte[] buffer -> buffer
    int bufferLength -> bufferLength
    int lineLength -> lineLength
    boolean breakLines -> breakLines
    byte[] b4 -> b4
    boolean suspendEncoding -> suspendEncoding
    int options -> options
    byte[] decodabet -> decodabet
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flushBase64() -> flushBase64
    void close() -> close
    void suspendEncoding() -> suspendEncoding
    void resumeEncoding() -> resumeEncoding
org.cocos2d.utils.BufferProvider -> org.cocos2d.utils.BufferProvider:
    int ALLOCATION_SIZE -> ALLOCATION_SIZE
    java.nio.ByteBuffer currentBuffer -> currentBuffer
    org.cocos2d.utils.BufferProvider global_synced -> global_synced
    java.nio.ByteBuffer allocate(int) -> allocate
    java.nio.ByteBuffer allocateDirect(int) -> allocateDirect
    void drawQuads(javax.microedition.khronos.opengles.GL10,org.cocos2d.utils.FastFloatBuffer,org.cocos2d.utils.FastFloatBuffer) -> drawQuads
    void fillFloatBuffer(org.cocos2d.utils.FastFloatBuffer,float[]) -> fillFloatBuffer
    org.cocos2d.utils.FastFloatBuffer makeFloatBuffer(float[]) -> makeFloatBuffer
    org.cocos2d.utils.FastFloatBuffer createFloatBuffer(int) -> createFloatBuffer
    java.nio.ByteBuffer createByteBuffer(int) -> createByteBuffer
    java.nio.ShortBuffer createShortBuffer(int) -> createShortBuffer
    java.nio.ByteBuffer bufferFromFile(java.lang.String) -> bufferFromFile
org.cocos2d.utils.CCFormatter -> org.cocos2d.utils.CCFormatter:
    java.lang.StringBuilder sb -> sb
    java.util.Formatter formatter -> formatter
    java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    int swapIntToLittleEndian(int) -> swapIntToLittleEndian
org.cocos2d.utils.FastFloatBuffer -> org.cocos2d.utils.FastFloatBuffer:
    java.nio.ByteBuffer bytes -> bytes
    java.nio.FloatBuffer floats -> floats
    java.nio.IntBuffer ints -> ints
    int bufferID -> bufferID
    boolean loaded -> loaded
    java.lang.ref.SoftReference intArray -> intArray
    org.cocos2d.utils.FastFloatBuffer createBuffer(float[]) -> createBuffer
    org.cocos2d.utils.FastFloatBuffer createBuffer(java.nio.ByteBuffer) -> createBuffer
    void flip() -> flip
    org.cocos2d.utils.FastFloatBuffer put(float) -> put
    org.cocos2d.utils.FastFloatBuffer put(float[]) -> put
    org.cocos2d.utils.FastFloatBuffer put(int[]) -> put
    int[] convert(float[]) -> convert
    org.cocos2d.utils.FastFloatBuffer put(org.cocos2d.utils.FastFloatBuffer) -> put
    int capacity() -> capacity
    int position() -> position
    void position(int) -> position
    java.nio.FloatBuffer slice() -> slice
    int remaining() -> remaining
    int limit() -> limit
    void limit(int) -> limit
    void clear() -> clear
    void setBufferID(int) -> setBufferID
    int getBufferID() -> getBufferID
    boolean isLoaded() -> isLoaded
    void setLoaded(boolean) -> setLoaded
    void put(int,float) -> put
    float get() -> get
    float get(int) -> get
    void get(float[],int,int) -> get
    void put(float[],int,int) -> put
    void rewind() -> rewind
org.cocos2d.utils.GeometryUtil -> org.cocos2d.utils.a:
    org.cocos2d.types.CGPoint CGPointFromString(java.lang.String) -> a
    org.cocos2d.types.CGSize CGSizeFromString(java.lang.String) -> b
    org.cocos2d.types.CGRect CGRectFromString(java.lang.String) -> c
org.cocos2d.utils.PlistParser -> org.cocos2d.utils.PlistParser:
    int TYPE_UNKNOWN -> TYPE_UNKNOWN
    int TYPE_KEY -> TYPE_KEY
    int TYPE_STRING -> TYPE_STRING
    int TYPE_INTEGER -> TYPE_INTEGER
    int TYPE_DATA -> TYPE_DATA
    int TYPE_DATE -> TYPE_DATE
    int TYPE_REAL -> TYPE_REAL
    java.lang.String EL_KEY -> EL_KEY
    java.lang.String EL_STRING -> EL_STRING
    java.lang.String EL_INTEGER -> EL_INTEGER
    java.lang.String EL_DATA -> EL_DATA
    java.lang.String EL_DATE -> EL_DATE
    java.lang.String EL_REAL -> EL_REAL
    java.lang.String EL_TRUE -> EL_TRUE
    java.lang.String EL_FALSE -> EL_FALSE
    java.lang.String EL_DICT -> EL_DICT
    java.lang.String EL_ARRAY -> EL_ARRAY
    int COLL_UNKNOWN -> COLL_UNKNOWN
    int COLL_DICT -> COLL_DICT
    int COLL_ARRAY -> COLL_ARRAY
    java.lang.Object rootDict -> rootDict
    java.lang.String currentKey -> currentKey
    int currentElement -> currentElement
    int currentCollectionType -> currentCollectionType
    java.lang.Object currentCollection -> currentCollection
    java.util.ArrayList depthStack -> depthStack
    java.text.SimpleDateFormat dateFormat -> dateFormat
    java.lang.StringBuilder characterData -> characterData
    java.util.HashMap parse(java.lang.String) -> parse
    java.util.HashMap parse(java.io.InputStream) -> parse
    java.util.ArrayList parseArray(java.lang.String) -> parseArray
    java.util.ArrayList parseArray(java.io.InputStream) -> parseArray
    java.lang.Object parsePlist(java.io.InputStream) -> parsePlist
    void setupCurrentCollection(java.lang.Object) -> setupCurrentCollection
    void depthUp(java.lang.Object) -> depthUp
    void depthDown() -> depthDown
    void addToCollection(java.lang.Object) -> addToCollection
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
org.cocos2d.utils.ZwoptexParser -> org.cocos2d.utils.ZwoptexParser:
    java.util.HashMap frames -> frames
    java.util.HashMap metadata -> metadata
    java.lang.Integer dict_depth -> dict_depth
    java.lang.Boolean mode_set_key -> mode_set_key
    java.lang.Boolean mode_set_string -> mode_set_string
    java.lang.Boolean mode_set_integer -> mode_set_integer
    java.lang.Boolean mode_set_real -> mode_set_real
    java.lang.String section -> section
    java.lang.String metadata_key -> metadata_key
    java.lang.String f_key -> f_key
    java.lang.String f_filename -> f_filename
    org.cocos2d.types.CGRect f_frame -> f_frame
    org.cocos2d.types.CGPoint f_offset -> f_offset
    java.lang.Boolean f_rotated -> f_rotated
    org.cocos2d.types.CGSize f_source_size -> f_source_size
    org.cocos2d.types.CGSize f_spriteSize -> f_spriteSize
    org.cocos2d.types.CGPoint f_spriteOffset -> f_spriteOffset
    org.cocos2d.types.CGSize f_spriteSourceSize -> f_spriteSourceSize
    org.cocos2d.types.CGRect f_textureRect -> f_textureRect
    java.lang.Boolean f_textureRotated -> f_textureRotated
    java.lang.Integer f_format -> f_format
    int tmpX -> tmpX
    int tmpY -> tmpY
    int tmpWidth -> tmpWidth
    int tmpHeight -> tmpHeight
    float tmpOffsetX -> tmpOffsetX
    float tmpOffsetY -> tmpOffsetY
    java.util.HashMap parseZwoptex(java.lang.String) -> parseZwoptex
    java.util.HashMap getResults() -> getResults
    void startDocument() -> startDocument
    void frameReset() -> frameReset
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    org.cocos2d.types.CGPoint parseCoords(java.lang.String) -> parseCoords
    org.cocos2d.types.CGSize parseCoordsSize(java.lang.String) -> parseCoordsSize
    org.cocos2d.types.CGRect parseCoordsRect(java.lang.String) -> parseCoordsRect
org.cocos2d.utils.collections.ConcArrayStack -> org.cocos2d.utils.collections.ConcArrayStack:
    java.util.ArrayList array -> array
    java.util.concurrent.locks.ReentrantLock lock -> lock
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue -> org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue:
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater tailUpdater -> tailUpdater
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater headUpdater -> headUpdater
    org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node head -> head
    org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node tail -> tail
    org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node freeNode -> freeNode
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater freeNodeUpdater -> freeNodeUpdater
    boolean casTail(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node,org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node) -> casTail
    boolean casHead(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node,org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node) -> casHead
    boolean casNewNode(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node,org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node) -> casNewNode
    org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node newNode() -> newNode
    void freeNode(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node) -> freeNode
    void push(java.lang.Object) -> push
    java.lang.Object poll() -> poll
org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node -> org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node:
    java.lang.Object item -> item
    org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node next -> next
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater nextUpdater -> nextUpdater
    boolean casNext(org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node,org.cocos2d.utils.collections.ConcNodeCachingLinkedQueue$Node) -> casNext
org.cocos2d.utils.collections.ConcNodeCachingStack -> org.cocos2d.utils.collections.ConcNodeCachingStack:
    org.cocos2d.utils.collections.ConcNodeCachingStack$Node head -> head
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater headUpdater -> headUpdater
    org.cocos2d.utils.collections.ConcNodeCachingStack$Node freeNode -> freeNode
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater freeNodeUpdater -> freeNodeUpdater
    boolean casHead(org.cocos2d.utils.collections.ConcNodeCachingStack$Node,org.cocos2d.utils.collections.ConcNodeCachingStack$Node) -> casHead
    boolean casNewNode(org.cocos2d.utils.collections.ConcNodeCachingStack$Node,org.cocos2d.utils.collections.ConcNodeCachingStack$Node) -> casNewNode
    org.cocos2d.utils.collections.ConcNodeCachingStack$Node newNode() -> newNode
    void freeNode(org.cocos2d.utils.collections.ConcNodeCachingStack$Node) -> freeNode
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
org.cocos2d.utils.collections.ConcNodeCachingStack$Node -> org.cocos2d.utils.collections.ConcNodeCachingStack$Node:
    java.lang.Object item -> item
    org.cocos2d.utils.collections.ConcNodeCachingStack$Node next -> next
org.cocos2d.utils.collections.ConcurrentArrayHashMap -> org.cocos2d.utils.collections.ConcurrentArrayHashMap:
    java.util.ArrayList array -> array
    java.util.HashMap map -> map
    org.cocos2d.utils.pool.OneClassPool pool -> pool
    void put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry firstValue() -> firstValue
    org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry nextValue(org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry) -> nextValue
org.cocos2d.utils.collections.ConcurrentArrayHashMap$1 -> org.cocos2d.utils.collections.ConcurrentArrayHashMap$1:
    org.cocos2d.utils.collections.ConcurrentArrayHashMap this$0 -> this$0
    org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry allocate() -> allocate
    java.lang.Object allocate() -> allocate
org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry -> org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    org.cocos2d.utils.collections.ConcurrentArrayHashMap$Entry next -> next
    org.cocos2d.utils.collections.ConcurrentArrayHashMap this$0 -> this$0
    java.lang.Object getValue() -> getValue
org.cocos2d.utils.collections.IntMap -> org.cocos2d.utils.collections.IntMap:
    org.cocos2d.utils.collections.IntMap$Entry[] table -> table
    float loadFactor -> loadFactor
    int size -> size
    int mask -> mask
    int capacity -> capacity
    int threshold -> threshold
    org.cocos2d.utils.collections.IntMap clone() -> clone
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsKey(int) -> containsKey
    java.lang.Object get(int) -> get
    java.lang.Object put(int,java.lang.Object) -> put
    java.lang.Object remove(int) -> remove
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object clone() -> clone
    org.cocos2d.utils.collections.IntMap$Entry[] access$1(org.cocos2d.utils.collections.IntMap) -> access$1
    int access$2(org.cocos2d.utils.collections.IntMap) -> access$2
org.cocos2d.utils.collections.IntMap$Entry -> org.cocos2d.utils.collections.IntMap$Entry:
    int key -> key
    java.lang.Object value -> value
    org.cocos2d.utils.collections.IntMap$Entry next -> next
    int getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.String toString() -> toString
    org.cocos2d.utils.collections.IntMap$Entry clone() -> clone
    java.lang.Object clone() -> clone
org.cocos2d.utils.collections.IntMap$IntMapIterator -> org.cocos2d.utils.collections.IntMap$IntMapIterator:
    org.cocos2d.utils.collections.IntMap$Entry cur -> cur
    int idx -> idx
    int el -> el
    org.cocos2d.utils.collections.IntMap this$0 -> this$0
    boolean hasNext() -> hasNext
    org.cocos2d.utils.collections.IntMap$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.cocos2d.utils.javolution.MathLib -> org.cocos2d.utils.javolution.MathLib:
    java.util.Random RANDOM -> RANDOM
    byte[] BIT_LENGTH -> BIT_LENGTH
    long MASK_63 -> MASK_63
    long MASK_32 -> MASK_32
    int[] POW5_INT -> POW5_INT
    double LOG2_DIV_LOG10 -> LOG2_DIV_LOG10
    double E -> E
    double PI -> PI
    double HALF_PI -> HALF_PI
    double TWO_PI -> TWO_PI
    double FOUR_PI -> FOUR_PI
    double PI_SQUARE -> PI_SQUARE
    double LOG2 -> LOG2
    double LOG10 -> LOG10
    double SQRT2 -> SQRT2
    double NaN -> NaN
    double Infinity -> Infinity
    double INV_LOG10 -> INV_LOG10
    double NORMALIZATION_FACTOR -> NORMALIZATION_FACTOR
    double[] atanhi -> atanhi
    double[] atanlo -> atanlo
    double[] aT -> aT
    double one -> one
    double huge -> huge
    double ln2_hi -> ln2_hi
    double ln2_lo -> ln2_lo
    double two54 -> two54
    double Lg1 -> Lg1
    double Lg2 -> Lg2
    double Lg3 -> Lg3
    double Lg4 -> Lg4
    double Lg5 -> Lg5
    double Lg6 -> Lg6
    double Lg7 -> Lg7
    double zero -> zero
    double[] halF -> halF
    double twom1000 -> twom1000
    double o_threshold -> o_threshold
    double u_threshold -> u_threshold
    double[] ln2HI -> ln2HI
    double[] ln2LO -> ln2LO
    double invln2 -> invln2
    double P1 -> P1
    double P2 -> P2
    double P3 -> P3
    double P4 -> P4
    double P5 -> P5
    int random(int,int) -> random
    long random(long,long) -> random
    float random(float,float) -> random
    double random(double,double) -> random
    int bitLength(int) -> bitLength
    int bitLength(long) -> bitLength
    int bitCount(long) -> bitCount
    int numberOfLeadingZeros(long) -> numberOfLeadingZeros
    int numberOfTrailingZeros(long) -> numberOfTrailingZeros
    int digitLength(int) -> digitLength
    int digitLength(long) -> digitLength
    double toDoublePow2(long,int) -> toDoublePow2
    double toDoublePow10(long,int) -> toDoublePow10
    long toLongPow2(double,int) -> toLongPow2
    long toLongPow10(double,int) -> toLongPow10
    int floorLog2(double) -> floorLog2
    int floorLog10(double) -> floorLog10
    double toRadians(double) -> toRadians
    double toDegrees(double) -> toDegrees
    double sqrt(double) -> sqrt
    double rem(double,double) -> rem
    double ceil(double) -> ceil
    double floor(double) -> floor
    double sin(double) -> sin
    double cos(double) -> cos
    double tan(double) -> tan
    double asin(double) -> asin
    double acos(double) -> acos
    double atan(double) -> atan
    double atan2(double,double) -> atan2
    double sinh(double) -> sinh
    double cosh(double) -> cosh
    double tanh(double) -> tanh
    double exp(double) -> exp
    double log(double) -> log
    double log10(double) -> log10
    double pow(double,double) -> pow
    int round(float) -> round
    long round(double) -> round
    double random() -> random
    int abs(int) -> abs
    long abs(long) -> abs
    float abs(float) -> abs
    double abs(double) -> abs
    int max(int,int) -> max
    long max(long,long) -> max
    float max(float,float) -> max
    double max(double,double) -> max
    int min(int,int) -> min
    long min(long,long) -> min
    float min(float,float) -> min
    double min(double,double) -> min
    double _atan(double) -> _atan
    double _ieee754_log(double) -> _ieee754_log
    double _ieee754_exp(double) -> _ieee754_exp
org.cocos2d.utils.javolution.TextBuilder -> org.cocos2d.utils.javolution.TextBuilder:
    int B0 -> B0
    int C0 -> C0
    int B1 -> B1
    int C1 -> C1
    int M1 -> M1
    char[] _low -> _low
    char[][] _high -> _high
    int _length -> _length
    int _capacity -> _capacity
    char[] DIGIT_TO_CHAR -> DIGIT_TO_CHAR
    long[] POW10_LONG -> POW10_LONG
    int length() -> length
    char charAt(int) -> charAt
    void getChars(int,int,char[],int) -> getChars
    void setCharAt(int,char) -> setCharAt
    void setLength(int) -> setLength
    void setLength(int,char) -> setLength
    java.lang.CharSequence subSequence(int,int) -> subSequence
    org.cocos2d.utils.javolution.TextBuilder append(char) -> append
    org.cocos2d.utils.javolution.TextBuilder append(java.lang.Object) -> append
    org.cocos2d.utils.javolution.TextBuilder appendNumber(java.lang.Object) -> appendNumber
    org.cocos2d.utils.javolution.TextBuilder append(java.lang.CharSequence) -> append
    org.cocos2d.utils.javolution.TextBuilder append(java.lang.CharSequence,int,int) -> append
    org.cocos2d.utils.javolution.TextBuilder append(java.lang.String) -> append
    org.cocos2d.utils.javolution.TextBuilder append(java.lang.String,int,int) -> append
    org.cocos2d.utils.javolution.TextBuilder append(char[]) -> append
    org.cocos2d.utils.javolution.TextBuilder append(char[],int,int) -> append
    org.cocos2d.utils.javolution.TextBuilder append(boolean) -> append
    org.cocos2d.utils.javolution.TextBuilder append(int) -> append
    org.cocos2d.utils.javolution.TextBuilder append(int,int) -> append
    void appendPositive(int,int) -> appendPositive
    org.cocos2d.utils.javolution.TextBuilder append(long) -> append
    org.cocos2d.utils.javolution.TextBuilder append(long,int) -> append
    void appendPositive(long,int) -> appendPositive
    org.cocos2d.utils.javolution.TextBuilder append(float) -> append
    org.cocos2d.utils.javolution.TextBuilder append(double) -> append
    org.cocos2d.utils.javolution.TextBuilder append(double,int,boolean,boolean) -> append
    void appendFraction(long,int,boolean) -> appendFraction
    org.cocos2d.utils.javolution.TextBuilder insert(int,java.lang.CharSequence) -> insert
    org.cocos2d.utils.javolution.TextBuilder clear() -> clear
    org.cocos2d.utils.javolution.TextBuilder delete(int,int) -> delete
    org.cocos2d.utils.javolution.TextBuilder reverse() -> reverse
    java.lang.String toString() -> toString
    void reset() -> reset
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void print(java.io.Writer) -> print
    void println(java.io.Writer) -> println
    boolean contentEquals(java.lang.CharSequence) -> contentEquals
    boolean contentEquals(java.lang.String) -> contentEquals
    void increaseCapacity() -> increaseCapacity
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
    java.lang.Appendable append(char) -> append
org.cocos2d.utils.pool.ConcOneClassPool -> org.cocos2d.utils.pool.ConcOneClassPool:
    org.cocos2d.utils.collections.ConcNodeCachingStack objs -> objs
    java.lang.Object allocate() -> allocate
    java.lang.Object get() -> get
    void free(java.lang.Object) -> free
org.cocos2d.utils.pool.ObjectPool -> org.cocos2d.utils.pool.ObjectPool:
    java.util.HashMap lists -> lists
    org.cocos2d.utils.pool.OneClassPool registerPool(java.lang.Class,org.cocos2d.utils.pool.OneClassPool) -> registerPool
    org.cocos2d.utils.pool.OneClassPool getPool(java.lang.Class) -> getPool
    void clearAll() -> clearAll
org.cocos2d.utils.pool.OneClassPool -> org.cocos2d.utils.pool.OneClassPool:
    java.util.ArrayList objs -> objs
    java.lang.Object allocate() -> allocate
    java.lang.Object get() -> get
    void free(java.lang.Object) -> free
    int size() -> size
    void clear() -> clear
